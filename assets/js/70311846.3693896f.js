"use strict";(self.webpackChunk_detekt_website=self.webpackChunk_detekt_website||[]).push([[4265],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,l=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),c=p(n),m=a,f=c["".concat(l,".").concat(m)]||c[m]||d[m]||s;return n?r.createElement(f,i(i({ref:t},u),{},{components:n})):r.createElement(f,i({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,i=new Array(s);i[0]=c;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var p=2;p<s;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},9236:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return o},metadata:function(){return p},toc:function(){return d}});var r=n(3117),a=n(102),s=(n(7294),n(3905)),i=["components"],o={id:"suppressing-rules",title:"Suppressing Issues",keywords:["suppressing","issues"],sidebar_position:6},l=void 0,p={unversionedId:"introduction/suppressing-rules",id:"version-1.23.1/introduction/suppressing-rules",title:"Suppressing Issues",description:"detekt supports the Java (@SuppressWarnings) and Kotlin (@Suppress) style suppression.",source:"@site/versioned_docs/version-1.23.1/introduction/suppressing-rules.md",sourceDirName:"introduction",slug:"/introduction/suppressing-rules",permalink:"/docs/introduction/suppressing-rules",draft:!1,editUrl:"https://github.com/detekt/detekt/edit/main/website/versioned_docs/version-1.23.1/introduction/suppressing-rules.md",tags:[],version:"1.23.1",sidebarPosition:6,frontMatter:{id:"suppressing-rules",title:"Suppressing Issues",keywords:["suppressing","issues"],sidebar_position:6},sidebar:"defaultSidebar",previous:{title:"Configuration for Compose",permalink:"/docs/introduction/compose"},next:{title:"Code Smell Baseline",permalink:"/docs/introduction/baseline"}},u={},d=[],c={toc:d};function m(e){var t=e.components,n=(0,a.Z)(e,i);return(0,s.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,(0,s.kt)("em",{parentName:"p"},"detekt")," supports the Java (",(0,s.kt)("inlineCode",{parentName:"p"},"@SuppressWarnings"),") and Kotlin (",(0,s.kt)("inlineCode",{parentName:"p"},"@Suppress"),") style suppression.\nIf both annotations are present, Kotlin's annotation is favored! "),(0,s.kt)("p",null,"To suppress an issue, the id of the rule must be written inside the values field of the annotation (e.g. ",(0,s.kt)("inlineCode",{parentName:"p"},'@Suppress("LongMethod")'),")."),(0,s.kt)("p",null,"If a ",(0,s.kt)("inlineCode",{parentName:"p"},"LargeClass")," is reported, but that is totally fine for you codebase, then just annotate it:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-kotlin"},'@Suppress("LargeClass") // or use complexity.LargeClass\nobject Constants {\n    ...\n}\n')),(0,s.kt)("p",null,"It is also possible to prefix the rule id with ",(0,s.kt)("inlineCode",{parentName:"p"},"detekt")," and/or the ruleset id such as ",(0,s.kt)("inlineCode",{parentName:"p"},'@Suppress("detekt:LongMethod")')," or ",(0,s.kt)("inlineCode",{parentName:"p"},'@Suppress("complexity:LongParameterList")'),". "),(0,s.kt)("p",null,"The following table shows the various supported suppression formats."),(0,s.kt)("table",null,(0,s.kt)("thead",{parentName:"table"},(0,s.kt)("tr",{parentName:"thead"},(0,s.kt)("th",{parentName:"tr",align:null},"Example Suppression"),(0,s.kt)("th",{parentName:"tr",align:null},"Description"))),(0,s.kt)("tbody",{parentName:"table"},(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("inlineCode",{parentName:"td"},"all"),", ",(0,s.kt)("inlineCode",{parentName:"td"},"detekt:all"),", ",(0,s.kt)("inlineCode",{parentName:"td"},"detekt.all")),(0,s.kt)("td",{parentName:"tr",align:null},"Suppresses all detekt findings.")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("inlineCode",{parentName:"td"},"style"),", ",(0,s.kt)("inlineCode",{parentName:"td"},"detekt:style"),", ",(0,s.kt)("inlineCode",{parentName:"td"},"detekt.style")),(0,s.kt)("td",{parentName:"tr",align:null},"Suppresses all findings from rules in the style rule set.")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},(0,s.kt)("inlineCode",{parentName:"td"},"MagicNumber"),", ",(0,s.kt)("inlineCode",{parentName:"td"},"style:MagicNumber"),", ",(0,s.kt)("inlineCode",{parentName:"td"},"style.MagicNumber"),", ",(0,s.kt)("inlineCode",{parentName:"td"},"detekt:style:MagicNumber"),", ",(0,s.kt)("inlineCode",{parentName:"td"},"detekt.style.MagicNumber")),(0,s.kt)("td",{parentName:"tr",align:null},"Suppresses all MagicNumber rule findings.")))),(0,s.kt)("p",null,"Some rules like ",(0,s.kt)("inlineCode",{parentName:"p"},"TooManyFunctions")," can only be suppressed by using a file level annotation ",(0,s.kt)("inlineCode",{parentName:"p"},'@file:Suppress("TooManyFunctions")'),"."),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Formatting rules suppression")),(0,s.kt)("p",null,"Please note that rules inside the ",(0,s.kt)("a",{parentName:"p",href:"/docs/rules/formatting"},(0,s.kt)("inlineCode",{parentName:"a"},"formatting"))," ruleset can only be suppressed at ",(0,s.kt)("strong",{parentName:"p"},"the file level"),"."),(0,s.kt)("p",null,"Rules inside this ruleset are wrappers around KtLint rules, and we don't have the same reporting capabilities that we offer for first party rules. For example, you can suppress the ",(0,s.kt)("a",{parentName:"p",href:"/docs/rules/formatting#maximumlinelength"},"MaximumLineLength")," rule only in your entire file with:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-kotlin"},'@file:Suppress("MaximumLineLength")\npackage com.example\n\nobject AClassWithLongLines {\n    //...\n}\n')),(0,s.kt)("p",null,"Several rules in the ",(0,s.kt)("a",{parentName:"p",href:"/docs/rules/formatting"},(0,s.kt)("inlineCode",{parentName:"a"},"formatting")),' ruleset also have a "first party" counterpart. For instance you can use the ',(0,s.kt)("a",{parentName:"p",href:"/docs/rules/style#maxlinelength"},(0,s.kt)("inlineCode",{parentName:"a"},"MaxLineLength"))," rule instead from the ",(0,s.kt)("a",{parentName:"p",href:"/docs/rules/style"},(0,s.kt)("inlineCode",{parentName:"a"},"style"))," ruleset."),(0,s.kt)("p",null,"For those rules, you can suppress the inspection also locally (on top of an expression, function, class, etc.)."))}m.isMDXComponent=!0}}]);