"use strict";(self.webpackChunk_detekt_website=self.webpackChunk_detekt_website||[]).push([[5962],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return f}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=r.createContext({}),s=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,u=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=s(n),f=o,m=d["".concat(u,".").concat(f)]||d[f]||p[f]||a;return n?r.createElement(m,l(l({ref:t},c),{},{components:n})):r.createElement(m,l({ref:t},c))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,l=new Array(a);l[0]=d;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var s=2;s<a;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9294:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return u},default:function(){return f},frontMatter:function(){return i},metadata:function(){return s},toc:function(){return p}});var r=n(3117),o=n(102),a=(n(7294),n(3905)),l=["components"],i={title:"Howto: configure detekt for gradle root project",published:!0,permalink:"howto-buildupondefaultconfig.html",summary:"Configure a new task based on _detekt_ to analyze the whole project on one run.",tags:["guides"]},u=void 0,s={permalink:"/blog/2019/03/03/configure-detekt-on-root-project",editUrl:"https://github.com/detekt/detekt/edit/main/website/blog/2019-03-03-configure-detekt-on-root-project.md",source:"@site/blog/2019-03-03-configure-detekt-on-root-project.md",title:"Howto: configure detekt for gradle root project",description:"When configuring detekt for your Gradle based project, you basically have two options:",date:"2019-03-03T00:00:00.000Z",formattedDate:"March 3, 2019",tags:[{label:"guides",permalink:"/blog/tags/guides"}],readingTime:1.155,hasTruncateMarker:!1,authors:[],frontMatter:{title:"Howto: configure detekt for gradle root project",published:!0,permalink:"howto-buildupondefaultconfig.html",summary:"Configure a new task based on _detekt_ to analyze the whole project on one run.",tags:["guides"]},prevItem:{title:"Howto: build upon the default yaml config file",permalink:"/blog/2019/03/03/build-upon-the-default-config"},nextItem:{title:"Website Online",permalink:"/blog/2018/02/11/website-online"}},c={authorsImageUrls:[]},p=[],d={toc:p};function f(e){var t=e.components,n=(0,o.Z)(e,l);return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"When configuring ",(0,a.kt)("em",{parentName:"p"},"detekt")," for your ",(0,a.kt)("em",{parentName:"p"},"Gradle")," based project, you basically have two options:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"for each sub module a new gradle task should be created"),(0,a.kt)("li",{parentName:"ul"},"or one ",(0,a.kt)("strong",{parentName:"li"},"uber"),"-task analyzes your whole project")),(0,a.kt)("p",null,"For the first option, please see how ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/detekt/detekt"},"detekt")," itself creates a task for each module:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-gradle"},'subprojecs {\n...\n    detekt {\n        debug = true\n        toolVersion = usedDetektVersion\n        buildUponDefaultConfig = true\n        config = files(project.rootDir.resolve("reports/failfast.yml"))\n        baseline = project.rootDir.resolve("reports/baseline.xml")\n    \n        reports {\n            xml.enabled = true\n            html.enabled = true\n        }\n    }\n}\n')),(0,a.kt)("p",null,"Sometimes it makes sense to add an additional ",(0,a.kt)("em",{parentName:"p"},"detekt")," task which runs over the whole project and produces one big report.\nSuch a setup could look like the following in its simplest form:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-gradle"},'plugins {\n    id "io.gitlab.arturbosch.detekt" version "1.0.0-RC14"\n}\n\nrepositories {\n    jcenter()\n}\n\ndetekt {\n    source = files(rootProject.rootDir)\n    buildUponDefaultConfig = true\n}\n')),(0,a.kt)("p",null,"Make sure to specify the ",(0,a.kt)("inlineCode",{parentName:"p"},"input")," parameter or no sources are found and ",(0,a.kt)("em",{parentName:"p"},"detekt")," won't run!"),(0,a.kt)("p",null,"If you need more fine grained ",(0,a.kt)("em",{parentName:"p"},"detekt")," tasks, you could register more tasks using the ",(0,a.kt)("em",{parentName:"p"},"Detekt")," task as the base task.\nUsing the ",(0,a.kt)("em",{parentName:"p"},"Kotlin-Dsl")," it could look like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-gradle"},'val detektAll by tasks.registering(Detekt::class) {\n    description = "Runs over whole code base without the starting overhead for each module."\n    parallel = true\n    buildUponDefaultConfig = true\n    setSource(files(projectDir))\n    config = files(project.rootDir.resolve("reports/failfast.yml"))\n    include("**/*.kt")\n    include("**/*.kts")\n    exclude("resources/")\n    exclude("build/")\n    baseline.set(project.rootDir.resolve("reports/baseline.xml"))\n    reports {\n        xml.enabled = false\n        html.enabled = false\n    }\n}\n')),(0,a.kt)("p",null,"{% include links.html %}"))}f.isMDXComponent=!0}}]);