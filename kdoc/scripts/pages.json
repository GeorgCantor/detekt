[{"name":"class FindingAssert(val actual: Finding?) : AbstractAssert<FindingAssert, Finding> ","description":"io.gitlab.arturbosch.detekt.test.FindingAssert","location":"detekt-test/io.gitlab.arturbosch.detekt.test/-finding-assert/index.html","searchKeys":["FindingAssert","class FindingAssert(val actual: Finding?) : AbstractAssert<FindingAssert, Finding> ","io.gitlab.arturbosch.detekt.test.FindingAssert"]},{"name":"class FindingsAssert(actual: List<Finding>) : AbstractListAssert<FindingsAssert, List<Finding>, Finding, FindingAssert> ","description":"io.gitlab.arturbosch.detekt.test.FindingsAssert","location":"detekt-test/io.gitlab.arturbosch.detekt.test/-findings-assert/index.html","searchKeys":["FindingsAssert","class FindingsAssert(actual: List<Finding>) : AbstractListAssert<FindingsAssert, List<Finding>, Finding, FindingAssert> ","io.gitlab.arturbosch.detekt.test.FindingsAssert"]},{"name":"constructor(actual: Finding?)","description":"io.gitlab.arturbosch.detekt.test.FindingAssert.FindingAssert","location":"detekt-test/io.gitlab.arturbosch.detekt.test/-finding-assert/-finding-assert.html","searchKeys":["FindingAssert","constructor(actual: Finding?)","io.gitlab.arturbosch.detekt.test.FindingAssert.FindingAssert"]},{"name":"constructor(actual: List<Finding>)","description":"io.gitlab.arturbosch.detekt.test.FindingsAssert.FindingsAssert","location":"detekt-test/io.gitlab.arturbosch.detekt.test/-findings-assert/-findings-assert.html","searchKeys":["FindingsAssert","constructor(actual: List<Finding>)","io.gitlab.arturbosch.detekt.test.FindingsAssert.FindingsAssert"]},{"name":"constructor(vararg pairs: Pair<String, Any>)","description":"io.gitlab.arturbosch.detekt.test.TestConfig.TestConfig","location":"detekt-test/io.gitlab.arturbosch.detekt.test/-test-config/-test-config.html","searchKeys":["TestConfig","constructor(vararg pairs: Pair<String, Any>)","io.gitlab.arturbosch.detekt.test.TestConfig.TestConfig"]},{"name":"fun BaseRule.compileAndLint(content: String): List<Finding>","description":"io.gitlab.arturbosch.detekt.test.compileAndLint","location":"detekt-test/io.gitlab.arturbosch.detekt.test/compile-and-lint.html","searchKeys":["compileAndLint","fun BaseRule.compileAndLint(content: String): List<Finding>","io.gitlab.arturbosch.detekt.test.compileAndLint"]},{"name":"fun BaseRule.compileAndLintWithContext(environment: KotlinCoreEnvironment, content: String): List<Finding>","description":"io.gitlab.arturbosch.detekt.test.compileAndLintWithContext","location":"detekt-test/io.gitlab.arturbosch.detekt.test/compile-and-lint-with-context.html","searchKeys":["compileAndLintWithContext","fun BaseRule.compileAndLintWithContext(environment: KotlinCoreEnvironment, content: String): List<Finding>","io.gitlab.arturbosch.detekt.test.compileAndLintWithContext"]},{"name":"fun BaseRule.lint(content: String): List<Finding>","description":"io.gitlab.arturbosch.detekt.test.lint","location":"detekt-test/io.gitlab.arturbosch.detekt.test/lint.html","searchKeys":["lint","fun BaseRule.lint(content: String): List<Finding>","io.gitlab.arturbosch.detekt.test.lint"]},{"name":"fun BaseRule.lint(ktFile: KtFile): List<Finding>","description":"io.gitlab.arturbosch.detekt.test.lint","location":"detekt-test/io.gitlab.arturbosch.detekt.test/lint.html","searchKeys":["lint","fun BaseRule.lint(ktFile: KtFile): List<Finding>","io.gitlab.arturbosch.detekt.test.lint"]},{"name":"fun BaseRule.lint(path: Path): List<Finding>","description":"io.gitlab.arturbosch.detekt.test.lint","location":"detekt-test/io.gitlab.arturbosch.detekt.test/lint.html","searchKeys":["lint","fun BaseRule.lint(path: Path): List<Finding>","io.gitlab.arturbosch.detekt.test.lint"]},{"name":"fun BaseRule.lintWithContext(environment: KotlinCoreEnvironment, content: String, vararg additionalContents: String): List<Finding>","description":"io.gitlab.arturbosch.detekt.test.lintWithContext","location":"detekt-test/io.gitlab.arturbosch.detekt.test/lint-with-context.html","searchKeys":["lintWithContext","fun BaseRule.lintWithContext(environment: KotlinCoreEnvironment, content: String, vararg additionalContents: String): List<Finding>","io.gitlab.arturbosch.detekt.test.lintWithContext"]},{"name":"fun KotlinCoreEnvironment.getContextForPaths(paths: List<KtFile>): BindingContext","description":"io.gitlab.arturbosch.detekt.test.getContextForPaths","location":"detekt-test/io.gitlab.arturbosch.detekt.test/get-context-for-paths.html","searchKeys":["getContextForPaths","fun KotlinCoreEnvironment.getContextForPaths(paths: List<KtFile>): BindingContext","io.gitlab.arturbosch.detekt.test.getContextForPaths"]},{"name":"fun List<Finding>.assert(): FindingsAssert","description":"io.gitlab.arturbosch.detekt.test.assert","location":"detekt-test/io.gitlab.arturbosch.detekt.test/assert.html","searchKeys":["assert","fun List<Finding>.assert(): FindingsAssert","io.gitlab.arturbosch.detekt.test.assert"]},{"name":"fun ValueWithReason.toConfig(): Map<String, String?>","description":"io.gitlab.arturbosch.detekt.test.toConfig","location":"detekt-test/io.gitlab.arturbosch.detekt.test/to-config.html","searchKeys":["toConfig","fun ValueWithReason.toConfig(): Map<String, String?>","io.gitlab.arturbosch.detekt.test.toConfig"]},{"name":"fun assertThat(finding: Finding): FindingAssert","description":"io.gitlab.arturbosch.detekt.test.assertThat","location":"detekt-test/io.gitlab.arturbosch.detekt.test/assert-that.html","searchKeys":["assertThat","fun assertThat(finding: Finding): FindingAssert","io.gitlab.arturbosch.detekt.test.assertThat"]},{"name":"fun assertThat(findings: List<Finding>): FindingsAssert","description":"io.gitlab.arturbosch.detekt.test.assertThat","location":"detekt-test/io.gitlab.arturbosch.detekt.test/assert-that.html","searchKeys":["assertThat","fun assertThat(findings: List<Finding>): FindingsAssert","io.gitlab.arturbosch.detekt.test.assertThat"]},{"name":"fun hasEndSourceLocation(line: Int, column: Int): FindingsAssert","description":"io.gitlab.arturbosch.detekt.test.FindingsAssert.hasEndSourceLocation","location":"detekt-test/io.gitlab.arturbosch.detekt.test/-findings-assert/has-end-source-location.html","searchKeys":["hasEndSourceLocation","fun hasEndSourceLocation(line: Int, column: Int): FindingsAssert","io.gitlab.arturbosch.detekt.test.FindingsAssert.hasEndSourceLocation"]},{"name":"fun hasEndSourceLocations(vararg expected: SourceLocation): FindingsAssert","description":"io.gitlab.arturbosch.detekt.test.FindingsAssert.hasEndSourceLocations","location":"detekt-test/io.gitlab.arturbosch.detekt.test/-findings-assert/has-end-source-locations.html","searchKeys":["hasEndSourceLocations","fun hasEndSourceLocations(vararg expected: SourceLocation): FindingsAssert","io.gitlab.arturbosch.detekt.test.FindingsAssert.hasEndSourceLocations"]},{"name":"fun hasMessage(expectedMessage: String): FindingAssert","description":"io.gitlab.arturbosch.detekt.test.FindingAssert.hasMessage","location":"detekt-test/io.gitlab.arturbosch.detekt.test/-finding-assert/has-message.html","searchKeys":["hasMessage","fun hasMessage(expectedMessage: String): FindingAssert","io.gitlab.arturbosch.detekt.test.FindingAssert.hasMessage"]},{"name":"fun hasSourceLocation(line: Int, column: Int): FindingAssert","description":"io.gitlab.arturbosch.detekt.test.FindingAssert.hasSourceLocation","location":"detekt-test/io.gitlab.arturbosch.detekt.test/-finding-assert/has-source-location.html","searchKeys":["hasSourceLocation","fun hasSourceLocation(line: Int, column: Int): FindingAssert","io.gitlab.arturbosch.detekt.test.FindingAssert.hasSourceLocation"]},{"name":"fun hasStartSourceLocation(line: Int, column: Int): FindingsAssert","description":"io.gitlab.arturbosch.detekt.test.FindingsAssert.hasStartSourceLocation","location":"detekt-test/io.gitlab.arturbosch.detekt.test/-findings-assert/has-start-source-location.html","searchKeys":["hasStartSourceLocation","fun hasStartSourceLocation(line: Int, column: Int): FindingsAssert","io.gitlab.arturbosch.detekt.test.FindingsAssert.hasStartSourceLocation"]},{"name":"fun hasStartSourceLocations(vararg expected: SourceLocation): FindingsAssert","description":"io.gitlab.arturbosch.detekt.test.FindingsAssert.hasStartSourceLocations","location":"detekt-test/io.gitlab.arturbosch.detekt.test/-findings-assert/has-start-source-locations.html","searchKeys":["hasStartSourceLocations","fun hasStartSourceLocations(vararg expected: SourceLocation): FindingsAssert","io.gitlab.arturbosch.detekt.test.FindingsAssert.hasStartSourceLocations"]},{"name":"fun hasTextLocations(vararg expected: Pair<Int, Int>): FindingsAssert","description":"io.gitlab.arturbosch.detekt.test.FindingsAssert.hasTextLocations","location":"detekt-test/io.gitlab.arturbosch.detekt.test/-findings-assert/has-text-locations.html","searchKeys":["hasTextLocations","fun hasTextLocations(vararg expected: Pair<Int, Int>): FindingsAssert","io.gitlab.arturbosch.detekt.test.FindingsAssert.hasTextLocations"]},{"name":"fun hasTextLocations(vararg expected: String): FindingsAssert","description":"io.gitlab.arturbosch.detekt.test.FindingsAssert.hasTextLocations","location":"detekt-test/io.gitlab.arturbosch.detekt.test/-findings-assert/has-text-locations.html","searchKeys":["hasTextLocations","fun hasTextLocations(vararg expected: String): FindingsAssert","io.gitlab.arturbosch.detekt.test.FindingsAssert.hasTextLocations"]},{"name":"fun yamlConfig(name: String): Config","description":"io.gitlab.arturbosch.detekt.test.yamlConfig","location":"detekt-test/io.gitlab.arturbosch.detekt.test/yaml-config.html","searchKeys":["yamlConfig","fun yamlConfig(name: String): Config","io.gitlab.arturbosch.detekt.test.yamlConfig"]},{"name":"fun yamlConfigFromContent(content: String): Config","description":"io.gitlab.arturbosch.detekt.test.yamlConfigFromContent","location":"detekt-test/io.gitlab.arturbosch.detekt.test/yaml-config-from-content.html","searchKeys":["yamlConfigFromContent","fun yamlConfigFromContent(content: String): Config","io.gitlab.arturbosch.detekt.test.yamlConfigFromContent"]},{"name":"inline fun <T : RuleSetProvider> loadRuleSet(config: Config = Config.empty): RuleSet","description":"io.gitlab.arturbosch.detekt.test.loadRuleSet","location":"detekt-test/io.gitlab.arturbosch.detekt.test/load-rule-set.html","searchKeys":["loadRuleSet","inline fun <T : RuleSetProvider> loadRuleSet(config: Config = Config.empty): RuleSet","io.gitlab.arturbosch.detekt.test.loadRuleSet"]},{"name":"open class TestConfig(pairs: Pair<String, Any>) : Config","description":"io.gitlab.arturbosch.detekt.test.TestConfig","location":"detekt-test/io.gitlab.arturbosch.detekt.test/-test-config/index.html","searchKeys":["TestConfig","open class TestConfig(pairs: Pair<String, Any>) : Config","io.gitlab.arturbosch.detekt.test.TestConfig"]},{"name":"open override fun <T : Any> valueOrDefault(key: String, default: T): T","description":"io.gitlab.arturbosch.detekt.test.TestConfig.valueOrDefault","location":"detekt-test/io.gitlab.arturbosch.detekt.test/-test-config/value-or-default.html","searchKeys":["valueOrDefault","open override fun <T : Any> valueOrDefault(key: String, default: T): T","io.gitlab.arturbosch.detekt.test.TestConfig.valueOrDefault"]},{"name":"open override fun <T : Any> valueOrNull(key: String): T?","description":"io.gitlab.arturbosch.detekt.test.TestConfig.valueOrNull","location":"detekt-test/io.gitlab.arturbosch.detekt.test/-test-config/value-or-null.html","searchKeys":["valueOrNull","open override fun <T : Any> valueOrNull(key: String): T?","io.gitlab.arturbosch.detekt.test.TestConfig.valueOrNull"]},{"name":"open override fun subConfig(key: String): TestConfig","description":"io.gitlab.arturbosch.detekt.test.TestConfig.subConfig","location":"detekt-test/io.gitlab.arturbosch.detekt.test/-test-config/sub-config.html","searchKeys":["subConfig","open override fun subConfig(key: String): TestConfig","io.gitlab.arturbosch.detekt.test.TestConfig.subConfig"]},{"name":"val actual: Finding?","description":"io.gitlab.arturbosch.detekt.test.FindingAssert.actual","location":"detekt-test/io.gitlab.arturbosch.detekt.test/-finding-assert/actual.html","searchKeys":["actual","val actual: Finding?","io.gitlab.arturbosch.detekt.test.FindingAssert.actual"]},{"name":"ERROR","description":"io.gitlab.arturbosch.detekt.api.Severity.ERROR","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-severity/-e-r-r-o-r/index.html","searchKeys":["ERROR","ERROR","io.gitlab.arturbosch.detekt.api.Severity.ERROR"]},{"name":"Error","description":"io.gitlab.arturbosch.detekt.api.Notification.Level.Error","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-notification/-level/-error/index.html","searchKeys":["Error","Error","io.gitlab.arturbosch.detekt.api.Notification.Level.Error"]},{"name":"INFO","description":"io.gitlab.arturbosch.detekt.api.Severity.INFO","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-severity/-i-n-f-o/index.html","searchKeys":["INFO","INFO","io.gitlab.arturbosch.detekt.api.Severity.INFO"]},{"name":"Info","description":"io.gitlab.arturbosch.detekt.api.Notification.Level.Info","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-notification/-level/-info/index.html","searchKeys":["Info","Info","io.gitlab.arturbosch.detekt.api.Notification.Level.Info"]},{"name":"WARNING","description":"io.gitlab.arturbosch.detekt.api.Severity.WARNING","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-severity/-w-a-r-n-i-n-g/index.html","searchKeys":["WARNING","WARNING","io.gitlab.arturbosch.detekt.api.Severity.WARNING"]},{"name":"Warning","description":"io.gitlab.arturbosch.detekt.api.Notification.Level.Warning","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-notification/-level/-warning/index.html","searchKeys":["Warning","Warning","io.gitlab.arturbosch.detekt.api.Notification.Level.Warning"]},{"name":"abstract class BaseRule(context: Context = DefaultContext()) : DetektVisitor, Context","description":"io.gitlab.arturbosch.detekt.api.BaseRule","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-base-rule/index.html","searchKeys":["BaseRule","abstract class BaseRule(context: Context = DefaultContext()) : DetektVisitor, Context","io.gitlab.arturbosch.detekt.api.BaseRule"]},{"name":"abstract class ConsoleReport : Extension","description":"io.gitlab.arturbosch.detekt.api.ConsoleReport","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-console-report/index.html","searchKeys":["ConsoleReport","abstract class ConsoleReport : Extension","io.gitlab.arturbosch.detekt.api.ConsoleReport"]},{"name":"abstract class OutputReport : Extension","description":"io.gitlab.arturbosch.detekt.api.OutputReport","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-output-report/index.html","searchKeys":["OutputReport","abstract class OutputReport : Extension","io.gitlab.arturbosch.detekt.api.OutputReport"]},{"name":"abstract class Rule(val ruleSetConfig: Config = Config.empty, ruleContext: Context = DefaultContext()) : BaseRule, ConfigAware","description":"io.gitlab.arturbosch.detekt.api.Rule","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-rule/index.html","searchKeys":["Rule","abstract class Rule(val ruleSetConfig: Config = Config.empty, ruleContext: Context = DefaultContext()) : BaseRule, ConfigAware","io.gitlab.arturbosch.detekt.api.Rule"]},{"name":"abstract fun <T : Any> valueOrNull(key: String): T?","description":"io.gitlab.arturbosch.detekt.api.Config.valueOrNull","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-config/value-or-null.html","searchKeys":["valueOrNull","abstract fun <T : Any> valueOrNull(key: String): T?","io.gitlab.arturbosch.detekt.api.Config.valueOrNull"]},{"name":"abstract fun add(notification: Notification)","description":"io.gitlab.arturbosch.detekt.api.Detektion.add","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-detektion/add.html","searchKeys":["add","abstract fun add(notification: Notification)","io.gitlab.arturbosch.detekt.api.Detektion.add"]},{"name":"abstract fun add(projectMetric: ProjectMetric)","description":"io.gitlab.arturbosch.detekt.api.Detektion.add","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-detektion/add.html","searchKeys":["add","abstract fun add(projectMetric: ProjectMetric)","io.gitlab.arturbosch.detekt.api.Detektion.add"]},{"name":"abstract fun clearFindings()","description":"io.gitlab.arturbosch.detekt.api.Context.clearFindings","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-context/clear-findings.html","searchKeys":["clearFindings","abstract fun clearFindings()","io.gitlab.arturbosch.detekt.api.Context.clearFindings"]},{"name":"abstract fun compact(): String","description":"io.gitlab.arturbosch.detekt.api.Compactable.compact","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-compactable/compact.html","searchKeys":["compact","abstract fun compact(): String","io.gitlab.arturbosch.detekt.api.Compactable.compact"]},{"name":"abstract fun instance(config: Config): RuleSet","description":"io.gitlab.arturbosch.detekt.api.RuleSetProvider.instance","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-rule-set-provider/instance.html","searchKeys":["instance","abstract fun instance(config: Config): RuleSet","io.gitlab.arturbosch.detekt.api.RuleSetProvider.instance"]},{"name":"abstract fun messageOrDescription(): String","description":"io.gitlab.arturbosch.detekt.api.Finding.messageOrDescription","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-finding/message-or-description.html","searchKeys":["messageOrDescription","abstract fun messageOrDescription(): String","io.gitlab.arturbosch.detekt.api.Finding.messageOrDescription"]},{"name":"abstract fun register(key: String, value: Any)","description":"io.gitlab.arturbosch.detekt.api.PropertiesAware.register","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-properties-aware/register.html","searchKeys":["register","abstract fun register(key: String, value: Any)","io.gitlab.arturbosch.detekt.api.PropertiesAware.register"]},{"name":"abstract fun render(detektion: Detektion): String?","description":"io.gitlab.arturbosch.detekt.api.ConsoleReport.render","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-console-report/render.html","searchKeys":["render","abstract fun render(detektion: Detektion): String?","io.gitlab.arturbosch.detekt.api.ConsoleReport.render"]},{"name":"abstract fun render(detektion: Detektion): String?","description":"io.gitlab.arturbosch.detekt.api.OutputReport.render","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-output-report/render.html","searchKeys":["render","abstract fun render(detektion: Detektion): String?","io.gitlab.arturbosch.detekt.api.OutputReport.render"]},{"name":"abstract fun subConfig(key: String): Config","description":"io.gitlab.arturbosch.detekt.api.Config.subConfig","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-config/sub-config.html","searchKeys":["subConfig","abstract fun subConfig(key: String): Config","io.gitlab.arturbosch.detekt.api.Config.subConfig"]},{"name":"abstract fun validate(config: Config): Collection<Notification>","description":"io.gitlab.arturbosch.detekt.api.ConfigValidator.validate","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-config-validator/validate.html","searchKeys":["validate","abstract fun validate(config: Config): Collection<Notification>","io.gitlab.arturbosch.detekt.api.ConfigValidator.validate"]},{"name":"abstract fun visitCondition(root: KtFile): Boolean","description":"io.gitlab.arturbosch.detekt.api.BaseRule.visitCondition","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-base-rule/visit-condition.html","searchKeys":["visitCondition","abstract fun visitCondition(root: KtFile): Boolean","io.gitlab.arturbosch.detekt.api.BaseRule.visitCondition"]},{"name":"abstract val config: Config","description":"io.gitlab.arturbosch.detekt.api.SetupContext.config","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-setup-context/config.html","searchKeys":["config","abstract val config: Config","io.gitlab.arturbosch.detekt.api.SetupContext.config"]},{"name":"abstract val configUris: Collection<URI>","description":"io.gitlab.arturbosch.detekt.api.SetupContext.configUris","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-setup-context/config-uris.html","searchKeys":["configUris","abstract val configUris: Collection<URI>","io.gitlab.arturbosch.detekt.api.SetupContext.configUris"]},{"name":"abstract val ending: String","description":"io.gitlab.arturbosch.detekt.api.OutputReport.ending","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-output-report/ending.html","searchKeys":["ending","abstract val ending: String","io.gitlab.arturbosch.detekt.api.OutputReport.ending"]},{"name":"abstract val entity: Entity","description":"io.gitlab.arturbosch.detekt.api.HasEntity.entity","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-has-entity/entity.html","searchKeys":["entity","abstract val entity: Entity","io.gitlab.arturbosch.detekt.api.HasEntity.entity"]},{"name":"abstract val errorChannel: Appendable","description":"io.gitlab.arturbosch.detekt.api.SetupContext.errorChannel","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-setup-context/error-channel.html","searchKeys":["errorChannel","abstract val errorChannel: Appendable","io.gitlab.arturbosch.detekt.api.SetupContext.errorChannel"]},{"name":"abstract val findings: List<Finding>","description":"io.gitlab.arturbosch.detekt.api.Context.findings","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-context/findings.html","searchKeys":["findings","abstract val findings: List<Finding>","io.gitlab.arturbosch.detekt.api.Context.findings"]},{"name":"abstract val findings: Map<RuleSetId, List<Finding>>","description":"io.gitlab.arturbosch.detekt.api.Detektion.findings","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-detektion/findings.html","searchKeys":["findings","abstract val findings: Map<RuleSetId, List<Finding>>","io.gitlab.arturbosch.detekt.api.Detektion.findings"]},{"name":"abstract val id: String","description":"io.gitlab.arturbosch.detekt.api.Extension.id","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-extension/id.html","searchKeys":["id","abstract val id: String","io.gitlab.arturbosch.detekt.api.Extension.id"]},{"name":"abstract val id: String","description":"io.gitlab.arturbosch.detekt.api.Finding.id","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-finding/id.html","searchKeys":["id","abstract val id: String","io.gitlab.arturbosch.detekt.api.Finding.id"]},{"name":"abstract val issue: Issue","description":"io.gitlab.arturbosch.detekt.api.Finding.issue","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-finding/issue.html","searchKeys":["issue","abstract val issue: Issue","io.gitlab.arturbosch.detekt.api.Finding.issue"]},{"name":"abstract val issue: Issue","description":"io.gitlab.arturbosch.detekt.api.Rule.issue","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-rule/issue.html","searchKeys":["issue","abstract val issue: Issue","io.gitlab.arturbosch.detekt.api.Rule.issue"]},{"name":"abstract val level: Notification.Level","description":"io.gitlab.arturbosch.detekt.api.Notification.level","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-notification/level.html","searchKeys":["level","abstract val level: Notification.Level","io.gitlab.arturbosch.detekt.api.Notification.level"]},{"name":"abstract val message: String","description":"io.gitlab.arturbosch.detekt.api.Finding.message","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-finding/message.html","searchKeys":["message","abstract val message: String","io.gitlab.arturbosch.detekt.api.Finding.message"]},{"name":"abstract val message: String","description":"io.gitlab.arturbosch.detekt.api.Notification.message","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-notification/message.html","searchKeys":["message","abstract val message: String","io.gitlab.arturbosch.detekt.api.Notification.message"]},{"name":"abstract val metrics: Collection<ProjectMetric>","description":"io.gitlab.arturbosch.detekt.api.Detektion.metrics","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-detektion/metrics.html","searchKeys":["metrics","abstract val metrics: Collection<ProjectMetric>","io.gitlab.arturbosch.detekt.api.Detektion.metrics"]},{"name":"abstract val notifications: Collection<Notification>","description":"io.gitlab.arturbosch.detekt.api.Detektion.notifications","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-detektion/notifications.html","searchKeys":["notifications","abstract val notifications: Collection<Notification>","io.gitlab.arturbosch.detekt.api.Detektion.notifications"]},{"name":"abstract val outputChannel: Appendable","description":"io.gitlab.arturbosch.detekt.api.SetupContext.outputChannel","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-setup-context/output-channel.html","searchKeys":["outputChannel","abstract val outputChannel: Appendable","io.gitlab.arturbosch.detekt.api.SetupContext.outputChannel"]},{"name":"abstract val properties: Map<String, Any?>","description":"io.gitlab.arturbosch.detekt.api.PropertiesAware.properties","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-properties-aware/properties.html","searchKeys":["properties","abstract val properties: Map<String, Any?>","io.gitlab.arturbosch.detekt.api.PropertiesAware.properties"]},{"name":"abstract val references: List<Entity>","description":"io.gitlab.arturbosch.detekt.api.Finding.references","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-finding/references.html","searchKeys":["references","abstract val references: List<Entity>","io.gitlab.arturbosch.detekt.api.Finding.references"]},{"name":"abstract val ruleId: RuleId","description":"io.gitlab.arturbosch.detekt.api.ConfigAware.ruleId","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-config-aware/rule-id.html","searchKeys":["ruleId","abstract val ruleId: RuleId","io.gitlab.arturbosch.detekt.api.ConfigAware.ruleId"]},{"name":"abstract val ruleSetConfig: Config","description":"io.gitlab.arturbosch.detekt.api.ConfigAware.ruleSetConfig","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-config-aware/rule-set-config.html","searchKeys":["ruleSetConfig","abstract val ruleSetConfig: Config","io.gitlab.arturbosch.detekt.api.ConfigAware.ruleSetConfig"]},{"name":"abstract val ruleSetId: String","description":"io.gitlab.arturbosch.detekt.api.RuleSetProvider.ruleSetId","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-rule-set-provider/rule-set-id.html","searchKeys":["ruleSetId","abstract val ruleSetId: String","io.gitlab.arturbosch.detekt.api.RuleSetProvider.ruleSetId"]},{"name":"annotation class ActiveByDefault(val since: String)","description":"io.gitlab.arturbosch.detekt.api.internal.ActiveByDefault","location":"detekt-api/io.gitlab.arturbosch.detekt.api.internal/-active-by-default/index.html","searchKeys":["ActiveByDefault","annotation class ActiveByDefault(val since: String)","io.gitlab.arturbosch.detekt.api.internal.ActiveByDefault"]},{"name":"annotation class AutoCorrectable(val since: String)","description":"io.gitlab.arturbosch.detekt.api.internal.AutoCorrectable","location":"detekt-api/io.gitlab.arturbosch.detekt.api.internal/-auto-correctable/index.html","searchKeys":["AutoCorrectable","annotation class AutoCorrectable(val since: String)","io.gitlab.arturbosch.detekt.api.internal.AutoCorrectable"]},{"name":"annotation class Configuration(val description: String)","description":"io.gitlab.arturbosch.detekt.api.internal.Configuration","location":"detekt-api/io.gitlab.arturbosch.detekt.api.internal/-configuration/index.html","searchKeys":["Configuration","annotation class Configuration(val description: String)","io.gitlab.arturbosch.detekt.api.internal.Configuration"]},{"name":"annotation class RequiresTypeResolution","description":"io.gitlab.arturbosch.detekt.api.internal.RequiresTypeResolution","location":"detekt-api/io.gitlab.arturbosch.detekt.api.internal/-requires-type-resolution/index.html","searchKeys":["RequiresTypeResolution","annotation class RequiresTypeResolution","io.gitlab.arturbosch.detekt.api.internal.RequiresTypeResolution"]},{"name":"annotation class UnstableApi(val reason: String = \"\")","description":"io.gitlab.arturbosch.detekt.api.UnstableApi","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-unstable-api/index.html","searchKeys":["UnstableApi","annotation class UnstableApi(val reason: String = \"\")","io.gitlab.arturbosch.detekt.api.UnstableApi"]},{"name":"class AnnotationExcluder(root: KtFile, excludes: List<Regex>, context: BindingContext)","description":"io.gitlab.arturbosch.detekt.api.AnnotationExcluder","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-annotation-excluder/index.html","searchKeys":["AnnotationExcluder","class AnnotationExcluder(root: KtFile, excludes: List<Regex>, context: BindingContext)","io.gitlab.arturbosch.detekt.api.AnnotationExcluder"]},{"name":"class Debt(val days: Int = 0, val hours: Int = 0, val mins: Int = 0)","description":"io.gitlab.arturbosch.detekt.api.Debt","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-debt/index.html","searchKeys":["Debt","class Debt(val days: Int = 0, val hours: Int = 0, val mins: Int = 0)","io.gitlab.arturbosch.detekt.api.Debt"]},{"name":"class Entity(val name: String, val signature: String, val location: Location, val ktElement: KtElement? = null) : Compactable","description":"io.gitlab.arturbosch.detekt.api.Entity","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-entity/index.html","searchKeys":["Entity","class Entity(val name: String, val signature: String, val location: Location, val ktElement: KtElement? = null) : Compactable","io.gitlab.arturbosch.detekt.api.Entity"]},{"name":"class InvalidConfigurationError(throwable: Throwable? = null) : RuntimeException","description":"io.gitlab.arturbosch.detekt.api.Config.InvalidConfigurationError","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-config/-invalid-configuration-error/index.html","searchKeys":["InvalidConfigurationError","class InvalidConfigurationError(throwable: Throwable? = null) : RuntimeException","io.gitlab.arturbosch.detekt.api.Config.InvalidConfigurationError"]},{"name":"class Issue(val id: String, val description: String, val debt: Debt)","description":"io.gitlab.arturbosch.detekt.api.Issue","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-issue/index.html","searchKeys":["Issue","class Issue(val id: String, val description: String, val debt: Debt)","io.gitlab.arturbosch.detekt.api.Issue"]},{"name":"class Location(val source: SourceLocation, val endSource: SourceLocation = source, val text: TextLocation, val filePath: FilePath) : Compactable","description":"io.gitlab.arturbosch.detekt.api.Location","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-location/index.html","searchKeys":["Location","class Location(val source: SourceLocation, val endSource: SourceLocation = source, val text: TextLocation, val filePath: FilePath) : Compactable","io.gitlab.arturbosch.detekt.api.Location"]},{"name":"class PathFilters","description":"io.gitlab.arturbosch.detekt.api.internal.PathFilters","location":"detekt-api/io.gitlab.arturbosch.detekt.api.internal/-path-filters/index.html","searchKeys":["PathFilters","class PathFilters","io.gitlab.arturbosch.detekt.api.internal.PathFilters"]},{"name":"class RuleSet(val id: RuleSetId, val rules: List<BaseRule>)","description":"io.gitlab.arturbosch.detekt.api.RuleSet","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-rule-set/index.html","searchKeys":["RuleSet","class RuleSet(val id: RuleSetId, val rules: List<BaseRule>)","io.gitlab.arturbosch.detekt.api.RuleSet"]},{"name":"class SourceLocation(val line: Int, val column: Int)","description":"io.gitlab.arturbosch.detekt.api.SourceLocation","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-source-location/index.html","searchKeys":["SourceLocation","class SourceLocation(val line: Int, val column: Int)","io.gitlab.arturbosch.detekt.api.SourceLocation"]},{"name":"class TextLocation(val start: Int, val end: Int)","description":"io.gitlab.arturbosch.detekt.api.TextLocation","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-text-location/index.html","searchKeys":["TextLocation","class TextLocation(val start: Int, val end: Int)","io.gitlab.arturbosch.detekt.api.TextLocation"]},{"name":"class ValueWithReason(val value: String, val reason: String? = null)","description":"io.gitlab.arturbosch.detekt.api.ValueWithReason","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-value-with-reason/index.html","searchKeys":["ValueWithReason","class ValueWithReason(val value: String, val reason: String? = null)","io.gitlab.arturbosch.detekt.api.ValueWithReason"]},{"name":"class ValuesWithReason : Iterable<ValueWithReason> ","description":"io.gitlab.arturbosch.detekt.api.ValuesWithReason","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-values-with-reason/index.html","searchKeys":["ValuesWithReason","class ValuesWithReason : Iterable<ValueWithReason> ","io.gitlab.arturbosch.detekt.api.ValuesWithReason"]},{"name":"const val ACTIVE_KEY: String","description":"io.gitlab.arturbosch.detekt.api.Config.Companion.ACTIVE_KEY","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-config/-companion/-a-c-t-i-v-e_-k-e-y.html","searchKeys":["ACTIVE_KEY","const val ACTIVE_KEY: String","io.gitlab.arturbosch.detekt.api.Config.Companion.ACTIVE_KEY"]},{"name":"const val AUTO_CORRECT_KEY: String","description":"io.gitlab.arturbosch.detekt.api.Config.Companion.AUTO_CORRECT_KEY","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-config/-companion/-a-u-t-o_-c-o-r-r-e-c-t_-k-e-y.html","searchKeys":["AUTO_CORRECT_KEY","const val AUTO_CORRECT_KEY: String","io.gitlab.arturbosch.detekt.api.Config.Companion.AUTO_CORRECT_KEY"]},{"name":"const val CONFIG_SEPARATOR: String","description":"io.gitlab.arturbosch.detekt.api.Config.Companion.CONFIG_SEPARATOR","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-config/-companion/-c-o-n-f-i-g_-s-e-p-a-r-a-t-o-r.html","searchKeys":["CONFIG_SEPARATOR","const val CONFIG_SEPARATOR: String","io.gitlab.arturbosch.detekt.api.Config.Companion.CONFIG_SEPARATOR"]},{"name":"const val EXCLUDES_KEY: String","description":"io.gitlab.arturbosch.detekt.api.Config.Companion.EXCLUDES_KEY","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-config/-companion/-e-x-c-l-u-d-e-s_-k-e-y.html","searchKeys":["EXCLUDES_KEY","const val EXCLUDES_KEY: String","io.gitlab.arturbosch.detekt.api.Config.Companion.EXCLUDES_KEY"]},{"name":"const val INCLUDES_KEY: String","description":"io.gitlab.arturbosch.detekt.api.Config.Companion.INCLUDES_KEY","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-config/-companion/-i-n-c-l-u-d-e-s_-k-e-y.html","searchKeys":["INCLUDES_KEY","const val INCLUDES_KEY: String","io.gitlab.arturbosch.detekt.api.Config.Companion.INCLUDES_KEY"]},{"name":"const val SEVERITY_KEY: String","description":"io.gitlab.arturbosch.detekt.api.Config.Companion.SEVERITY_KEY","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-config/-companion/-s-e-v-e-r-i-t-y_-k-e-y.html","searchKeys":["SEVERITY_KEY","const val SEVERITY_KEY: String","io.gitlab.arturbosch.detekt.api.Config.Companion.SEVERITY_KEY"]},{"name":"constructor()","description":"io.gitlab.arturbosch.detekt.api.ConsoleReport.ConsoleReport","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-console-report/-console-report.html","searchKeys":["ConsoleReport","constructor()","io.gitlab.arturbosch.detekt.api.ConsoleReport.ConsoleReport"]},{"name":"constructor()","description":"io.gitlab.arturbosch.detekt.api.DetektVisitor.DetektVisitor","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-detekt-visitor/-detekt-visitor.html","searchKeys":["DetektVisitor","constructor()","io.gitlab.arturbosch.detekt.api.DetektVisitor.DetektVisitor"]},{"name":"constructor()","description":"io.gitlab.arturbosch.detekt.api.OutputReport.OutputReport","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-output-report/-output-report.html","searchKeys":["OutputReport","constructor()","io.gitlab.arturbosch.detekt.api.OutputReport.OutputReport"]},{"name":"constructor(context: Context = DefaultContext())","description":"io.gitlab.arturbosch.detekt.api.BaseRule.BaseRule","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-base-rule/-base-rule.html","searchKeys":["BaseRule","constructor(context: Context = DefaultContext())","io.gitlab.arturbosch.detekt.api.BaseRule.BaseRule"]},{"name":"constructor(days: Int = 0, hours: Int = 0, mins: Int = 0)","description":"io.gitlab.arturbosch.detekt.api.Debt.Debt","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-debt/-debt.html","searchKeys":["Debt","constructor(days: Int = 0, hours: Int = 0, mins: Int = 0)","io.gitlab.arturbosch.detekt.api.Debt.Debt"]},{"name":"constructor(id: RuleSetId, rules: List<BaseRule>)","description":"io.gitlab.arturbosch.detekt.api.RuleSet.RuleSet","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-rule-set/-rule-set.html","searchKeys":["RuleSet","constructor(id: RuleSetId, rules: List<BaseRule>)","io.gitlab.arturbosch.detekt.api.RuleSet.RuleSet"]},{"name":"constructor(id: String, description: String, debt: Debt)","description":"io.gitlab.arturbosch.detekt.api.Issue.Issue","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-issue/-issue.html","searchKeys":["Issue","constructor(id: String, description: String, debt: Debt)","io.gitlab.arturbosch.detekt.api.Issue.Issue"]},{"name":"constructor(issue: Issue, entity: Entity, message: String, references: List<Entity> = emptyList())","description":"io.gitlab.arturbosch.detekt.api.CodeSmell.CodeSmell","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-code-smell/-code-smell.html","searchKeys":["CodeSmell","constructor(issue: Issue, entity: Entity, message: String, references: List<Entity> = emptyList())","io.gitlab.arturbosch.detekt.api.CodeSmell.CodeSmell"]},{"name":"constructor(issue: Issue, entity: Entity, message: String, references: List<Entity> = emptyList(), autoCorrectEnabled: Boolean)","description":"io.gitlab.arturbosch.detekt.api.CorrectableCodeSmell.CorrectableCodeSmell","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-correctable-code-smell/-correctable-code-smell.html","searchKeys":["CorrectableCodeSmell","constructor(issue: Issue, entity: Entity, message: String, references: List<Entity> = emptyList(), autoCorrectEnabled: Boolean)","io.gitlab.arturbosch.detekt.api.CorrectableCodeSmell.CorrectableCodeSmell"]},{"name":"constructor(languageVersionSettings: LanguageVersionSettings, dataFlowValueFactory: DataFlowValueFactory)","description":"io.gitlab.arturbosch.detekt.api.internal.CompilerResources.CompilerResources","location":"detekt-api/io.gitlab.arturbosch.detekt.api.internal/-compiler-resources/-compiler-resources.html","searchKeys":["CompilerResources","constructor(languageVersionSettings: LanguageVersionSettings, dataFlowValueFactory: DataFlowValueFactory)","io.gitlab.arturbosch.detekt.api.internal.CompilerResources.CompilerResources"]},{"name":"constructor(line: Int, column: Int)","description":"io.gitlab.arturbosch.detekt.api.SourceLocation.SourceLocation","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-source-location/-source-location.html","searchKeys":["SourceLocation","constructor(line: Int, column: Int)","io.gitlab.arturbosch.detekt.api.SourceLocation.SourceLocation"]},{"name":"constructor(name: String, signature: String, location: Location, ktElement: KtElement? = null)","description":"io.gitlab.arturbosch.detekt.api.Entity.Entity","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-entity/-entity.html","searchKeys":["Entity","constructor(name: String, signature: String, location: Location, ktElement: KtElement? = null)","io.gitlab.arturbosch.detekt.api.Entity.Entity"]},{"name":"constructor(root: KtFile, excludes: List<Regex>, context: BindingContext)","description":"io.gitlab.arturbosch.detekt.api.AnnotationExcluder.AnnotationExcluder","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-annotation-excluder/-annotation-excluder.html","searchKeys":["AnnotationExcluder","constructor(root: KtFile, excludes: List<Regex>, context: BindingContext)","io.gitlab.arturbosch.detekt.api.AnnotationExcluder.AnnotationExcluder"]},{"name":"constructor(ruleSetConfig: Config = Config.empty, ruleContext: Context = DefaultContext())","description":"io.gitlab.arturbosch.detekt.api.Rule.Rule","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-rule/-rule.html","searchKeys":["Rule","constructor(ruleSetConfig: Config = Config.empty, ruleContext: Context = DefaultContext())","io.gitlab.arturbosch.detekt.api.Rule.Rule"]},{"name":"constructor(source: SourceLocation, endSource: SourceLocation = source, text: TextLocation, filePath: FilePath)","description":"io.gitlab.arturbosch.detekt.api.Location.Location","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-location/-location.html","searchKeys":["Location","constructor(source: SourceLocation, endSource: SourceLocation = source, text: TextLocation, filePath: FilePath)","io.gitlab.arturbosch.detekt.api.Location.Location"]},{"name":"constructor(start: Int, end: Int)","description":"io.gitlab.arturbosch.detekt.api.TextLocation.TextLocation","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-text-location/-text-location.html","searchKeys":["TextLocation","constructor(start: Int, end: Int)","io.gitlab.arturbosch.detekt.api.TextLocation.TextLocation"]},{"name":"constructor(throwable: Throwable? = null)","description":"io.gitlab.arturbosch.detekt.api.Config.InvalidConfigurationError.InvalidConfigurationError","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-config/-invalid-configuration-error/-invalid-configuration-error.html","searchKeys":["InvalidConfigurationError","constructor(throwable: Throwable? = null)","io.gitlab.arturbosch.detekt.api.Config.InvalidConfigurationError.InvalidConfigurationError"]},{"name":"constructor(type: String, value: Int, priority: Int = -1, isDouble: Boolean = false, conversionFactor: Int = DEFAULT_FLOAT_CONVERSION_FACTOR)","description":"io.gitlab.arturbosch.detekt.api.ProjectMetric.ProjectMetric","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-project-metric/-project-metric.html","searchKeys":["ProjectMetric","constructor(type: String, value: Int, priority: Int = -1, isDouble: Boolean = false, conversionFactor: Int = DEFAULT_FLOAT_CONVERSION_FACTOR)","io.gitlab.arturbosch.detekt.api.ProjectMetric.ProjectMetric"]},{"name":"constructor(value: String, reason: String? = null)","description":"io.gitlab.arturbosch.detekt.api.ValueWithReason.ValueWithReason","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-value-with-reason/-value-with-reason.html","searchKeys":["ValueWithReason","constructor(value: String, reason: String? = null)","io.gitlab.arturbosch.detekt.api.ValueWithReason.ValueWithReason"]},{"name":"data class CompilerResources(val languageVersionSettings: LanguageVersionSettings, val dataFlowValueFactory: DataFlowValueFactory)","description":"io.gitlab.arturbosch.detekt.api.internal.CompilerResources","location":"detekt-api/io.gitlab.arturbosch.detekt.api.internal/-compiler-resources/index.html","searchKeys":["CompilerResources","data class CompilerResources(val languageVersionSettings: LanguageVersionSettings, val dataFlowValueFactory: DataFlowValueFactory)","io.gitlab.arturbosch.detekt.api.internal.CompilerResources"]},{"name":"enum Level : Enum<Notification.Level> ","description":"io.gitlab.arturbosch.detekt.api.Notification.Level","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-notification/-level/index.html","searchKeys":["Level","enum Level : Enum<Notification.Level> ","io.gitlab.arturbosch.detekt.api.Notification.Level"]},{"name":"enum Severity : Enum<Severity> ","description":"io.gitlab.arturbosch.detekt.api.Severity","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-severity/index.html","searchKeys":["Severity","enum Severity : Enum<Severity> ","io.gitlab.arturbosch.detekt.api.Severity"]},{"name":"fun <T : Any, U : Any> config(defaultValue: T, transformer: (T) -> U): ReadOnlyProperty<ConfigAware, U>","description":"io.gitlab.arturbosch.detekt.api.config","location":"detekt-api/io.gitlab.arturbosch.detekt.api/config.html","searchKeys":["config","fun <T : Any, U : Any> config(defaultValue: T, transformer: (T) -> U): ReadOnlyProperty<ConfigAware, U>","io.gitlab.arturbosch.detekt.api.config"]},{"name":"fun <T : Any, U : Any> configWithAndroidVariants(defaultValue: T, defaultAndroidValue: T, transformer: (T) -> U): ReadOnlyProperty<ConfigAware, U>","description":"io.gitlab.arturbosch.detekt.api.configWithAndroidVariants","location":"detekt-api/io.gitlab.arturbosch.detekt.api/config-with-android-variants.html","searchKeys":["configWithAndroidVariants","fun <T : Any, U : Any> configWithAndroidVariants(defaultValue: T, defaultAndroidValue: T, transformer: (T) -> U): ReadOnlyProperty<ConfigAware, U>","io.gitlab.arturbosch.detekt.api.configWithAndroidVariants"]},{"name":"fun <T : Any, U : Any> configWithFallback(fallbackProperty: KProperty0<U>, defaultValue: T, transformer: (T) -> U): ReadOnlyProperty<ConfigAware, U>","description":"io.gitlab.arturbosch.detekt.api.configWithFallback","location":"detekt-api/io.gitlab.arturbosch.detekt.api/config-with-fallback.html","searchKeys":["configWithFallback","fun <T : Any, U : Any> configWithFallback(fallbackProperty: KProperty0<U>, defaultValue: T, transformer: (T) -> U): ReadOnlyProperty<ConfigAware, U>","io.gitlab.arturbosch.detekt.api.configWithFallback"]},{"name":"fun <T : Any> config(defaultValue: T): ReadOnlyProperty<ConfigAware, T>","description":"io.gitlab.arturbosch.detekt.api.config","location":"detekt-api/io.gitlab.arturbosch.detekt.api/config.html","searchKeys":["config","fun <T : Any> config(defaultValue: T): ReadOnlyProperty<ConfigAware, T>","io.gitlab.arturbosch.detekt.api.config"]},{"name":"fun <T : Any> configWithAndroidVariants(defaultValue: T, defaultAndroidValue: T): ReadOnlyProperty<ConfigAware, T>","description":"io.gitlab.arturbosch.detekt.api.configWithAndroidVariants","location":"detekt-api/io.gitlab.arturbosch.detekt.api/config-with-android-variants.html","searchKeys":["configWithAndroidVariants","fun <T : Any> configWithAndroidVariants(defaultValue: T, defaultAndroidValue: T): ReadOnlyProperty<ConfigAware, T>","io.gitlab.arturbosch.detekt.api.configWithAndroidVariants"]},{"name":"fun <T : Any> configWithFallback(fallbackProperty: KProperty0<T>, defaultValue: T): ReadOnlyProperty<ConfigAware, T>","description":"io.gitlab.arturbosch.detekt.api.configWithFallback","location":"detekt-api/io.gitlab.arturbosch.detekt.api/config-with-fallback.html","searchKeys":["configWithFallback","fun <T : Any> configWithFallback(fallbackProperty: KProperty0<T>, defaultValue: T): ReadOnlyProperty<ConfigAware, T>","io.gitlab.arturbosch.detekt.api.configWithFallback"]},{"name":"fun Config.createPathFilters(): PathFilters?","description":"io.gitlab.arturbosch.detekt.api.internal.createPathFilters","location":"detekt-api/io.gitlab.arturbosch.detekt.api.internal/create-path-filters.html","searchKeys":["createPathFilters","fun Config.createPathFilters(): PathFilters?","io.gitlab.arturbosch.detekt.api.internal.createPathFilters"]},{"name":"fun Config.valueOrDefaultCommaSeparated(key: String, default: List<String>): List<String>","description":"io.gitlab.arturbosch.detekt.api.internal.valueOrDefaultCommaSeparated","location":"detekt-api/io.gitlab.arturbosch.detekt.api.internal/value-or-default-comma-separated.html","searchKeys":["valueOrDefaultCommaSeparated","fun Config.valueOrDefaultCommaSeparated(key: String, default: List<String>): List<String>","io.gitlab.arturbosch.detekt.api.internal.valueOrDefaultCommaSeparated"]},{"name":"fun KtAnnotated.isSuppressedBy(id: RuleId, aliases: Set<String>, ruleSetId: RuleSetId? = null): Boolean","description":"io.gitlab.arturbosch.detekt.api.internal.isSuppressedBy","location":"detekt-api/io.gitlab.arturbosch.detekt.api.internal/is-suppressed-by.html","searchKeys":["isSuppressedBy","fun KtAnnotated.isSuppressedBy(id: RuleId, aliases: Set<String>, ruleSetId: RuleSetId? = null): Boolean","io.gitlab.arturbosch.detekt.api.internal.isSuppressedBy"]},{"name":"fun KtElement.isSuppressedBy(id: String, aliases: Set<String>, ruleSetId: RuleSetId? = null): Boolean","description":"io.gitlab.arturbosch.detekt.api.internal.isSuppressedBy","location":"detekt-api/io.gitlab.arturbosch.detekt.api.internal/is-suppressed-by.html","searchKeys":["isSuppressedBy","fun KtElement.isSuppressedBy(id: String, aliases: Set<String>, ruleSetId: RuleSetId? = null): Boolean","io.gitlab.arturbosch.detekt.api.internal.isSuppressedBy"]},{"name":"fun String.commaSeparatedPattern(vararg delimiters: String = arrayOf(\",\")): Sequence<String>","description":"io.gitlab.arturbosch.detekt.api.commaSeparatedPattern","location":"detekt-api/io.gitlab.arturbosch.detekt.api/comma-separated-pattern.html","searchKeys":["commaSeparatedPattern","fun String.commaSeparatedPattern(vararg delimiters: String = arrayOf(\",\")): Sequence<String>","io.gitlab.arturbosch.detekt.api.commaSeparatedPattern"]},{"name":"fun String.simplePatternToRegex(): Regex","description":"io.gitlab.arturbosch.detekt.api.simplePatternToRegex","location":"detekt-api/io.gitlab.arturbosch.detekt.api/simple-pattern-to-regex.html","searchKeys":["simplePatternToRegex","fun String.simplePatternToRegex(): Regex","io.gitlab.arturbosch.detekt.api.simplePatternToRegex"]},{"name":"fun accept(file: KtFile, bindingContext: BindingContext = BindingContext.EMPTY): List<Finding>","description":"io.gitlab.arturbosch.detekt.api.RuleSet.accept","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-rule-set/accept.html","searchKeys":["accept","fun accept(file: KtFile, bindingContext: BindingContext = BindingContext.EMPTY): List<Finding>","io.gitlab.arturbosch.detekt.api.RuleSet.accept"]},{"name":"fun atName(element: KtNamedDeclaration): Entity","description":"io.gitlab.arturbosch.detekt.api.Entity.Companion.atName","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-entity/-companion/at-name.html","searchKeys":["atName","fun atName(element: KtNamedDeclaration): Entity","io.gitlab.arturbosch.detekt.api.Entity.Companion.atName"]},{"name":"fun atPackageOrFirstDecl(file: KtFile): Entity","description":"io.gitlab.arturbosch.detekt.api.Entity.Companion.atPackageOrFirstDecl","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-entity/-companion/at-package-or-first-decl.html","searchKeys":["atPackageOrFirstDecl","fun atPackageOrFirstDecl(file: KtFile): Entity","io.gitlab.arturbosch.detekt.api.Entity.Companion.atPackageOrFirstDecl"]},{"name":"fun from(element: PsiElement, location: Location): Entity","description":"io.gitlab.arturbosch.detekt.api.Entity.Companion.from","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-entity/-companion/from.html","searchKeys":["from","fun from(element: PsiElement, location: Location): Entity","io.gitlab.arturbosch.detekt.api.Entity.Companion.from"]},{"name":"fun from(element: PsiElement, offset: Int = 0): Entity","description":"io.gitlab.arturbosch.detekt.api.Entity.Companion.from","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-entity/-companion/from.html","searchKeys":["from","fun from(element: PsiElement, offset: Int = 0): Entity","io.gitlab.arturbosch.detekt.api.Entity.Companion.from"]},{"name":"fun from(element: PsiElement, offset: Int = 0): Location","description":"io.gitlab.arturbosch.detekt.api.Location.Companion.from","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-location/-companion/from.html","searchKeys":["from","fun from(element: PsiElement, offset: Int = 0): Location","io.gitlab.arturbosch.detekt.api.Location.Companion.from"]},{"name":"fun isIgnored(ktFile: KtFile): Boolean","description":"io.gitlab.arturbosch.detekt.api.internal.PathFilters.isIgnored","location":"detekt-api/io.gitlab.arturbosch.detekt.api.internal/-path-filters/is-ignored.html","searchKeys":["isIgnored","fun isIgnored(ktFile: KtFile): Boolean","io.gitlab.arturbosch.detekt.api.internal.PathFilters.isIgnored"]},{"name":"fun isIgnored(path: Path): Boolean","description":"io.gitlab.arturbosch.detekt.api.internal.PathFilters.isIgnored","location":"detekt-api/io.gitlab.arturbosch.detekt.api.internal/-path-filters/is-ignored.html","searchKeys":["isIgnored","fun isIgnored(path: Path): Boolean","io.gitlab.arturbosch.detekt.api.internal.PathFilters.isIgnored"]},{"name":"fun of(includes: List<String>, excludes: List<String>): PathFilters?","description":"io.gitlab.arturbosch.detekt.api.internal.PathFilters.Companion.of","location":"detekt-api/io.gitlab.arturbosch.detekt.api.internal/-path-filters/-companion/of.html","searchKeys":["of","fun of(includes: List<String>, excludes: List<String>): PathFilters?","io.gitlab.arturbosch.detekt.api.internal.PathFilters.Companion.of"]},{"name":"fun pathMatcher(pattern: String): PathMatcher","description":"io.gitlab.arturbosch.detekt.api.internal.pathMatcher","location":"detekt-api/io.gitlab.arturbosch.detekt.api.internal/path-matcher.html","searchKeys":["pathMatcher","fun pathMatcher(pattern: String): PathMatcher","io.gitlab.arturbosch.detekt.api.internal.pathMatcher"]},{"name":"fun report(finding: Finding)","description":"io.gitlab.arturbosch.detekt.api.Rule.report","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-rule/report.html","searchKeys":["report","fun report(finding: Finding)","io.gitlab.arturbosch.detekt.api.Rule.report"]},{"name":"fun report(findings: List<Finding>)","description":"io.gitlab.arturbosch.detekt.api.Rule.report","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-rule/report.html","searchKeys":["report","fun report(findings: List<Finding>)","io.gitlab.arturbosch.detekt.api.Rule.report"]},{"name":"fun shouldExclude(annotations: List<KtAnnotationEntry>): Boolean","description":"io.gitlab.arturbosch.detekt.api.AnnotationExcluder.shouldExclude","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-annotation-excluder/should-exclude.html","searchKeys":["shouldExclude","fun shouldExclude(annotations: List<KtAnnotationEntry>): Boolean","io.gitlab.arturbosch.detekt.api.AnnotationExcluder.shouldExclude"]},{"name":"fun startLineAndColumn(element: PsiElement, offset: Int = 0): PsiDiagnosticUtils.LineAndColumn","description":"io.gitlab.arturbosch.detekt.api.Location.Companion.startLineAndColumn","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-location/-companion/start-line-and-column.html","searchKeys":["startLineAndColumn","fun startLineAndColumn(element: PsiElement, offset: Int = 0): PsiDiagnosticUtils.LineAndColumn","io.gitlab.arturbosch.detekt.api.Location.Companion.startLineAndColumn"]},{"name":"fun valueOf(value: String): Notification.Level","description":"io.gitlab.arturbosch.detekt.api.Notification.Level.valueOf","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-notification/-level/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): Notification.Level","io.gitlab.arturbosch.detekt.api.Notification.Level.valueOf"]},{"name":"fun valueOf(value: String): Severity","description":"io.gitlab.arturbosch.detekt.api.Severity.valueOf","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-severity/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): Severity","io.gitlab.arturbosch.detekt.api.Severity.valueOf"]},{"name":"fun values(): Array<Notification.Level>","description":"io.gitlab.arturbosch.detekt.api.Notification.Level.values","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-notification/-level/values.html","searchKeys":["values","fun values(): Array<Notification.Level>","io.gitlab.arturbosch.detekt.api.Notification.Level.values"]},{"name":"fun values(): Array<Severity>","description":"io.gitlab.arturbosch.detekt.api.Severity.values","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-severity/values.html","searchKeys":["values","fun values(): Array<Severity>","io.gitlab.arturbosch.detekt.api.Severity.values"]},{"name":"fun valuesWithReason(values: List<ValueWithReason>): ValuesWithReason","description":"io.gitlab.arturbosch.detekt.api.valuesWithReason","location":"detekt-api/io.gitlab.arturbosch.detekt.api/values-with-reason.html","searchKeys":["valuesWithReason","fun valuesWithReason(values: List<ValueWithReason>): ValuesWithReason","io.gitlab.arturbosch.detekt.api.valuesWithReason"]},{"name":"fun valuesWithReason(vararg values: Pair<String, String?>): ValuesWithReason","description":"io.gitlab.arturbosch.detekt.api.valuesWithReason","location":"detekt-api/io.gitlab.arturbosch.detekt.api/values-with-reason.html","searchKeys":["valuesWithReason","fun valuesWithReason(vararg values: Pair<String, String?>): ValuesWithReason","io.gitlab.arturbosch.detekt.api.valuesWithReason"]},{"name":"fun visitFile(root: KtFile, bindingContext: BindingContext = BindingContext.EMPTY, compilerResources: CompilerResources? = null)","description":"io.gitlab.arturbosch.detekt.api.BaseRule.visitFile","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-base-rule/visit-file.html","searchKeys":["visitFile","fun visitFile(root: KtFile, bindingContext: BindingContext = BindingContext.EMPTY, compilerResources: CompilerResources? = null)","io.gitlab.arturbosch.detekt.api.BaseRule.visitFile"]},{"name":"fun whichDetekt(): String","description":"io.gitlab.arturbosch.detekt.api.internal.whichDetekt","location":"detekt-api/io.gitlab.arturbosch.detekt.api.internal/which-detekt.html","searchKeys":["whichDetekt","fun whichDetekt(): String","io.gitlab.arturbosch.detekt.api.internal.whichDetekt"]},{"name":"fun whichJava(): String","description":"io.gitlab.arturbosch.detekt.api.internal.whichJava","location":"detekt-api/io.gitlab.arturbosch.detekt.api.internal/which-java.html","searchKeys":["whichJava","fun whichJava(): String","io.gitlab.arturbosch.detekt.api.internal.whichJava"]},{"name":"fun whichKotlin(): String","description":"io.gitlab.arturbosch.detekt.api.internal.whichKotlin","location":"detekt-api/io.gitlab.arturbosch.detekt.api.internal/which-kotlin.html","searchKeys":["whichKotlin","fun whichKotlin(): String","io.gitlab.arturbosch.detekt.api.internal.whichKotlin"]},{"name":"fun whichOS(): String","description":"io.gitlab.arturbosch.detekt.api.internal.whichOS","location":"detekt-api/io.gitlab.arturbosch.detekt.api.internal/which-o-s.html","searchKeys":["whichOS","fun whichOS(): String","io.gitlab.arturbosch.detekt.api.internal.whichOS"]},{"name":"fun write(filePath: Path, detektion: Detektion)","description":"io.gitlab.arturbosch.detekt.api.OutputReport.write","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-output-report/write.html","searchKeys":["write","fun write(filePath: Path, detektion: Detektion)","io.gitlab.arturbosch.detekt.api.OutputReport.write"]},{"name":"inline fun <T : Any> PropertiesAware.getOrNull(key: String): T?","description":"io.gitlab.arturbosch.detekt.api.getOrNull","location":"detekt-api/io.gitlab.arturbosch.detekt.api/get-or-null.html","searchKeys":["getOrNull","inline fun <T : Any> PropertiesAware.getOrNull(key: String): T?","io.gitlab.arturbosch.detekt.api.getOrNull"]},{"name":"interface Compactable","description":"io.gitlab.arturbosch.detekt.api.Compactable","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-compactable/index.html","searchKeys":["Compactable","interface Compactable","io.gitlab.arturbosch.detekt.api.Compactable"]},{"name":"interface Config","description":"io.gitlab.arturbosch.detekt.api.Config","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-config/index.html","searchKeys":["Config","interface Config","io.gitlab.arturbosch.detekt.api.Config"]},{"name":"interface ConfigAware : Config","description":"io.gitlab.arturbosch.detekt.api.ConfigAware","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-config-aware/index.html","searchKeys":["ConfigAware","interface ConfigAware : Config","io.gitlab.arturbosch.detekt.api.ConfigAware"]},{"name":"interface ConfigValidator : Extension","description":"io.gitlab.arturbosch.detekt.api.ConfigValidator","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-config-validator/index.html","searchKeys":["ConfigValidator","interface ConfigValidator : Extension","io.gitlab.arturbosch.detekt.api.ConfigValidator"]},{"name":"interface Context","description":"io.gitlab.arturbosch.detekt.api.Context","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-context/index.html","searchKeys":["Context","interface Context","io.gitlab.arturbosch.detekt.api.Context"]},{"name":"interface DefaultRuleSetProvider : RuleSetProvider","description":"io.gitlab.arturbosch.detekt.api.internal.DefaultRuleSetProvider","location":"detekt-api/io.gitlab.arturbosch.detekt.api.internal/-default-rule-set-provider/index.html","searchKeys":["DefaultRuleSetProvider","interface DefaultRuleSetProvider : RuleSetProvider","io.gitlab.arturbosch.detekt.api.internal.DefaultRuleSetProvider"]},{"name":"interface Detektion : UserDataHolder","description":"io.gitlab.arturbosch.detekt.api.Detektion","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-detektion/index.html","searchKeys":["Detektion","interface Detektion : UserDataHolder","io.gitlab.arturbosch.detekt.api.Detektion"]},{"name":"interface Extension","description":"io.gitlab.arturbosch.detekt.api.Extension","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-extension/index.html","searchKeys":["Extension","interface Extension","io.gitlab.arturbosch.detekt.api.Extension"]},{"name":"interface FileProcessListener : Extension","description":"io.gitlab.arturbosch.detekt.api.FileProcessListener","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-file-process-listener/index.html","searchKeys":["FileProcessListener","interface FileProcessListener : Extension","io.gitlab.arturbosch.detekt.api.FileProcessListener"]},{"name":"interface Finding : Compactable, HasEntity","description":"io.gitlab.arturbosch.detekt.api.Finding","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-finding/index.html","searchKeys":["Finding","interface Finding : Compactable, HasEntity","io.gitlab.arturbosch.detekt.api.Finding"]},{"name":"interface HasEntity","description":"io.gitlab.arturbosch.detekt.api.HasEntity","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-has-entity/index.html","searchKeys":["HasEntity","interface HasEntity","io.gitlab.arturbosch.detekt.api.HasEntity"]},{"name":"interface Notification","description":"io.gitlab.arturbosch.detekt.api.Notification","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-notification/index.html","searchKeys":["Notification","interface Notification","io.gitlab.arturbosch.detekt.api.Notification"]},{"name":"interface PropertiesAware","description":"io.gitlab.arturbosch.detekt.api.PropertiesAware","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-properties-aware/index.html","searchKeys":["PropertiesAware","interface PropertiesAware","io.gitlab.arturbosch.detekt.api.PropertiesAware"]},{"name":"interface ReportingExtension : Extension","description":"io.gitlab.arturbosch.detekt.api.ReportingExtension","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-reporting-extension/index.html","searchKeys":["ReportingExtension","interface ReportingExtension : Extension","io.gitlab.arturbosch.detekt.api.ReportingExtension"]},{"name":"interface RuleSetProvider","description":"io.gitlab.arturbosch.detekt.api.RuleSetProvider","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-rule-set-provider/index.html","searchKeys":["RuleSetProvider","interface RuleSetProvider","io.gitlab.arturbosch.detekt.api.RuleSetProvider"]},{"name":"interface SetupContext : PropertiesAware","description":"io.gitlab.arturbosch.detekt.api.SetupContext","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-setup-context/index.html","searchKeys":["SetupContext","interface SetupContext : PropertiesAware","io.gitlab.arturbosch.detekt.api.SetupContext"]},{"name":"object Companion","description":"io.gitlab.arturbosch.detekt.api.Config.Companion","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-config/-companion/index.html","searchKeys":["Companion","object Companion","io.gitlab.arturbosch.detekt.api.Config.Companion"]},{"name":"object Companion","description":"io.gitlab.arturbosch.detekt.api.Debt.Companion","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-debt/-companion/index.html","searchKeys":["Companion","object Companion","io.gitlab.arturbosch.detekt.api.Debt.Companion"]},{"name":"object Companion","description":"io.gitlab.arturbosch.detekt.api.Entity.Companion","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-entity/-companion/index.html","searchKeys":["Companion","object Companion","io.gitlab.arturbosch.detekt.api.Entity.Companion"]},{"name":"object Companion","description":"io.gitlab.arturbosch.detekt.api.Location.Companion","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-location/-companion/index.html","searchKeys":["Companion","object Companion","io.gitlab.arturbosch.detekt.api.Location.Companion"]},{"name":"object Companion","description":"io.gitlab.arturbosch.detekt.api.internal.PathFilters.Companion","location":"detekt-api/io.gitlab.arturbosch.detekt.api.internal/-path-filters/-companion/index.html","searchKeys":["Companion","object Companion","io.gitlab.arturbosch.detekt.api.internal.PathFilters.Companion"]},{"name":"open class CodeSmell(val issue: Issue, val entity: Entity, val message: String, val references: List<Entity> = emptyList()) : Finding","description":"io.gitlab.arturbosch.detekt.api.CodeSmell","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-code-smell/index.html","searchKeys":["CodeSmell","open class CodeSmell(val issue: Issue, val entity: Entity, val message: String, val references: List<Entity> = emptyList()) : Finding","io.gitlab.arturbosch.detekt.api.CodeSmell"]},{"name":"open class CorrectableCodeSmell(val issue: Issue, val entity: Entity, val message: String, val references: List<Entity> = emptyList(), val autoCorrectEnabled: Boolean) : CodeSmell","description":"io.gitlab.arturbosch.detekt.api.CorrectableCodeSmell","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-correctable-code-smell/index.html","searchKeys":["CorrectableCodeSmell","open class CorrectableCodeSmell(val issue: Issue, val entity: Entity, val message: String, val references: List<Entity> = emptyList(), val autoCorrectEnabled: Boolean) : CodeSmell","io.gitlab.arturbosch.detekt.api.CorrectableCodeSmell"]},{"name":"open class DetektVisitor : KtTreeVisitorVoid","description":"io.gitlab.arturbosch.detekt.api.DetektVisitor","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-detekt-visitor/index.html","searchKeys":["DetektVisitor","open class DetektVisitor : KtTreeVisitorVoid","io.gitlab.arturbosch.detekt.api.DetektVisitor"]},{"name":"open class ProjectMetric(val type: String, val value: Int, val priority: Int = -1, val isDouble: Boolean = false, val conversionFactor: Int = DEFAULT_FLOAT_CONVERSION_FACTOR)","description":"io.gitlab.arturbosch.detekt.api.ProjectMetric","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-project-metric/index.html","searchKeys":["ProjectMetric","open class ProjectMetric(val type: String, val value: Int, val priority: Int = -1, val isDouble: Boolean = false, val conversionFactor: Int = DEFAULT_FLOAT_CONVERSION_FACTOR)","io.gitlab.arturbosch.detekt.api.ProjectMetric"]},{"name":"open fun <T : Any> valueOrDefault(key: String, default: T): T","description":"io.gitlab.arturbosch.detekt.api.Config.valueOrDefault","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-config/value-or-default.html","searchKeys":["valueOrDefault","open fun <T : Any> valueOrDefault(key: String, default: T): T","io.gitlab.arturbosch.detekt.api.Config.valueOrDefault"]},{"name":"open fun compactWithSignature(): String","description":"io.gitlab.arturbosch.detekt.api.Compactable.compactWithSignature","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-compactable/compact-with-signature.html","searchKeys":["compactWithSignature","open fun compactWithSignature(): String","io.gitlab.arturbosch.detekt.api.Compactable.compactWithSignature"]},{"name":"open fun init(config: Config)","description":"io.gitlab.arturbosch.detekt.api.Extension.init","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-extension/init.html","searchKeys":["init","open fun init(config: Config)","io.gitlab.arturbosch.detekt.api.Extension.init"]},{"name":"open fun init(context: SetupContext)","description":"io.gitlab.arturbosch.detekt.api.Extension.init","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-extension/init.html","searchKeys":["init","open fun init(context: SetupContext)","io.gitlab.arturbosch.detekt.api.Extension.init"]},{"name":"open fun onFinalResult(result: Detektion)","description":"io.gitlab.arturbosch.detekt.api.ReportingExtension.onFinalResult","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-reporting-extension/on-final-result.html","searchKeys":["onFinalResult","open fun onFinalResult(result: Detektion)","io.gitlab.arturbosch.detekt.api.ReportingExtension.onFinalResult"]},{"name":"open fun onFinish(files: List<KtFile>, result: Detektion, bindingContext: BindingContext)","description":"io.gitlab.arturbosch.detekt.api.FileProcessListener.onFinish","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-file-process-listener/on-finish.html","searchKeys":["onFinish","open fun onFinish(files: List<KtFile>, result: Detektion, bindingContext: BindingContext)","io.gitlab.arturbosch.detekt.api.FileProcessListener.onFinish"]},{"name":"open fun onProcess(file: KtFile, bindingContext: BindingContext)","description":"io.gitlab.arturbosch.detekt.api.FileProcessListener.onProcess","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-file-process-listener/on-process.html","searchKeys":["onProcess","open fun onProcess(file: KtFile, bindingContext: BindingContext)","io.gitlab.arturbosch.detekt.api.FileProcessListener.onProcess"]},{"name":"open fun onProcessComplete(file: KtFile, findings: Map<String, List<Finding>>, bindingContext: BindingContext)","description":"io.gitlab.arturbosch.detekt.api.FileProcessListener.onProcessComplete","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-file-process-listener/on-process-complete.html","searchKeys":["onProcessComplete","open fun onProcessComplete(file: KtFile, findings: Map<String, List<Finding>>, bindingContext: BindingContext)","io.gitlab.arturbosch.detekt.api.FileProcessListener.onProcessComplete"]},{"name":"open fun onRawResult(result: Detektion)","description":"io.gitlab.arturbosch.detekt.api.ReportingExtension.onRawResult","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-reporting-extension/on-raw-result.html","searchKeys":["onRawResult","open fun onRawResult(result: Detektion)","io.gitlab.arturbosch.detekt.api.ReportingExtension.onRawResult"]},{"name":"open fun onStart(files: List<KtFile>, bindingContext: BindingContext)","description":"io.gitlab.arturbosch.detekt.api.FileProcessListener.onStart","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-file-process-listener/on-start.html","searchKeys":["onStart","open fun onStart(files: List<KtFile>, bindingContext: BindingContext)","io.gitlab.arturbosch.detekt.api.FileProcessListener.onStart"]},{"name":"open fun report(finding: Finding, aliases: Set<String> = emptySet(), ruleSetId: RuleSetId? = null)","description":"io.gitlab.arturbosch.detekt.api.Context.report","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-context/report.html","searchKeys":["report","open fun report(finding: Finding, aliases: Set<String> = emptySet(), ruleSetId: RuleSetId? = null)","io.gitlab.arturbosch.detekt.api.Context.report"]},{"name":"open fun report(findings: List<Finding>, aliases: Set<String> = emptySet(), ruleSetId: RuleSetId? = null)","description":"io.gitlab.arturbosch.detekt.api.Context.report","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-context/report.html","searchKeys":["report","open fun report(findings: List<Finding>, aliases: Set<String> = emptySet(), ruleSetId: RuleSetId? = null)","io.gitlab.arturbosch.detekt.api.Context.report"]},{"name":"open fun transformFindings(findings: Map<RuleSetId, List<Finding>>): Map<RuleSetId, List<Finding>>","description":"io.gitlab.arturbosch.detekt.api.ReportingExtension.transformFindings","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-reporting-extension/transform-findings.html","searchKeys":["transformFindings","open fun transformFindings(findings: Map<RuleSetId, List<Finding>>): Map<RuleSetId, List<Finding>>","io.gitlab.arturbosch.detekt.api.ReportingExtension.transformFindings"]},{"name":"open fun visit(root: KtFile)","description":"io.gitlab.arturbosch.detekt.api.BaseRule.visit","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-base-rule/visit.html","searchKeys":["visit","open fun visit(root: KtFile)","io.gitlab.arturbosch.detekt.api.BaseRule.visit"]},{"name":"open override fun <T : Any> valueOrDefault(key: String, default: T): T","description":"io.gitlab.arturbosch.detekt.api.ConfigAware.valueOrDefault","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-config-aware/value-or-default.html","searchKeys":["valueOrDefault","open override fun <T : Any> valueOrDefault(key: String, default: T): T","io.gitlab.arturbosch.detekt.api.ConfigAware.valueOrDefault"]},{"name":"open override fun <T : Any> valueOrNull(key: String): T?","description":"io.gitlab.arturbosch.detekt.api.ConfigAware.valueOrNull","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-config-aware/value-or-null.html","searchKeys":["valueOrNull","open override fun <T : Any> valueOrNull(key: String): T?","io.gitlab.arturbosch.detekt.api.ConfigAware.valueOrNull"]},{"name":"open override fun compact(): String","description":"io.gitlab.arturbosch.detekt.api.CodeSmell.compact","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-code-smell/compact.html","searchKeys":["compact","open override fun compact(): String","io.gitlab.arturbosch.detekt.api.CodeSmell.compact"]},{"name":"open override fun compact(): String","description":"io.gitlab.arturbosch.detekt.api.Entity.compact","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-entity/compact.html","searchKeys":["compact","open override fun compact(): String","io.gitlab.arturbosch.detekt.api.Entity.compact"]},{"name":"open override fun compact(): String","description":"io.gitlab.arturbosch.detekt.api.Location.compact","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-location/compact.html","searchKeys":["compact","open override fun compact(): String","io.gitlab.arturbosch.detekt.api.Location.compact"]},{"name":"open override fun compactWithSignature(): String","description":"io.gitlab.arturbosch.detekt.api.CodeSmell.compactWithSignature","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-code-smell/compact-with-signature.html","searchKeys":["compactWithSignature","open override fun compactWithSignature(): String","io.gitlab.arturbosch.detekt.api.CodeSmell.compactWithSignature"]},{"name":"open override fun messageOrDescription(): String","description":"io.gitlab.arturbosch.detekt.api.CodeSmell.messageOrDescription","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-code-smell/message-or-description.html","searchKeys":["messageOrDescription","open override fun messageOrDescription(): String","io.gitlab.arturbosch.detekt.api.CodeSmell.messageOrDescription"]},{"name":"open override fun subConfig(key: String): Config","description":"io.gitlab.arturbosch.detekt.api.ConfigAware.subConfig","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-config-aware/sub-config.html","searchKeys":["subConfig","open override fun subConfig(key: String): Config","io.gitlab.arturbosch.detekt.api.ConfigAware.subConfig"]},{"name":"open override fun toString(): String","description":"io.gitlab.arturbosch.detekt.api.CodeSmell.toString","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-code-smell/to-string.html","searchKeys":["toString","open override fun toString(): String","io.gitlab.arturbosch.detekt.api.CodeSmell.toString"]},{"name":"open override fun toString(): String","description":"io.gitlab.arturbosch.detekt.api.CorrectableCodeSmell.toString","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-correctable-code-smell/to-string.html","searchKeys":["toString","open override fun toString(): String","io.gitlab.arturbosch.detekt.api.CorrectableCodeSmell.toString"]},{"name":"open override fun toString(): String","description":"io.gitlab.arturbosch.detekt.api.Debt.toString","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-debt/to-string.html","searchKeys":["toString","open override fun toString(): String","io.gitlab.arturbosch.detekt.api.Debt.toString"]},{"name":"open override fun toString(): String","description":"io.gitlab.arturbosch.detekt.api.Issue.toString","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-issue/to-string.html","searchKeys":["toString","open override fun toString(): String","io.gitlab.arturbosch.detekt.api.Issue.toString"]},{"name":"open override fun toString(): String","description":"io.gitlab.arturbosch.detekt.api.ProjectMetric.toString","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-project-metric/to-string.html","searchKeys":["toString","open override fun toString(): String","io.gitlab.arturbosch.detekt.api.ProjectMetric.toString"]},{"name":"open override fun toString(): String","description":"io.gitlab.arturbosch.detekt.api.SourceLocation.toString","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-source-location/to-string.html","searchKeys":["toString","open override fun toString(): String","io.gitlab.arturbosch.detekt.api.SourceLocation.toString"]},{"name":"open override fun toString(): String","description":"io.gitlab.arturbosch.detekt.api.TextLocation.toString","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-text-location/to-string.html","searchKeys":["toString","open override fun toString(): String","io.gitlab.arturbosch.detekt.api.TextLocation.toString"]},{"name":"open override fun visitCondition(root: KtFile): Boolean","description":"io.gitlab.arturbosch.detekt.api.Rule.visitCondition","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-rule/visit-condition.html","searchKeys":["visitCondition","open override fun visitCondition(root: KtFile): Boolean","io.gitlab.arturbosch.detekt.api.Rule.visitCondition"]},{"name":"open override val entity: Entity","description":"io.gitlab.arturbosch.detekt.api.CodeSmell.entity","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-code-smell/entity.html","searchKeys":["entity","open override val entity: Entity","io.gitlab.arturbosch.detekt.api.CodeSmell.entity"]},{"name":"open override val id: String","description":"io.gitlab.arturbosch.detekt.api.CodeSmell.id","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-code-smell/id.html","searchKeys":["id","open override val id: String","io.gitlab.arturbosch.detekt.api.CodeSmell.id"]},{"name":"open override val message: String","description":"io.gitlab.arturbosch.detekt.api.CodeSmell.message","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-code-smell/message.html","searchKeys":["message","open override val message: String","io.gitlab.arturbosch.detekt.api.CodeSmell.message"]},{"name":"open override val references: List<Entity>","description":"io.gitlab.arturbosch.detekt.api.CodeSmell.references","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-code-smell/references.html","searchKeys":["references","open override val references: List<Entity>","io.gitlab.arturbosch.detekt.api.CodeSmell.references"]},{"name":"open override val ruleSetConfig: Config","description":"io.gitlab.arturbosch.detekt.api.Rule.ruleSetConfig","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-rule/rule-set-config.html","searchKeys":["ruleSetConfig","open override val ruleSetConfig: Config","io.gitlab.arturbosch.detekt.api.Rule.ruleSetConfig"]},{"name":"open override val severity: Severity","description":"io.gitlab.arturbosch.detekt.api.CodeSmell.severity","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-code-smell/severity.html","searchKeys":["severity","open override val severity: Severity","io.gitlab.arturbosch.detekt.api.CodeSmell.severity"]},{"name":"open val active: Boolean","description":"io.gitlab.arturbosch.detekt.api.ConfigAware.active","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-config-aware/active.html","searchKeys":["active","open val active: Boolean","io.gitlab.arturbosch.detekt.api.ConfigAware.active"]},{"name":"open val autoCorrect: Boolean","description":"io.gitlab.arturbosch.detekt.api.ConfigAware.autoCorrect","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-config-aware/auto-correct.html","searchKeys":["autoCorrect","open val autoCorrect: Boolean","io.gitlab.arturbosch.detekt.api.ConfigAware.autoCorrect"]},{"name":"open val charPosition: TextLocation","description":"io.gitlab.arturbosch.detekt.api.HasEntity.charPosition","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-has-entity/char-position.html","searchKeys":["charPosition","open val charPosition: TextLocation","io.gitlab.arturbosch.detekt.api.HasEntity.charPosition"]},{"name":"open val defaultRuleIdAliases: Set<String>","description":"io.gitlab.arturbosch.detekt.api.Rule.defaultRuleIdAliases","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-rule/default-rule-id-aliases.html","searchKeys":["defaultRuleIdAliases","open val defaultRuleIdAliases: Set<String>","io.gitlab.arturbosch.detekt.api.Rule.defaultRuleIdAliases"]},{"name":"open val file: String","description":"io.gitlab.arturbosch.detekt.api.HasEntity.file","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-has-entity/file.html","searchKeys":["file","open val file: String","io.gitlab.arturbosch.detekt.api.HasEntity.file"]},{"name":"open val filters: PathFilters?","description":"io.gitlab.arturbosch.detekt.api.Rule.filters","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-rule/filters.html","searchKeys":["filters","open val filters: PathFilters?","io.gitlab.arturbosch.detekt.api.Rule.filters"]},{"name":"open val isError: Boolean","description":"io.gitlab.arturbosch.detekt.api.Notification.isError","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-notification/is-error.html","searchKeys":["isError","open val isError: Boolean","io.gitlab.arturbosch.detekt.api.Notification.isError"]},{"name":"open val location: Location","description":"io.gitlab.arturbosch.detekt.api.HasEntity.location","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-has-entity/location.html","searchKeys":["location","open val location: Location","io.gitlab.arturbosch.detekt.api.HasEntity.location"]},{"name":"open val parentPath: String?","description":"io.gitlab.arturbosch.detekt.api.Config.parentPath","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-config/parent-path.html","searchKeys":["parentPath","open val parentPath: String?","io.gitlab.arturbosch.detekt.api.Config.parentPath"]},{"name":"open val priority: Int","description":"io.gitlab.arturbosch.detekt.api.Extension.priority","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-extension/priority.html","searchKeys":["priority","open val priority: Int","io.gitlab.arturbosch.detekt.api.Extension.priority"]},{"name":"open val ruleId: RuleId","description":"io.gitlab.arturbosch.detekt.api.BaseRule.ruleId","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-base-rule/rule-id.html","searchKeys":["ruleId","open val ruleId: RuleId","io.gitlab.arturbosch.detekt.api.BaseRule.ruleId"]},{"name":"open val severity: Severity","description":"io.gitlab.arturbosch.detekt.api.Finding.severity","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-finding/severity.html","searchKeys":["severity","open val severity: Severity","io.gitlab.arturbosch.detekt.api.Finding.severity"]},{"name":"open val signature: String","description":"io.gitlab.arturbosch.detekt.api.HasEntity.signature","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-has-entity/signature.html","searchKeys":["signature","open val signature: String","io.gitlab.arturbosch.detekt.api.HasEntity.signature"]},{"name":"open val startPosition: SourceLocation","description":"io.gitlab.arturbosch.detekt.api.HasEntity.startPosition","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-has-entity/start-position.html","searchKeys":["startPosition","open val startPosition: SourceLocation","io.gitlab.arturbosch.detekt.api.HasEntity.startPosition"]},{"name":"operator fun plus(other: Debt): Debt","description":"io.gitlab.arturbosch.detekt.api.Debt.plus","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-debt/plus.html","searchKeys":["plus","operator fun plus(other: Debt): Debt","io.gitlab.arturbosch.detekt.api.Debt.plus"]},{"name":"override val issue: Issue","description":"io.gitlab.arturbosch.detekt.api.CodeSmell.issue","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-code-smell/issue.html","searchKeys":["issue","override val issue: Issue","io.gitlab.arturbosch.detekt.api.CodeSmell.issue"]},{"name":"override val ruleId: RuleId","description":"io.gitlab.arturbosch.detekt.api.Rule.ruleId","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-rule/rule-id.html","searchKeys":["ruleId","override val ruleId: RuleId","io.gitlab.arturbosch.detekt.api.Rule.ruleId"]},{"name":"typealias RuleId = String","description":"io.gitlab.arturbosch.detekt.api.RuleId","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-rule-id/index.html","searchKeys":["RuleId","typealias RuleId = String","io.gitlab.arturbosch.detekt.api.RuleId"]},{"name":"typealias RuleSetId = String","description":"io.gitlab.arturbosch.detekt.api.RuleSetId","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-rule-set-id/index.html","searchKeys":["RuleSetId","typealias RuleSetId = String","io.gitlab.arturbosch.detekt.api.RuleSetId"]},{"name":"val FIVE_MINS: Debt","description":"io.gitlab.arturbosch.detekt.api.Debt.Companion.FIVE_MINS","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-debt/-companion/-f-i-v-e_-m-i-n-s.html","searchKeys":["FIVE_MINS","val FIVE_MINS: Debt","io.gitlab.arturbosch.detekt.api.Debt.Companion.FIVE_MINS"]},{"name":"val PRIMITIVES: Set<KClass<out Any>>","description":"io.gitlab.arturbosch.detekt.api.Config.Companion.PRIMITIVES","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-config/-companion/-p-r-i-m-i-t-i-v-e-s.html","searchKeys":["PRIMITIVES","val PRIMITIVES: Set<KClass<out Any>>","io.gitlab.arturbosch.detekt.api.Config.Companion.PRIMITIVES"]},{"name":"val TEN_MINS: Debt","description":"io.gitlab.arturbosch.detekt.api.Debt.Companion.TEN_MINS","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-debt/-companion/-t-e-n_-m-i-n-s.html","searchKeys":["TEN_MINS","val TEN_MINS: Debt","io.gitlab.arturbosch.detekt.api.Debt.Companion.TEN_MINS"]},{"name":"val TWENTY_MINS: Debt","description":"io.gitlab.arturbosch.detekt.api.Debt.Companion.TWENTY_MINS","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-debt/-companion/-t-w-e-n-t-y_-m-i-n-s.html","searchKeys":["TWENTY_MINS","val TWENTY_MINS: Debt","io.gitlab.arturbosch.detekt.api.Debt.Companion.TWENTY_MINS"]},{"name":"val aliases: Set<String>","description":"io.gitlab.arturbosch.detekt.api.Rule.aliases","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-rule/aliases.html","searchKeys":["aliases","val aliases: Set<String>","io.gitlab.arturbosch.detekt.api.Rule.aliases"]},{"name":"val autoCorrectEnabled: Boolean","description":"io.gitlab.arturbosch.detekt.api.CorrectableCodeSmell.autoCorrectEnabled","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-correctable-code-smell/auto-correct-enabled.html","searchKeys":["autoCorrectEnabled","val autoCorrectEnabled: Boolean","io.gitlab.arturbosch.detekt.api.CorrectableCodeSmell.autoCorrectEnabled"]},{"name":"val column: Int","description":"io.gitlab.arturbosch.detekt.api.SourceLocation.column","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-source-location/column.html","searchKeys":["column","val column: Int","io.gitlab.arturbosch.detekt.api.SourceLocation.column"]},{"name":"val conversionFactor: Int","description":"io.gitlab.arturbosch.detekt.api.ProjectMetric.conversionFactor","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-project-metric/conversion-factor.html","searchKeys":["conversionFactor","val conversionFactor: Int","io.gitlab.arturbosch.detekt.api.ProjectMetric.conversionFactor"]},{"name":"val dataFlowValueFactory: DataFlowValueFactory","description":"io.gitlab.arturbosch.detekt.api.internal.CompilerResources.dataFlowValueFactory","location":"detekt-api/io.gitlab.arturbosch.detekt.api.internal/-compiler-resources/data-flow-value-factory.html","searchKeys":["dataFlowValueFactory","val dataFlowValueFactory: DataFlowValueFactory","io.gitlab.arturbosch.detekt.api.internal.CompilerResources.dataFlowValueFactory"]},{"name":"val days: Int = 0","description":"io.gitlab.arturbosch.detekt.api.Debt.days","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-debt/days.html","searchKeys":["days","val days: Int = 0","io.gitlab.arturbosch.detekt.api.Debt.days"]},{"name":"val debt: Debt","description":"io.gitlab.arturbosch.detekt.api.Issue.debt","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-issue/debt.html","searchKeys":["debt","val debt: Debt","io.gitlab.arturbosch.detekt.api.Issue.debt"]},{"name":"val description: String","description":"io.gitlab.arturbosch.detekt.api.Issue.description","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-issue/description.html","searchKeys":["description","val description: String","io.gitlab.arturbosch.detekt.api.Issue.description"]},{"name":"val description: String","description":"io.gitlab.arturbosch.detekt.api.internal.Configuration.description","location":"detekt-api/io.gitlab.arturbosch.detekt.api.internal/-configuration/description.html","searchKeys":["description","val description: String","io.gitlab.arturbosch.detekt.api.internal.Configuration.description"]},{"name":"val empty: Config","description":"io.gitlab.arturbosch.detekt.api.Config.Companion.empty","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-config/-companion/empty.html","searchKeys":["empty","val empty: Config","io.gitlab.arturbosch.detekt.api.Config.Companion.empty"]},{"name":"val end: Int","description":"io.gitlab.arturbosch.detekt.api.TextLocation.end","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-text-location/end.html","searchKeys":["end","val end: Int","io.gitlab.arturbosch.detekt.api.TextLocation.end"]},{"name":"val endSource: SourceLocation","description":"io.gitlab.arturbosch.detekt.api.Location.endSource","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-location/end-source.html","searchKeys":["endSource","val endSource: SourceLocation","io.gitlab.arturbosch.detekt.api.Location.endSource"]},{"name":"val entries: EnumEntries<Notification.Level>","description":"io.gitlab.arturbosch.detekt.api.Notification.Level.entries","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-notification/-level/entries.html","searchKeys":["entries","val entries: EnumEntries<Notification.Level>","io.gitlab.arturbosch.detekt.api.Notification.Level.entries"]},{"name":"val entries: EnumEntries<Severity>","description":"io.gitlab.arturbosch.detekt.api.Severity.entries","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-severity/entries.html","searchKeys":["entries","val entries: EnumEntries<Severity>","io.gitlab.arturbosch.detekt.api.Severity.entries"]},{"name":"val filePath: FilePath","description":"io.gitlab.arturbosch.detekt.api.Location.filePath","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-location/file-path.html","searchKeys":["filePath","val filePath: FilePath","io.gitlab.arturbosch.detekt.api.Location.filePath"]},{"name":"val hours: Int = 0","description":"io.gitlab.arturbosch.detekt.api.Debt.hours","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-debt/hours.html","searchKeys":["hours","val hours: Int = 0","io.gitlab.arturbosch.detekt.api.Debt.hours"]},{"name":"val id: RuleSetId","description":"io.gitlab.arturbosch.detekt.api.RuleSet.id","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-rule-set/id.html","searchKeys":["id","val id: RuleSetId","io.gitlab.arturbosch.detekt.api.RuleSet.id"]},{"name":"val id: String","description":"io.gitlab.arturbosch.detekt.api.Issue.id","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-issue/id.html","searchKeys":["id","val id: String","io.gitlab.arturbosch.detekt.api.Issue.id"]},{"name":"val isDouble: Boolean = false","description":"io.gitlab.arturbosch.detekt.api.ProjectMetric.isDouble","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-project-metric/is-double.html","searchKeys":["isDouble","val isDouble: Boolean = false","io.gitlab.arturbosch.detekt.api.ProjectMetric.isDouble"]},{"name":"val ktElement: KtElement? = null","description":"io.gitlab.arturbosch.detekt.api.Entity.ktElement","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-entity/kt-element.html","searchKeys":["ktElement","val ktElement: KtElement? = null","io.gitlab.arturbosch.detekt.api.Entity.ktElement"]},{"name":"val languageVersionSettings: LanguageVersionSettings","description":"io.gitlab.arturbosch.detekt.api.internal.CompilerResources.languageVersionSettings","location":"detekt-api/io.gitlab.arturbosch.detekt.api.internal/-compiler-resources/language-version-settings.html","searchKeys":["languageVersionSettings","val languageVersionSettings: LanguageVersionSettings","io.gitlab.arturbosch.detekt.api.internal.CompilerResources.languageVersionSettings"]},{"name":"val line: Int","description":"io.gitlab.arturbosch.detekt.api.SourceLocation.line","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-source-location/line.html","searchKeys":["line","val line: Int","io.gitlab.arturbosch.detekt.api.SourceLocation.line"]},{"name":"val location: Location","description":"io.gitlab.arturbosch.detekt.api.Entity.location","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-entity/location.html","searchKeys":["location","val location: Location","io.gitlab.arturbosch.detekt.api.Entity.location"]},{"name":"val mins: Int = 0","description":"io.gitlab.arturbosch.detekt.api.Debt.mins","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-debt/mins.html","searchKeys":["mins","val mins: Int = 0","io.gitlab.arturbosch.detekt.api.Debt.mins"]},{"name":"val name: String","description":"io.gitlab.arturbosch.detekt.api.Entity.name","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-entity/name.html","searchKeys":["name","val name: String","io.gitlab.arturbosch.detekt.api.Entity.name"]},{"name":"val priority: Int","description":"io.gitlab.arturbosch.detekt.api.ProjectMetric.priority","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-project-metric/priority.html","searchKeys":["priority","val priority: Int","io.gitlab.arturbosch.detekt.api.ProjectMetric.priority"]},{"name":"val reason: String","description":"io.gitlab.arturbosch.detekt.api.UnstableApi.reason","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-unstable-api/reason.html","searchKeys":["reason","val reason: String","io.gitlab.arturbosch.detekt.api.UnstableApi.reason"]},{"name":"val reason: String? = null","description":"io.gitlab.arturbosch.detekt.api.ValueWithReason.reason","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-value-with-reason/reason.html","searchKeys":["reason","val reason: String? = null","io.gitlab.arturbosch.detekt.api.ValueWithReason.reason"]},{"name":"val rules: List<BaseRule>","description":"io.gitlab.arturbosch.detekt.api.RuleSet.rules","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-rule-set/rules.html","searchKeys":["rules","val rules: List<BaseRule>","io.gitlab.arturbosch.detekt.api.RuleSet.rules"]},{"name":"val signature: String","description":"io.gitlab.arturbosch.detekt.api.Entity.signature","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-entity/signature.html","searchKeys":["signature","val signature: String","io.gitlab.arturbosch.detekt.api.Entity.signature"]},{"name":"val since: String","description":"io.gitlab.arturbosch.detekt.api.internal.ActiveByDefault.since","location":"detekt-api/io.gitlab.arturbosch.detekt.api.internal/-active-by-default/since.html","searchKeys":["since","val since: String","io.gitlab.arturbosch.detekt.api.internal.ActiveByDefault.since"]},{"name":"val since: String","description":"io.gitlab.arturbosch.detekt.api.internal.AutoCorrectable.since","location":"detekt-api/io.gitlab.arturbosch.detekt.api.internal/-auto-correctable/since.html","searchKeys":["since","val since: String","io.gitlab.arturbosch.detekt.api.internal.AutoCorrectable.since"]},{"name":"val source: SourceLocation","description":"io.gitlab.arturbosch.detekt.api.Location.source","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-location/source.html","searchKeys":["source","val source: SourceLocation","io.gitlab.arturbosch.detekt.api.Location.source"]},{"name":"val start: Int","description":"io.gitlab.arturbosch.detekt.api.TextLocation.start","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-text-location/start.html","searchKeys":["start","val start: Int","io.gitlab.arturbosch.detekt.api.TextLocation.start"]},{"name":"val text: TextLocation","description":"io.gitlab.arturbosch.detekt.api.Location.text","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-location/text.html","searchKeys":["text","val text: TextLocation","io.gitlab.arturbosch.detekt.api.Location.text"]},{"name":"val type: String","description":"io.gitlab.arturbosch.detekt.api.ProjectMetric.type","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-project-metric/type.html","searchKeys":["type","val type: String","io.gitlab.arturbosch.detekt.api.ProjectMetric.type"]},{"name":"val value: Int","description":"io.gitlab.arturbosch.detekt.api.ProjectMetric.value","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-project-metric/value.html","searchKeys":["value","val value: Int","io.gitlab.arturbosch.detekt.api.ProjectMetric.value"]},{"name":"val value: String","description":"io.gitlab.arturbosch.detekt.api.ValueWithReason.value","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-value-with-reason/value.html","searchKeys":["value","val value: String","io.gitlab.arturbosch.detekt.api.ValueWithReason.value"]},{"name":"var bindingContext: BindingContext","description":"io.gitlab.arturbosch.detekt.api.BaseRule.bindingContext","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-base-rule/binding-context.html","searchKeys":["bindingContext","var bindingContext: BindingContext","io.gitlab.arturbosch.detekt.api.BaseRule.bindingContext"]},{"name":"var compilerResources: CompilerResources?","description":"io.gitlab.arturbosch.detekt.api.BaseRule.compilerResources","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-base-rule/compiler-resources.html","searchKeys":["compilerResources","var compilerResources: CompilerResources?","io.gitlab.arturbosch.detekt.api.BaseRule.compilerResources"]},{"name":"var pathFilters: PathFilters?","description":"io.gitlab.arturbosch.detekt.api.RuleSet.pathFilters","location":"detekt-api/io.gitlab.arturbosch.detekt.api/-rule-set/path-filters.html","searchKeys":["pathFilters","var pathFilters: PathFilters?","io.gitlab.arturbosch.detekt.api.RuleSet.pathFilters"]},{"name":"annotation class KotlinCoreEnvironmentTest(val additionalJavaSourcePaths: Array<String> = [])","description":"io.gitlab.arturbosch.detekt.rules.KotlinCoreEnvironmentTest","location":"detekt-test-utils/io.gitlab.arturbosch.detekt.rules/-kotlin-core-environment-test/index.html","searchKeys":["KotlinCoreEnvironmentTest","annotation class KotlinCoreEnvironmentTest(val additionalJavaSourcePaths: Array<String> = [])","io.gitlab.arturbosch.detekt.rules.KotlinCoreEnvironmentTest"]},{"name":"class KotlinCoreEnvironmentWrapper(environment: KotlinCoreEnvironment?, disposable: Disposable)","description":"io.github.detekt.test.utils.KotlinCoreEnvironmentWrapper","location":"detekt-test-utils/io.github.detekt.test.utils/-kotlin-core-environment-wrapper/index.html","searchKeys":["KotlinCoreEnvironmentWrapper","class KotlinCoreEnvironmentWrapper(environment: KotlinCoreEnvironment?, disposable: Disposable)","io.github.detekt.test.utils.KotlinCoreEnvironmentWrapper"]},{"name":"class NullPrintStream : PrintStream","description":"io.github.detekt.test.utils.NullPrintStream","location":"detekt-test-utils/io.github.detekt.test.utils/-null-print-stream/index.html","searchKeys":["NullPrintStream","class NullPrintStream : PrintStream","io.github.detekt.test.utils.NullPrintStream"]},{"name":"class StringPrintStream : PrintStream","description":"io.github.detekt.test.utils.StringPrintStream","location":"detekt-test-utils/io.github.detekt.test.utils/-string-print-stream/index.html","searchKeys":["StringPrintStream","class StringPrintStream : PrintStream","io.github.detekt.test.utils.StringPrintStream"]},{"name":"constructor()","description":"io.github.detekt.test.utils.NullPrintStream.NullPrintStream","location":"detekt-test-utils/io.github.detekt.test.utils/-null-print-stream/-null-print-stream.html","searchKeys":["NullPrintStream","constructor()","io.github.detekt.test.utils.NullPrintStream.NullPrintStream"]},{"name":"constructor()","description":"io.github.detekt.test.utils.StringPrintStream.StringPrintStream","location":"detekt-test-utils/io.github.detekt.test.utils/-string-print-stream/-string-print-stream.html","searchKeys":["StringPrintStream","constructor()","io.github.detekt.test.utils.StringPrintStream.StringPrintStream"]},{"name":"constructor(environment: KotlinCoreEnvironment?, disposable: Disposable)","description":"io.github.detekt.test.utils.KotlinCoreEnvironmentWrapper.KotlinCoreEnvironmentWrapper","location":"detekt-test-utils/io.github.detekt.test.utils/-kotlin-core-environment-wrapper/-kotlin-core-environment-wrapper.html","searchKeys":["KotlinCoreEnvironmentWrapper","constructor(environment: KotlinCoreEnvironment?, disposable: Disposable)","io.github.detekt.test.utils.KotlinCoreEnvironmentWrapper.KotlinCoreEnvironmentWrapper"]},{"name":"fun compile(code: String)","description":"io.github.detekt.test.utils.KotlinScriptEngine.compile","location":"detekt-test-utils/io.github.detekt.test.utils/-kotlin-script-engine/compile.html","searchKeys":["compile","fun compile(code: String)","io.github.detekt.test.utils.KotlinScriptEngine.compile"]},{"name":"fun compileContentForTest(content: String, filename: String = TEST_FILENAME): KtFile","description":"io.github.detekt.test.utils.compileContentForTest","location":"detekt-test-utils/io.github.detekt.test.utils/compile-content-for-test.html","searchKeys":["compileContentForTest","fun compileContentForTest(content: String, filename: String = TEST_FILENAME): KtFile","io.github.detekt.test.utils.compileContentForTest"]},{"name":"fun compileForTest(path: Path): KtFile","description":"io.github.detekt.test.utils.compileForTest","location":"detekt-test-utils/io.github.detekt.test.utils/compile-for-test.html","searchKeys":["compileForTest","fun compileForTest(path: Path): KtFile","io.github.detekt.test.utils.compileForTest"]},{"name":"fun createEnvironment(additionalRootPaths: List<File> = emptyList(), additionalJavaSourceRootPaths: List<File> = emptyList()): KotlinCoreEnvironmentWrapper","description":"io.github.detekt.test.utils.createEnvironment","location":"detekt-test-utils/io.github.detekt.test.utils/create-environment.html","searchKeys":["createEnvironment","fun createEnvironment(additionalRootPaths: List<File> = emptyList(), additionalJavaSourceRootPaths: List<File> = emptyList()): KotlinCoreEnvironmentWrapper","io.github.detekt.test.utils.createEnvironment"]},{"name":"fun createPsiFactory(): KtPsiFactory","description":"io.github.detekt.test.utils.createPsiFactory","location":"detekt-test-utils/io.github.detekt.test.utils/create-psi-factory.html","searchKeys":["createPsiFactory","fun createPsiFactory(): KtPsiFactory","io.github.detekt.test.utils.createPsiFactory"]},{"name":"fun createTempDirectoryForTest(prefix: String): Path","description":"io.github.detekt.test.utils.createTempDirectoryForTest","location":"detekt-test-utils/io.github.detekt.test.utils/create-temp-directory-for-test.html","searchKeys":["createTempDirectoryForTest","fun createTempDirectoryForTest(prefix: String): Path","io.github.detekt.test.utils.createTempDirectoryForTest"]},{"name":"fun createTempFileForTest(prefix: String, suffix: String): Path","description":"io.github.detekt.test.utils.createTempFileForTest","location":"detekt-test-utils/io.github.detekt.test.utils/create-temp-file-for-test.html","searchKeys":["createTempFileForTest","fun createTempFileForTest(prefix: String, suffix: String): Path","io.github.detekt.test.utils.createTempFileForTest"]},{"name":"fun dispose()","description":"io.github.detekt.test.utils.KotlinCoreEnvironmentWrapper.dispose","location":"detekt-test-utils/io.github.detekt.test.utils/-kotlin-core-environment-wrapper/dispose.html","searchKeys":["dispose","fun dispose()","io.github.detekt.test.utils.KotlinCoreEnvironmentWrapper.dispose"]},{"name":"fun readResourceContent(name: String): String","description":"io.github.detekt.test.utils.readResourceContent","location":"detekt-test-utils/io.github.detekt.test.utils/read-resource-content.html","searchKeys":["readResourceContent","fun readResourceContent(name: String): String","io.github.detekt.test.utils.readResourceContent"]},{"name":"fun resource(name: String): URI","description":"io.github.detekt.test.utils.resource","location":"detekt-test-utils/io.github.detekt.test.utils/resource.html","searchKeys":["resource","fun resource(name: String): URI","io.github.detekt.test.utils.resource"]},{"name":"fun resourceAsPath(name: String): Path","description":"io.github.detekt.test.utils.resourceAsPath","location":"detekt-test-utils/io.github.detekt.test.utils/resource-as-path.html","searchKeys":["resourceAsPath","fun resourceAsPath(name: String): Path","io.github.detekt.test.utils.resourceAsPath"]},{"name":"fun resourceUrl(name: String): URL","description":"io.github.detekt.test.utils.resourceUrl","location":"detekt-test-utils/io.github.detekt.test.utils/resource-url.html","searchKeys":["resourceUrl","fun resourceUrl(name: String): URL","io.github.detekt.test.utils.resourceUrl"]},{"name":"object KotlinScriptEngine","description":"io.github.detekt.test.utils.KotlinScriptEngine","location":"detekt-test-utils/io.github.detekt.test.utils/-kotlin-script-engine/index.html","searchKeys":["KotlinScriptEngine","object KotlinScriptEngine","io.github.detekt.test.utils.KotlinScriptEngine"]},{"name":"open override fun toString(): String","description":"io.github.detekt.test.utils.StringPrintStream.toString","location":"detekt-test-utils/io.github.detekt.test.utils/-string-print-stream/to-string.html","searchKeys":["toString","open override fun toString(): String","io.github.detekt.test.utils.StringPrintStream.toString"]},{"name":"val additionalJavaSourcePaths: Array<String>","description":"io.gitlab.arturbosch.detekt.rules.KotlinCoreEnvironmentTest.additionalJavaSourcePaths","location":"detekt-test-utils/io.gitlab.arturbosch.detekt.rules/-kotlin-core-environment-test/additional-java-source-paths.html","searchKeys":["additionalJavaSourcePaths","val additionalJavaSourcePaths: Array<String>","io.gitlab.arturbosch.detekt.rules.KotlinCoreEnvironmentTest.additionalJavaSourcePaths"]},{"name":"val env: KotlinCoreEnvironment","description":"io.github.detekt.test.utils.KotlinCoreEnvironmentWrapper.env","location":"detekt-test-utils/io.github.detekt.test.utils/-kotlin-core-environment-wrapper/env.html","searchKeys":["env","val env: KotlinCoreEnvironment","io.github.detekt.test.utils.KotlinCoreEnvironmentWrapper.env"]},{"name":"class FilePath(val absolutePath: Path, val basePath: Path? = null, val relativePath: Path? = null)","description":"io.github.detekt.psi.FilePath","location":"detekt-psi-utils/io.github.detekt.psi/-file-path/index.html","searchKeys":["FilePath","class FilePath(val absolutePath: Path, val basePath: Path? = null, val relativePath: Path? = null)","io.github.detekt.psi.FilePath"]},{"name":"class FullQualifiedNameGuesser","description":"io.github.detekt.psi.internal.FullQualifiedNameGuesser","location":"detekt-psi-utils/io.github.detekt.psi.internal/-full-qualified-name-guesser/index.html","searchKeys":["FullQualifiedNameGuesser","class FullQualifiedNameGuesser","io.github.detekt.psi.internal.FullQualifiedNameGuesser"]},{"name":"const val ALLOWED_EXCEPTION_NAME: String","description":"io.gitlab.arturbosch.detekt.rules.ALLOWED_EXCEPTION_NAME","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/-a-l-l-o-w-e-d_-e-x-c-e-p-t-i-o-n_-n-a-m-e.html","searchKeys":["ALLOWED_EXCEPTION_NAME","const val ALLOWED_EXCEPTION_NAME: String","io.gitlab.arturbosch.detekt.rules.ALLOWED_EXCEPTION_NAME"]},{"name":"const val IT_LITERAL: String","description":"io.gitlab.arturbosch.detekt.rules.IT_LITERAL","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/-i-t_-l-i-t-e-r-a-l.html","searchKeys":["IT_LITERAL","const val IT_LITERAL: String","io.gitlab.arturbosch.detekt.rules.IT_LITERAL"]},{"name":"const val KOTLIN_SCRIPT_SUFFIX: String","description":"io.github.detekt.psi.KOTLIN_SCRIPT_SUFFIX","location":"detekt-psi-utils/io.github.detekt.psi/-k-o-t-l-i-n_-s-c-r-i-p-t_-s-u-f-f-i-x.html","searchKeys":["KOTLIN_SCRIPT_SUFFIX","const val KOTLIN_SCRIPT_SUFFIX: String","io.github.detekt.psi.KOTLIN_SCRIPT_SUFFIX"]},{"name":"const val KOTLIN_SUFFIX: String","description":"io.github.detekt.psi.KOTLIN_SUFFIX","location":"detekt-psi-utils/io.github.detekt.psi/-k-o-t-l-i-n_-s-u-f-f-i-x.html","searchKeys":["KOTLIN_SUFFIX","const val KOTLIN_SUFFIX: String","io.github.detekt.psi.KOTLIN_SUFFIX"]},{"name":"const val LET_LITERAL: String","description":"io.gitlab.arturbosch.detekt.rules.LET_LITERAL","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/-l-e-t_-l-i-t-e-r-a-l.html","searchKeys":["LET_LITERAL","const val LET_LITERAL: String","io.gitlab.arturbosch.detekt.rules.LET_LITERAL"]},{"name":"constructor(absolutePath: Path, basePath: Path? = null, relativePath: Path? = null)","description":"io.github.detekt.psi.FilePath.FilePath","location":"detekt-psi-utils/io.github.detekt.psi/-file-path/-file-path.html","searchKeys":["FilePath","constructor(absolutePath: Path, basePath: Path? = null, relativePath: Path? = null)","io.github.detekt.psi.FilePath.FilePath"]},{"name":"constructor(root: KtFile)","description":"io.github.detekt.psi.internal.FullQualifiedNameGuesser.FullQualifiedNameGuesser","location":"detekt-psi-utils/io.github.detekt.psi.internal/-full-qualified-name-guesser/-full-qualified-name-guesser.html","searchKeys":["FullQualifiedNameGuesser","constructor(root: KtFile)","io.github.detekt.psi.internal.FullQualifiedNameGuesser.FullQualifiedNameGuesser"]},{"name":"fun <T : KtExpression> KtExpression.isElvisOperatorGuardClause(descendantExpr: T): Boolean","description":"io.gitlab.arturbosch.detekt.rules.isElvisOperatorGuardClause","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/is-elvis-operator-guard-clause.html","searchKeys":["isElvisOperatorGuardClause","fun <T : KtExpression> KtExpression.isElvisOperatorGuardClause(descendantExpr: T): Boolean","io.gitlab.arturbosch.detekt.rules.isElvisOperatorGuardClause"]},{"name":"fun <T : KtExpression> KtExpression.isIfConditionGuardClause(descendantExpr: T): Boolean","description":"io.gitlab.arturbosch.detekt.rules.isIfConditionGuardClause","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/is-if-condition-guard-clause.html","searchKeys":["isIfConditionGuardClause","fun <T : KtExpression> KtExpression.isIfConditionGuardClause(descendantExpr: T): Boolean","io.gitlab.arturbosch.detekt.rules.isIfConditionGuardClause"]},{"name":"fun KotlinType.fqNameOrNull(): FqName?","description":"io.gitlab.arturbosch.detekt.rules.fqNameOrNull","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/fq-name-or-null.html","searchKeys":["fqNameOrNull","fun KotlinType.fqNameOrNull(): FqName?","io.gitlab.arturbosch.detekt.rules.fqNameOrNull"]},{"name":"fun KtAnnotated.hasAnnotation(vararg annotationNames: String): Boolean","description":"io.gitlab.arturbosch.detekt.rules.hasAnnotation","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/has-annotation.html","searchKeys":["hasAnnotation","fun KtAnnotated.hasAnnotation(vararg annotationNames: String): Boolean","io.gitlab.arturbosch.detekt.rules.hasAnnotation"]},{"name":"fun KtBinaryExpression.isNonNullCheck(): Boolean","description":"io.gitlab.arturbosch.detekt.rules.isNonNullCheck","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/is-non-null-check.html","searchKeys":["isNonNullCheck","fun KtBinaryExpression.isNonNullCheck(): Boolean","io.gitlab.arturbosch.detekt.rules.isNonNullCheck"]},{"name":"fun KtBinaryExpression.isNullCheck(): Boolean","description":"io.gitlab.arturbosch.detekt.rules.isNullCheck","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/is-null-check.html","searchKeys":["isNullCheck","fun KtBinaryExpression.isNullCheck(): Boolean","io.gitlab.arturbosch.detekt.rules.isNullCheck"]},{"name":"fun KtCallExpression.isCalling(fqName: FqName, bindingContext: BindingContext): Boolean","description":"io.gitlab.arturbosch.detekt.rules.isCalling","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/is-calling.html","searchKeys":["isCalling","fun KtCallExpression.isCalling(fqName: FqName, bindingContext: BindingContext): Boolean","io.gitlab.arturbosch.detekt.rules.isCalling"]},{"name":"fun KtCallExpression.isCalling(fqNames: List<FqName>, bindingContext: BindingContext): Boolean","description":"io.gitlab.arturbosch.detekt.rules.isCalling","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/is-calling.html","searchKeys":["isCalling","fun KtCallExpression.isCalling(fqNames: List<FqName>, bindingContext: BindingContext): Boolean","io.gitlab.arturbosch.detekt.rules.isCalling"]},{"name":"fun KtCallExpression.isCallingWithNonNullCheckArgument(fqName: FqName, bindingContext: BindingContext): Boolean","description":"io.gitlab.arturbosch.detekt.rules.isCallingWithNonNullCheckArgument","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/is-calling-with-non-null-check-argument.html","searchKeys":["isCallingWithNonNullCheckArgument","fun KtCallExpression.isCallingWithNonNullCheckArgument(fqName: FqName, bindingContext: BindingContext): Boolean","io.gitlab.arturbosch.detekt.rules.isCallingWithNonNullCheckArgument"]},{"name":"fun KtCallExpression.isUsedForNesting(): Boolean","description":"io.gitlab.arturbosch.detekt.rules.isUsedForNesting","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/is-used-for-nesting.html","searchKeys":["isUsedForNesting","fun KtCallExpression.isUsedForNesting(): Boolean","io.gitlab.arturbosch.detekt.rules.isUsedForNesting"]},{"name":"fun KtCallExpression.receiverIsUsed(context: BindingContext): Boolean","description":"io.gitlab.arturbosch.detekt.rules.receiverIsUsed","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/receiver-is-used.html","searchKeys":["receiverIsUsed","fun KtCallExpression.receiverIsUsed(context: BindingContext): Boolean","io.gitlab.arturbosch.detekt.rules.receiverIsUsed"]},{"name":"fun KtCatchClause.isAllowedExceptionName(regex: Regex): Boolean","description":"io.gitlab.arturbosch.detekt.rules.isAllowedExceptionName","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/is-allowed-exception-name.html","searchKeys":["isAllowedExceptionName","fun KtCatchClause.isAllowedExceptionName(regex: Regex): Boolean","io.gitlab.arturbosch.detekt.rules.isAllowedExceptionName"]},{"name":"fun KtClass.companionObject(): KtObjectDeclaration?","description":"io.gitlab.arturbosch.detekt.rules.companionObject","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/companion-object.html","searchKeys":["companionObject","fun KtClass.companionObject(): KtObjectDeclaration?","io.gitlab.arturbosch.detekt.rules.companionObject"]},{"name":"fun KtClassOrObject.hasCommentInside(): Boolean","description":"io.gitlab.arturbosch.detekt.rules.hasCommentInside","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/has-comment-inside.html","searchKeys":["hasCommentInside","fun KtClassOrObject.hasCommentInside(): Boolean","io.gitlab.arturbosch.detekt.rules.hasCommentInside"]},{"name":"fun KtExpression.getDataFlowAwareTypes(bindingContext: BindingContext, languageVersionSettings: LanguageVersionSettings, dataFlowValueFactory: DataFlowValueFactory, originalType: KotlinType? = bindingContext.getType(this)): Set<KotlinType>","description":"io.gitlab.arturbosch.detekt.rules.getDataFlowAwareTypes","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/get-data-flow-aware-types.html","searchKeys":["getDataFlowAwareTypes","fun KtExpression.getDataFlowAwareTypes(bindingContext: BindingContext, languageVersionSettings: LanguageVersionSettings, dataFlowValueFactory: DataFlowValueFactory, originalType: KotlinType? = bindingContext.getType(this)): Set<KotlinType>","io.gitlab.arturbosch.detekt.rules.getDataFlowAwareTypes"]},{"name":"fun KtExpression.isNullable(bindingContext: BindingContext, languageVersionSettings: LanguageVersionSettings, dataFlowValueFactory: DataFlowValueFactory, shouldConsiderPlatformTypeAsNullable: Boolean): Boolean","description":"io.gitlab.arturbosch.detekt.rules.isNullable","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/is-nullable.html","searchKeys":["isNullable","fun KtExpression.isNullable(bindingContext: BindingContext, languageVersionSettings: LanguageVersionSettings, dataFlowValueFactory: DataFlowValueFactory, shouldConsiderPlatformTypeAsNullable: Boolean): Boolean","io.gitlab.arturbosch.detekt.rules.isNullable"]},{"name":"fun KtExpression.isSuperCall(): Boolean","description":"io.gitlab.arturbosch.detekt.rules.isSuperCall","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/is-super-call.html","searchKeys":["isSuperCall","fun KtExpression.isSuperCall(): Boolean","io.gitlab.arturbosch.detekt.rules.isSuperCall"]},{"name":"fun KtExpression.isUnitExpression(): Boolean","description":"io.gitlab.arturbosch.detekt.rules.isUnitExpression","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/is-unit-expression.html","searchKeys":["isUnitExpression","fun KtExpression.isUnitExpression(): Boolean","io.gitlab.arturbosch.detekt.rules.isUnitExpression"]},{"name":"fun KtFunction.hasCorrectEqualsParameter(): Boolean","description":"io.gitlab.arturbosch.detekt.rules.hasCorrectEqualsParameter","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/has-correct-equals-parameter.html","searchKeys":["hasCorrectEqualsParameter","fun KtFunction.hasCorrectEqualsParameter(): Boolean","io.gitlab.arturbosch.detekt.rules.hasCorrectEqualsParameter"]},{"name":"fun KtFunction.isEqualsFunction(): Boolean","description":"io.gitlab.arturbosch.detekt.rules.isEqualsFunction","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/is-equals-function.html","searchKeys":["isEqualsFunction","fun KtFunction.isEqualsFunction(): Boolean","io.gitlab.arturbosch.detekt.rules.isEqualsFunction"]},{"name":"fun KtFunction.isHashCodeFunction(): Boolean","description":"io.gitlab.arturbosch.detekt.rules.isHashCodeFunction","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/is-hash-code-function.html","searchKeys":["isHashCodeFunction","fun KtFunction.isHashCodeFunction(): Boolean","io.gitlab.arturbosch.detekt.rules.isHashCodeFunction"]},{"name":"fun KtIfExpression.isElseIf(): Boolean","description":"io.gitlab.arturbosch.detekt.rules.isElseIf","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/is-else-if.html","searchKeys":["isElseIf","fun KtIfExpression.isElseIf(): Boolean","io.gitlab.arturbosch.detekt.rules.isElseIf"]},{"name":"fun KtLambdaExpression.firstParameter(bindingContext: BindingContext): ValueParameterDescriptor?","description":"io.gitlab.arturbosch.detekt.rules.firstParameter","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/first-parameter.html","searchKeys":["firstParameter","fun KtLambdaExpression.firstParameter(bindingContext: BindingContext): ValueParameterDescriptor?","io.gitlab.arturbosch.detekt.rules.firstParameter"]},{"name":"fun KtLambdaExpression.hasImplicitParameterReference(implicitParameter: ValueParameterDescriptor, bindingContext: BindingContext): Boolean","description":"io.gitlab.arturbosch.detekt.rules.hasImplicitParameterReference","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/has-implicit-parameter-reference.html","searchKeys":["hasImplicitParameterReference","fun KtLambdaExpression.hasImplicitParameterReference(implicitParameter: ValueParameterDescriptor, bindingContext: BindingContext): Boolean","io.gitlab.arturbosch.detekt.rules.hasImplicitParameterReference"]},{"name":"fun KtLambdaExpression.implicitParameter(bindingContext: BindingContext): ValueParameterDescriptor?","description":"io.gitlab.arturbosch.detekt.rules.implicitParameter","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/implicit-parameter.html","searchKeys":["implicitParameter","fun KtLambdaExpression.implicitParameter(bindingContext: BindingContext): ValueParameterDescriptor?","io.gitlab.arturbosch.detekt.rules.implicitParameter"]},{"name":"fun KtModifierListOwner.isAbstract(): Boolean","description":"io.gitlab.arturbosch.detekt.rules.isAbstract","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/is-abstract.html","searchKeys":["isAbstract","fun KtModifierListOwner.isAbstract(): Boolean","io.gitlab.arturbosch.detekt.rules.isAbstract"]},{"name":"fun KtModifierListOwner.isActual(): Boolean","description":"io.gitlab.arturbosch.detekt.rules.isActual","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/is-actual.html","searchKeys":["isActual","fun KtModifierListOwner.isActual(): Boolean","io.gitlab.arturbosch.detekt.rules.isActual"]},{"name":"fun KtModifierListOwner.isConstant(): Boolean","description":"io.gitlab.arturbosch.detekt.rules.isConstant","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/is-constant.html","searchKeys":["isConstant","fun KtModifierListOwner.isConstant(): Boolean","io.gitlab.arturbosch.detekt.rules.isConstant"]},{"name":"fun KtModifierListOwner.isExpect(): Boolean","description":"io.gitlab.arturbosch.detekt.rules.isExpect","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/is-expect.html","searchKeys":["isExpect","fun KtModifierListOwner.isExpect(): Boolean","io.gitlab.arturbosch.detekt.rules.isExpect"]},{"name":"fun KtModifierListOwner.isExternal(): Boolean","description":"io.gitlab.arturbosch.detekt.rules.isExternal","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/is-external.html","searchKeys":["isExternal","fun KtModifierListOwner.isExternal(): Boolean","io.gitlab.arturbosch.detekt.rules.isExternal"]},{"name":"fun KtModifierListOwner.isInline(): Boolean","description":"io.gitlab.arturbosch.detekt.rules.isInline","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/is-inline.html","searchKeys":["isInline","fun KtModifierListOwner.isInline(): Boolean","io.gitlab.arturbosch.detekt.rules.isInline"]},{"name":"fun KtModifierListOwner.isInternal(): Boolean","description":"io.gitlab.arturbosch.detekt.rules.isInternal","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/is-internal.html","searchKeys":["isInternal","fun KtModifierListOwner.isInternal(): Boolean","io.gitlab.arturbosch.detekt.rules.isInternal"]},{"name":"fun KtModifierListOwner.isLateinit(): Boolean","description":"io.gitlab.arturbosch.detekt.rules.isLateinit","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/is-lateinit.html","searchKeys":["isLateinit","fun KtModifierListOwner.isLateinit(): Boolean","io.gitlab.arturbosch.detekt.rules.isLateinit"]},{"name":"fun KtModifierListOwner.isOpen(): Boolean","description":"io.gitlab.arturbosch.detekt.rules.isOpen","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/is-open.html","searchKeys":["isOpen","fun KtModifierListOwner.isOpen(): Boolean","io.gitlab.arturbosch.detekt.rules.isOpen"]},{"name":"fun KtModifierListOwner.isOperator(): Boolean","description":"io.gitlab.arturbosch.detekt.rules.isOperator","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/is-operator.html","searchKeys":["isOperator","fun KtModifierListOwner.isOperator(): Boolean","io.gitlab.arturbosch.detekt.rules.isOperator"]},{"name":"fun KtModifierListOwner.isOverride(): Boolean","description":"io.gitlab.arturbosch.detekt.rules.isOverride","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/is-override.html","searchKeys":["isOverride","fun KtModifierListOwner.isOverride(): Boolean","io.gitlab.arturbosch.detekt.rules.isOverride"]},{"name":"fun KtModifierListOwner.isProtected(): Boolean","description":"io.gitlab.arturbosch.detekt.rules.isProtected","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/is-protected.html","searchKeys":["isProtected","fun KtModifierListOwner.isProtected(): Boolean","io.gitlab.arturbosch.detekt.rules.isProtected"]},{"name":"fun KtModifierListOwner.isPublicNotOverridden(): Boolean","description":"io.gitlab.arturbosch.detekt.rules.isPublicNotOverridden","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/is-public-not-overridden.html","searchKeys":["isPublicNotOverridden","fun KtModifierListOwner.isPublicNotOverridden(): Boolean","io.gitlab.arturbosch.detekt.rules.isPublicNotOverridden"]},{"name":"fun KtModifierListOwner.isPublicNotOverridden(considerProtectedAsPublic: Boolean): Boolean","description":"io.gitlab.arturbosch.detekt.rules.isPublicNotOverridden","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/is-public-not-overridden.html","searchKeys":["isPublicNotOverridden","fun KtModifierListOwner.isPublicNotOverridden(considerProtectedAsPublic: Boolean): Boolean","io.gitlab.arturbosch.detekt.rules.isPublicNotOverridden"]},{"name":"fun KtNamedDeclaration.identifierName(): String","description":"io.gitlab.arturbosch.detekt.rules.identifierName","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/identifier-name.html","searchKeys":["identifierName","fun KtNamedDeclaration.identifierName(): String","io.gitlab.arturbosch.detekt.rules.identifierName"]},{"name":"fun KtNamedDeclaration.isPublicInherited(): Boolean","description":"io.gitlab.arturbosch.detekt.rules.isPublicInherited","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/is-public-inherited.html","searchKeys":["isPublicInherited","fun KtNamedDeclaration.isPublicInherited(): Boolean","io.gitlab.arturbosch.detekt.rules.isPublicInherited"]},{"name":"fun KtNamedDeclaration.isPublicInherited(considerProtectedAsPublic: Boolean): Boolean","description":"io.gitlab.arturbosch.detekt.rules.isPublicInherited","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/is-public-inherited.html","searchKeys":["isPublicInherited","fun KtNamedDeclaration.isPublicInherited(considerProtectedAsPublic: Boolean): Boolean","io.gitlab.arturbosch.detekt.rules.isPublicInherited"]},{"name":"fun KtNamedFunction.hasImplicitUnitReturnType(bindingContext: BindingContext): Boolean","description":"io.gitlab.arturbosch.detekt.rules.hasImplicitUnitReturnType","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/has-implicit-unit-return-type.html","searchKeys":["hasImplicitUnitReturnType","fun KtNamedFunction.hasImplicitUnitReturnType(bindingContext: BindingContext): Boolean","io.gitlab.arturbosch.detekt.rules.hasImplicitUnitReturnType"]},{"name":"fun KtNamedFunction.isJvmFinalizeFunction(): Boolean","description":"io.gitlab.arturbosch.detekt.rules.isJvmFinalizeFunction","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/is-jvm-finalize-function.html","searchKeys":["isJvmFinalizeFunction","fun KtNamedFunction.isJvmFinalizeFunction(): Boolean","io.gitlab.arturbosch.detekt.rules.isJvmFinalizeFunction"]},{"name":"fun KtNamedFunction.isMainFunction(): Boolean","description":"io.gitlab.arturbosch.detekt.rules.isMainFunction","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/is-main-function.html","searchKeys":["isMainFunction","fun KtNamedFunction.isMainFunction(): Boolean","io.gitlab.arturbosch.detekt.rules.isMainFunction"]},{"name":"fun KtThrowExpression.isEnclosedByConditionalStatement(): Boolean","description":"io.gitlab.arturbosch.detekt.rules.isEnclosedByConditionalStatement","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/is-enclosed-by-conditional-statement.html","searchKeys":["isEnclosedByConditionalStatement","fun KtThrowExpression.isEnclosedByConditionalStatement(): Boolean","io.gitlab.arturbosch.detekt.rules.isEnclosedByConditionalStatement"]},{"name":"fun KtThrowExpression.isIllegalArgumentException(): Boolean","description":"io.gitlab.arturbosch.detekt.rules.isIllegalArgumentException","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/is-illegal-argument-exception.html","searchKeys":["isIllegalArgumentException","fun KtThrowExpression.isIllegalArgumentException(): Boolean","io.gitlab.arturbosch.detekt.rules.isIllegalArgumentException"]},{"name":"fun KtThrowExpression.isIllegalStateException(): Boolean","description":"io.gitlab.arturbosch.detekt.rules.isIllegalStateException","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/is-illegal-state-exception.html","searchKeys":["isIllegalStateException","fun KtThrowExpression.isIllegalStateException(): Boolean","io.gitlab.arturbosch.detekt.rules.isIllegalStateException"]},{"name":"fun KtValueArgument.isString(bindingContext: BindingContext): Boolean","description":"io.gitlab.arturbosch.detekt.rules.isString","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/is-string.html","searchKeys":["isString","fun KtValueArgument.isString(bindingContext: BindingContext): Boolean","io.gitlab.arturbosch.detekt.rules.isString"]},{"name":"fun List<KtValueArgument>.isEmptyOrSingleStringArgument(bindingContext: BindingContext): Boolean","description":"io.gitlab.arturbosch.detekt.rules.isEmptyOrSingleStringArgument","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/is-empty-or-single-string-argument.html","searchKeys":["isEmptyOrSingleStringArgument","fun List<KtValueArgument>.isEmptyOrSingleStringArgument(bindingContext: BindingContext): Boolean","io.gitlab.arturbosch.detekt.rules.isEmptyOrSingleStringArgument"]},{"name":"fun PsiElement.getParentExpressionRemovingParenthesis(strict: Boolean = true): PsiElement?","description":"io.gitlab.arturbosch.detekt.rules.getParentExpressionRemovingParenthesis","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/get-parent-expression-removing-parenthesis.html","searchKeys":["getParentExpressionRemovingParenthesis","fun PsiElement.getParentExpressionRemovingParenthesis(strict: Boolean = true): PsiElement?","io.gitlab.arturbosch.detekt.rules.getParentExpressionRemovingParenthesis"]},{"name":"fun PsiElement.hasCommentInside(): Boolean","description":"io.gitlab.arturbosch.detekt.rules.hasCommentInside","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/has-comment-inside.html","searchKeys":["hasCommentInside","fun PsiElement.hasCommentInside(): Boolean","io.gitlab.arturbosch.detekt.rules.hasCommentInside"]},{"name":"fun PsiElement.isPartOfString(): Boolean","description":"io.gitlab.arturbosch.detekt.rules.isPartOfString","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/is-part-of-string.html","searchKeys":["isPartOfString","fun PsiElement.isPartOfString(): Boolean","io.gitlab.arturbosch.detekt.rules.isPartOfString"]},{"name":"fun PsiFile.absolutePath(): Path","description":"io.github.detekt.psi.absolutePath","location":"detekt-psi-utils/io.github.detekt.psi/absolute-path.html","searchKeys":["absolutePath","fun PsiFile.absolutePath(): Path","io.github.detekt.psi.absolutePath"]},{"name":"fun PsiFile.fileNameWithoutSuffix(multiplatformTargetSuffixes: List<String> = emptyList()): String","description":"io.github.detekt.psi.fileNameWithoutSuffix","location":"detekt-psi-utils/io.github.detekt.psi/file-name-without-suffix.html","searchKeys":["fileNameWithoutSuffix","fun PsiFile.fileNameWithoutSuffix(multiplatformTargetSuffixes: List<String> = emptyList()): String","io.github.detekt.psi.fileNameWithoutSuffix"]},{"name":"fun PsiFile.toFilePath(): FilePath","description":"io.github.detekt.psi.toFilePath","location":"detekt-psi-utils/io.github.detekt.psi/to-file-path.html","searchKeys":["toFilePath","fun PsiFile.toFilePath(): FilePath","io.github.detekt.psi.toFilePath"]},{"name":"fun ResolvedCall<out CallableDescriptor>.isCalling(fqName: FqName): Boolean","description":"io.gitlab.arturbosch.detekt.rules.isCalling","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/is-calling.html","searchKeys":["isCalling","fun ResolvedCall<out CallableDescriptor>.isCalling(fqName: FqName): Boolean","io.gitlab.arturbosch.detekt.rules.isCalling"]},{"name":"fun String.lastArgumentMatchesKotlinReferenceUrlSyntax(): Boolean","description":"io.gitlab.arturbosch.detekt.rules.lastArgumentMatchesKotlinReferenceUrlSyntax","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/last-argument-matches-kotlin-reference-url-syntax.html","searchKeys":["lastArgumentMatchesKotlinReferenceUrlSyntax","fun String.lastArgumentMatchesKotlinReferenceUrlSyntax(): Boolean","io.gitlab.arturbosch.detekt.rules.lastArgumentMatchesKotlinReferenceUrlSyntax"]},{"name":"fun String.lastArgumentMatchesMarkdownUrlSyntax(): Boolean","description":"io.gitlab.arturbosch.detekt.rules.lastArgumentMatchesMarkdownUrlSyntax","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/last-argument-matches-markdown-url-syntax.html","searchKeys":["lastArgumentMatchesMarkdownUrlSyntax","fun String.lastArgumentMatchesMarkdownUrlSyntax(): Boolean","io.gitlab.arturbosch.detekt.rules.lastArgumentMatchesMarkdownUrlSyntax"]},{"name":"fun String.lastArgumentMatchesUrl(): Boolean","description":"io.gitlab.arturbosch.detekt.rules.lastArgumentMatchesUrl","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/last-argument-matches-url.html","searchKeys":["lastArgumentMatchesUrl","fun String.lastArgumentMatchesUrl(): Boolean","io.gitlab.arturbosch.detekt.rules.lastArgumentMatchesUrl"]},{"name":"fun fromAbsolute(path: Path): FilePath","description":"io.github.detekt.psi.FilePath.Companion.fromAbsolute","location":"detekt-psi-utils/io.github.detekt.psi/-file-path/-companion/from-absolute.html","searchKeys":["fromAbsolute","fun fromAbsolute(path: Path): FilePath","io.github.detekt.psi.FilePath.Companion.fromAbsolute"]},{"name":"fun fromRelative(basePath: Path, relativePath: Path): FilePath","description":"io.github.detekt.psi.FilePath.Companion.fromRelative","location":"detekt-psi-utils/io.github.detekt.psi/-file-path/-companion/from-relative.html","searchKeys":["fromRelative","fun fromRelative(basePath: Path, relativePath: Path): FilePath","io.github.detekt.psi.FilePath.Companion.fromRelative"]},{"name":"fun getFullQualifiedName(name: String): Set<String>","description":"io.github.detekt.psi.internal.FullQualifiedNameGuesser.getFullQualifiedName","location":"detekt-psi-utils/io.github.detekt.psi.internal/-full-qualified-name-guesser/get-full-qualified-name.html","searchKeys":["getFullQualifiedName","fun getFullQualifiedName(name: String): Set<String>","io.github.detekt.psi.internal.FullQualifiedNameGuesser.getFullQualifiedName"]},{"name":"fun getIntValueForPsiElement(element: PsiElement): Int?","description":"io.gitlab.arturbosch.detekt.rules.getIntValueForPsiElement","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/get-int-value-for-psi-element.html","searchKeys":["getIntValueForPsiElement","fun getIntValueForPsiElement(element: PsiElement): Int?","io.gitlab.arturbosch.detekt.rules.getIntValueForPsiElement"]},{"name":"fun getLineAndColumnInPsiFile(file: PsiFile, range: TextRange): PsiDiagnosticUtils.LineAndColumn?","description":"io.github.detekt.psi.getLineAndColumnInPsiFile","location":"detekt-psi-utils/io.github.detekt.psi/get-line-and-column-in-psi-file.html","searchKeys":["getLineAndColumnInPsiFile","fun getLineAndColumnInPsiFile(file: PsiFile, range: TextRange): PsiDiagnosticUtils.LineAndColumn?","io.github.detekt.psi.getLineAndColumnInPsiFile"]},{"name":"inline fun <T : Exception> KtThrowExpression.isExceptionOfType(): Boolean","description":"io.gitlab.arturbosch.detekt.rules.isExceptionOfType","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/is-exception-of-type.html","searchKeys":["isExceptionOfType","inline fun <T : Exception> KtThrowExpression.isExceptionOfType(): Boolean","io.gitlab.arturbosch.detekt.rules.isExceptionOfType"]},{"name":"inline fun <T : KtElement, S : KtElement> KtElement.parentsOfTypeUntil(strict: Boolean = true): Sequence<T>","description":"io.gitlab.arturbosch.detekt.rules.parentsOfTypeUntil","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/parents-of-type-until.html","searchKeys":["parentsOfTypeUntil","inline fun <T : KtElement, S : KtElement> KtElement.parentsOfTypeUntil(strict: Boolean = true): Sequence<T>","io.gitlab.arturbosch.detekt.rules.parentsOfTypeUntil"]},{"name":"inline fun <T : KtExpression> KtExpression.isGuardClause(): Boolean","description":"io.gitlab.arturbosch.detekt.rules.isGuardClause","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/is-guard-clause.html","searchKeys":["isGuardClause","inline fun <T : KtExpression> KtExpression.isGuardClause(): Boolean","io.gitlab.arturbosch.detekt.rules.isGuardClause"]},{"name":"inline fun <T : KtExpression> KtNamedFunction.yieldStatementsSkippingGuardClauses(): Sequence<KtExpression>","description":"io.gitlab.arturbosch.detekt.rules.yieldStatementsSkippingGuardClauses","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/yield-statements-skipping-guard-clauses.html","searchKeys":["yieldStatementsSkippingGuardClauses","inline fun <T : KtExpression> KtNamedFunction.yieldStatementsSkippingGuardClauses(): Sequence<KtExpression>","io.gitlab.arturbosch.detekt.rules.yieldStatementsSkippingGuardClauses"]},{"name":"inline fun <T : PsiElement> PsiElement.isPartOf(): Boolean","description":"io.gitlab.arturbosch.detekt.rules.isPartOf","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/is-part-of.html","searchKeys":["isPartOf","inline fun <T : PsiElement> PsiElement.isPartOf(): Boolean","io.gitlab.arturbosch.detekt.rules.isPartOf"]},{"name":"object Companion","description":"io.github.detekt.psi.FilePath.Companion","location":"detekt-psi-utils/io.github.detekt.psi/-file-path/-companion/index.html","searchKeys":["Companion","object Companion","io.github.detekt.psi.FilePath.Companion"]},{"name":"val KtThrowExpression.arguments: List<KtValueArgument>","description":"io.gitlab.arturbosch.detekt.rules.arguments","location":"detekt-psi-utils/io.gitlab.arturbosch.detekt.rules/arguments.html","searchKeys":["arguments","val KtThrowExpression.arguments: List<KtValueArgument>","io.gitlab.arturbosch.detekt.rules.arguments"]},{"name":"val absolutePath: Path","description":"io.github.detekt.psi.FilePath.absolutePath","location":"detekt-psi-utils/io.github.detekt.psi/-file-path/absolute-path.html","searchKeys":["absolutePath","val absolutePath: Path","io.github.detekt.psi.FilePath.absolutePath"]},{"name":"val basePath: Path? = null","description":"io.github.detekt.psi.FilePath.basePath","location":"detekt-psi-utils/io.github.detekt.psi/-file-path/base-path.html","searchKeys":["basePath","val basePath: Path? = null","io.github.detekt.psi.FilePath.basePath"]},{"name":"val relativePath: Path? = null","description":"io.github.detekt.psi.FilePath.relativePath","location":"detekt-psi-utils/io.github.detekt.psi/-file-path/relative-path.html","searchKeys":["relativePath","val relativePath: Path? = null","io.github.detekt.psi.FilePath.relativePath"]},{"name":"var PsiFile.basePath: Path?","description":"io.github.detekt.psi.basePath","location":"detekt-psi-utils/io.github.detekt.psi/base-path.html","searchKeys":["basePath","var PsiFile.basePath: Path?","io.github.detekt.psi.basePath"]},{"name":"var PsiFile.lineSeparator: String?","description":"io.github.detekt.psi.lineSeparator","location":"detekt-psi-utils/io.github.detekt.psi/line-separator.html","searchKeys":["lineSeparator","var PsiFile.lineSeparator: String?","io.github.detekt.psi.lineSeparator"]},{"name":"var PsiFile.relativePath: Path?","description":"io.github.detekt.psi.relativePath","location":"detekt-psi-utils/io.github.detekt.psi/relative-path.html","searchKeys":["relativePath","var PsiFile.relativePath: Path?","io.github.detekt.psi.relativePath"]},{"name":"abstract fun build(): T","description":"io.github.detekt.tooling.dsl.Builder.build","location":"detekt-tooling/io.github.detekt.tooling.dsl/-builder/build.html","searchKeys":["build","abstract fun build(): T","io.github.detekt.tooling.dsl.Builder.build"]},{"name":"abstract fun contains(id: FindingId): Boolean","description":"io.github.detekt.tooling.api.Baseline.contains","location":"detekt-tooling/io.github.detekt.tooling.api/-baseline/contains.html","searchKeys":["contains","abstract fun contains(id: FindingId): Boolean","io.github.detekt.tooling.api.Baseline.contains"]},{"name":"abstract fun copy(targetLocation: Path)","description":"io.github.detekt.tooling.api.DefaultConfigurationProvider.copy","location":"detekt-tooling/io.github.detekt.tooling.api/-default-configuration-provider/copy.html","searchKeys":["copy","abstract fun copy(targetLocation: Path)","io.github.detekt.tooling.api.DefaultConfigurationProvider.copy"]},{"name":"abstract fun current(): String","description":"io.github.detekt.tooling.api.VersionProvider.current","location":"detekt-tooling/io.github.detekt.tooling.api/-version-provider/current.html","searchKeys":["current","abstract fun current(): String","io.github.detekt.tooling.api.VersionProvider.current"]},{"name":"abstract fun get(): Config","description":"io.github.detekt.tooling.api.DefaultConfigurationProvider.get","location":"detekt-tooling/io.github.detekt.tooling.api/-default-configuration-provider/get.html","searchKeys":["get","abstract fun get(): Config","io.github.detekt.tooling.api.DefaultConfigurationProvider.get"]},{"name":"abstract fun get(processingSpec: ProcessingSpec): Detekt","description":"io.github.detekt.tooling.api.DetektProvider.get","location":"detekt-tooling/io.github.detekt.tooling.api/-detekt-provider/get.html","searchKeys":["get","abstract fun get(processingSpec: ProcessingSpec): Detekt","io.github.detekt.tooling.api.DetektProvider.get"]},{"name":"abstract fun id(finding: Finding): FindingId","description":"io.github.detekt.tooling.api.BaselineProvider.id","location":"detekt-tooling/io.github.detekt.tooling.api/-baseline-provider/id.html","searchKeys":["id","abstract fun id(finding: Finding): FindingId","io.github.detekt.tooling.api.BaselineProvider.id"]},{"name":"abstract fun init(extensionsSpec: ExtensionsSpec)","description":"io.github.detekt.tooling.api.DefaultConfigurationProvider.init","location":"detekt-tooling/io.github.detekt.tooling.api/-default-configuration-provider/init.html","searchKeys":["init","abstract fun init(extensionsSpec: ExtensionsSpec)","io.github.detekt.tooling.api.DefaultConfigurationProvider.init"]},{"name":"abstract fun match(callableDescriptor: CallableDescriptor): Boolean","description":"io.github.detekt.tooling.api.FunctionMatcher.match","location":"detekt-tooling/io.github.detekt.tooling.api/-function-matcher/match.html","searchKeys":["match","abstract fun match(callableDescriptor: CallableDescriptor): Boolean","io.github.detekt.tooling.api.FunctionMatcher.match"]},{"name":"abstract fun match(function: KtNamedFunction, bindingContext: BindingContext): Boolean","description":"io.github.detekt.tooling.api.FunctionMatcher.match","location":"detekt-tooling/io.github.detekt.tooling.api/-function-matcher/match.html","searchKeys":["match","abstract fun match(function: KtNamedFunction, bindingContext: BindingContext): Boolean","io.github.detekt.tooling.api.FunctionMatcher.match"]},{"name":"abstract fun of(manuallySuppressedIssues: FindingsIdList, currentIssues: FindingsIdList): Baseline","description":"io.github.detekt.tooling.api.BaselineProvider.of","location":"detekt-tooling/io.github.detekt.tooling.api/-baseline-provider/of.html","searchKeys":["of","abstract fun of(manuallySuppressedIssues: FindingsIdList, currentIssues: FindingsIdList): Baseline","io.github.detekt.tooling.api.BaselineProvider.of"]},{"name":"abstract fun read(sourcePath: Path): Baseline","description":"io.github.detekt.tooling.api.BaselineProvider.read","location":"detekt-tooling/io.github.detekt.tooling.api/-baseline-provider/read.html","searchKeys":["read","abstract fun read(sourcePath: Path): Baseline","io.github.detekt.tooling.api.BaselineProvider.read"]},{"name":"abstract fun run(): AnalysisResult","description":"io.github.detekt.tooling.api.Detekt.run","location":"detekt-tooling/io.github.detekt.tooling.api/-detekt/run.html","searchKeys":["run","abstract fun run(): AnalysisResult","io.github.detekt.tooling.api.Detekt.run"]},{"name":"abstract fun run(args: Array<String>): AnalysisResult","description":"io.github.detekt.tooling.api.DetektCli.run","location":"detekt-tooling/io.github.detekt.tooling.api/-detekt-cli/run.html","searchKeys":["run","abstract fun run(args: Array<String>): AnalysisResult","io.github.detekt.tooling.api.DetektCli.run"]},{"name":"abstract fun run(args: Array<String>, outputChannel: Appendable, errorChannel: Appendable): AnalysisResult","description":"io.github.detekt.tooling.api.DetektCli.run","location":"detekt-tooling/io.github.detekt.tooling.api/-detekt-cli/run.html","searchKeys":["run","abstract fun run(args: Array<String>, outputChannel: Appendable, errorChannel: Appendable): AnalysisResult","io.github.detekt.tooling.api.DetektCli.run"]},{"name":"abstract fun run(files: Collection<KtFile>, bindingContext: BindingContext): AnalysisResult","description":"io.github.detekt.tooling.api.Detekt.run","location":"detekt-tooling/io.github.detekt.tooling.api/-detekt/run.html","searchKeys":["run","abstract fun run(files: Collection<KtFile>, bindingContext: BindingContext): AnalysisResult","io.github.detekt.tooling.api.Detekt.run"]},{"name":"abstract fun run(path: Path): AnalysisResult","description":"io.github.detekt.tooling.api.Detekt.run","location":"detekt-tooling/io.github.detekt.tooling.api/-detekt/run.html","searchKeys":["run","abstract fun run(path: Path): AnalysisResult","io.github.detekt.tooling.api.Detekt.run"]},{"name":"abstract fun run(sourceCode: String, filename: String): AnalysisResult","description":"io.github.detekt.tooling.api.Detekt.run","location":"detekt-tooling/io.github.detekt.tooling.api/-detekt/run.html","searchKeys":["run","abstract fun run(sourceCode: String, filename: String): AnalysisResult","io.github.detekt.tooling.api.Detekt.run"]},{"name":"abstract fun write(targetPath: Path, baseline: Baseline)","description":"io.github.detekt.tooling.api.BaselineProvider.write","location":"detekt-tooling/io.github.detekt.tooling.api/-baseline-provider/write.html","searchKeys":["write","abstract fun write(targetPath: Path, baseline: Baseline)","io.github.detekt.tooling.api.BaselineProvider.write"]},{"name":"abstract val activateAllRules: Boolean","description":"io.github.detekt.tooling.api.spec.RulesSpec.activateAllRules","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-rules-spec/activate-all-rules.html","searchKeys":["activateAllRules","abstract val activateAllRules: Boolean","io.github.detekt.tooling.api.spec.RulesSpec.activateAllRules"]},{"name":"abstract val autoCorrect: Boolean","description":"io.github.detekt.tooling.api.spec.RulesSpec.autoCorrect","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-rules-spec/auto-correct.html","searchKeys":["autoCorrect","abstract val autoCorrect: Boolean","io.github.detekt.tooling.api.spec.RulesSpec.autoCorrect"]},{"name":"abstract val basePath: Path","description":"io.github.detekt.tooling.api.spec.ProjectSpec.basePath","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-project-spec/base-path.html","searchKeys":["basePath","abstract val basePath: Path","io.github.detekt.tooling.api.spec.ProjectSpec.basePath"]},{"name":"abstract val baselineSpec: BaselineSpec","description":"io.github.detekt.tooling.api.spec.ProcessingSpec.baselineSpec","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-processing-spec/baseline-spec.html","searchKeys":["baselineSpec","abstract val baselineSpec: BaselineSpec","io.github.detekt.tooling.api.spec.ProcessingSpec.baselineSpec"]},{"name":"abstract val classpath: String?","description":"io.github.detekt.tooling.api.spec.CompilerSpec.classpath","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-compiler-spec/classpath.html","searchKeys":["classpath","abstract val classpath: String?","io.github.detekt.tooling.api.spec.CompilerSpec.classpath"]},{"name":"abstract val compilerSpec: CompilerSpec","description":"io.github.detekt.tooling.api.spec.ProcessingSpec.compilerSpec","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-processing-spec/compiler-spec.html","searchKeys":["compilerSpec","abstract val compilerSpec: CompilerSpec","io.github.detekt.tooling.api.spec.ProcessingSpec.compilerSpec"]},{"name":"abstract val configPaths: Collection<Path>","description":"io.github.detekt.tooling.api.spec.ConfigSpec.configPaths","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-config-spec/config-paths.html","searchKeys":["configPaths","abstract val configPaths: Collection<Path>","io.github.detekt.tooling.api.spec.ConfigSpec.configPaths"]},{"name":"abstract val configSpec: ConfigSpec","description":"io.github.detekt.tooling.api.spec.ProcessingSpec.configSpec","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-processing-spec/config-spec.html","searchKeys":["configSpec","abstract val configSpec: ConfigSpec","io.github.detekt.tooling.api.spec.ProcessingSpec.configSpec"]},{"name":"abstract val container: Detektion?","description":"io.github.detekt.tooling.api.AnalysisResult.container","location":"detekt-tooling/io.github.detekt.tooling.api/-analysis-result/container.html","searchKeys":["container","abstract val container: Detektion?","io.github.detekt.tooling.api.AnalysisResult.container"]},{"name":"abstract val currentIssues: FindingsIdList","description":"io.github.detekt.tooling.api.Baseline.currentIssues","location":"detekt-tooling/io.github.detekt.tooling.api/-baseline/current-issues.html","searchKeys":["currentIssues","abstract val currentIssues: FindingsIdList","io.github.detekt.tooling.api.Baseline.currentIssues"]},{"name":"abstract val debug: Boolean","description":"io.github.detekt.tooling.api.spec.LoggingSpec.debug","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-logging-spec/debug.html","searchKeys":["debug","abstract val debug: Boolean","io.github.detekt.tooling.api.spec.LoggingSpec.debug"]},{"name":"abstract val disableDefaultRuleSets: Boolean","description":"io.github.detekt.tooling.api.spec.ExtensionsSpec.disableDefaultRuleSets","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-extensions-spec/disable-default-rule-sets.html","searchKeys":["disableDefaultRuleSets","abstract val disableDefaultRuleSets: Boolean","io.github.detekt.tooling.api.spec.ExtensionsSpec.disableDefaultRuleSets"]},{"name":"abstract val disabledExtensions: Set<ExtensionId>","description":"io.github.detekt.tooling.api.spec.ExtensionsSpec.disabledExtensions","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-extensions-spec/disabled-extensions.html","searchKeys":["disabledExtensions","abstract val disabledExtensions: Set<ExtensionId>","io.github.detekt.tooling.api.spec.ExtensionsSpec.disabledExtensions"]},{"name":"abstract val error: DetektError?","description":"io.github.detekt.tooling.api.AnalysisResult.error","location":"detekt-tooling/io.github.detekt.tooling.api/-analysis-result/error.html","searchKeys":["error","abstract val error: DetektError?","io.github.detekt.tooling.api.AnalysisResult.error"]},{"name":"abstract val errorChannel: Appendable","description":"io.github.detekt.tooling.api.spec.LoggingSpec.errorChannel","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-logging-spec/error-channel.html","searchKeys":["errorChannel","abstract val errorChannel: Appendable","io.github.detekt.tooling.api.spec.LoggingSpec.errorChannel"]},{"name":"abstract val excludeCorrectable: Boolean","description":"io.github.detekt.tooling.api.spec.RulesSpec.excludeCorrectable","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-rules-spec/exclude-correctable.html","searchKeys":["excludeCorrectable","abstract val excludeCorrectable: Boolean","io.github.detekt.tooling.api.spec.RulesSpec.excludeCorrectable"]},{"name":"abstract val excludes: Collection<String>","description":"io.github.detekt.tooling.api.spec.ProjectSpec.excludes","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-project-spec/excludes.html","searchKeys":["excludes","abstract val excludes: Collection<String>","io.github.detekt.tooling.api.spec.ProjectSpec.excludes"]},{"name":"abstract val executionSpec: ExecutionSpec","description":"io.github.detekt.tooling.api.spec.ProcessingSpec.executionSpec","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-processing-spec/execution-spec.html","searchKeys":["executionSpec","abstract val executionSpec: ExecutionSpec","io.github.detekt.tooling.api.spec.ProcessingSpec.executionSpec"]},{"name":"abstract val executorService: ExecutorService?","description":"io.github.detekt.tooling.api.spec.ExecutionSpec.executorService","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-execution-spec/executor-service.html","searchKeys":["executorService","abstract val executorService: ExecutorService?","io.github.detekt.tooling.api.spec.ExecutionSpec.executorService"]},{"name":"abstract val extensionsSpec: ExtensionsSpec","description":"io.github.detekt.tooling.api.spec.ProcessingSpec.extensionsSpec","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-processing-spec/extensions-spec.html","searchKeys":["extensionsSpec","abstract val extensionsSpec: ExtensionsSpec","io.github.detekt.tooling.api.spec.ProcessingSpec.extensionsSpec"]},{"name":"abstract val failurePolicy: RulesSpec.FailurePolicy","description":"io.github.detekt.tooling.api.spec.RulesSpec.failurePolicy","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-rules-spec/failure-policy.html","searchKeys":["failurePolicy","abstract val failurePolicy: RulesSpec.FailurePolicy","io.github.detekt.tooling.api.spec.RulesSpec.failurePolicy"]},{"name":"abstract val includes: Collection<String>","description":"io.github.detekt.tooling.api.spec.ProjectSpec.includes","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-project-spec/includes.html","searchKeys":["includes","abstract val includes: Collection<String>","io.github.detekt.tooling.api.spec.ProjectSpec.includes"]},{"name":"abstract val inputPaths: Collection<Path>","description":"io.github.detekt.tooling.api.spec.ProjectSpec.inputPaths","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-project-spec/input-paths.html","searchKeys":["inputPaths","abstract val inputPaths: Collection<Path>","io.github.detekt.tooling.api.spec.ProjectSpec.inputPaths"]},{"name":"abstract val jdkHome: Path?","description":"io.github.detekt.tooling.api.spec.CompilerSpec.jdkHome","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-compiler-spec/jdk-home.html","searchKeys":["jdkHome","abstract val jdkHome: Path?","io.github.detekt.tooling.api.spec.CompilerSpec.jdkHome"]},{"name":"abstract val jvmTarget: String","description":"io.github.detekt.tooling.api.spec.CompilerSpec.jvmTarget","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-compiler-spec/jvm-target.html","searchKeys":["jvmTarget","abstract val jvmTarget: String","io.github.detekt.tooling.api.spec.CompilerSpec.jvmTarget"]},{"name":"abstract val languageVersion: String?","description":"io.github.detekt.tooling.api.spec.CompilerSpec.languageVersion","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-compiler-spec/language-version.html","searchKeys":["languageVersion","abstract val languageVersion: String?","io.github.detekt.tooling.api.spec.CompilerSpec.languageVersion"]},{"name":"abstract val loader: ClassLoader?","description":"io.github.detekt.tooling.api.spec.ExtensionsSpec.Plugins.loader","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-extensions-spec/-plugins/loader.html","searchKeys":["loader","abstract val loader: ClassLoader?","io.github.detekt.tooling.api.spec.ExtensionsSpec.Plugins.loader"]},{"name":"abstract val loggingSpec: LoggingSpec","description":"io.github.detekt.tooling.api.spec.ProcessingSpec.loggingSpec","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-processing-spec/logging-spec.html","searchKeys":["loggingSpec","abstract val loggingSpec: LoggingSpec","io.github.detekt.tooling.api.spec.ProcessingSpec.loggingSpec"]},{"name":"abstract val manuallySuppressedIssues: FindingsIdList","description":"io.github.detekt.tooling.api.Baseline.manuallySuppressedIssues","location":"detekt-tooling/io.github.detekt.tooling.api/-baseline/manually-suppressed-issues.html","searchKeys":["manuallySuppressedIssues","abstract val manuallySuppressedIssues: FindingsIdList","io.github.detekt.tooling.api.Baseline.manuallySuppressedIssues"]},{"name":"abstract val outputChannel: Appendable","description":"io.github.detekt.tooling.api.spec.LoggingSpec.outputChannel","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-logging-spec/output-channel.html","searchKeys":["outputChannel","abstract val outputChannel: Appendable","io.github.detekt.tooling.api.spec.LoggingSpec.outputChannel"]},{"name":"abstract val parallelAnalysis: Boolean","description":"io.github.detekt.tooling.api.spec.ExecutionSpec.parallelAnalysis","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-execution-spec/parallel-analysis.html","searchKeys":["parallelAnalysis","abstract val parallelAnalysis: Boolean","io.github.detekt.tooling.api.spec.ExecutionSpec.parallelAnalysis"]},{"name":"abstract val parallelParsing: Boolean","description":"io.github.detekt.tooling.api.spec.ExecutionSpec.parallelParsing","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-execution-spec/parallel-parsing.html","searchKeys":["parallelParsing","abstract val parallelParsing: Boolean","io.github.detekt.tooling.api.spec.ExecutionSpec.parallelParsing"]},{"name":"abstract val path: Path","description":"io.github.detekt.tooling.api.spec.ReportsSpec.Report.path","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-reports-spec/-report/path.html","searchKeys":["path","abstract val path: Path","io.github.detekt.tooling.api.spec.ReportsSpec.Report.path"]},{"name":"abstract val path: Path?","description":"io.github.detekt.tooling.api.spec.BaselineSpec.path","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-baseline-spec/path.html","searchKeys":["path","abstract val path: Path?","io.github.detekt.tooling.api.spec.BaselineSpec.path"]},{"name":"abstract val paths: Collection<Path>?","description":"io.github.detekt.tooling.api.spec.ExtensionsSpec.Plugins.paths","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-extensions-spec/-plugins/paths.html","searchKeys":["paths","abstract val paths: Collection<Path>?","io.github.detekt.tooling.api.spec.ExtensionsSpec.Plugins.paths"]},{"name":"abstract val plugins: ExtensionsSpec.Plugins?","description":"io.github.detekt.tooling.api.spec.ExtensionsSpec.plugins","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-extensions-spec/plugins.html","searchKeys":["plugins","abstract val plugins: ExtensionsSpec.Plugins?","io.github.detekt.tooling.api.spec.ExtensionsSpec.plugins"]},{"name":"abstract val projectSpec: ProjectSpec","description":"io.github.detekt.tooling.api.spec.ProcessingSpec.projectSpec","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-processing-spec/project-spec.html","searchKeys":["projectSpec","abstract val projectSpec: ProjectSpec","io.github.detekt.tooling.api.spec.ProcessingSpec.projectSpec"]},{"name":"abstract val reports: Collection<ReportsSpec.Report>","description":"io.github.detekt.tooling.api.spec.ReportsSpec.reports","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-reports-spec/reports.html","searchKeys":["reports","abstract val reports: Collection<ReportsSpec.Report>","io.github.detekt.tooling.api.spec.ReportsSpec.reports"]},{"name":"abstract val reportsSpec: ReportsSpec","description":"io.github.detekt.tooling.api.spec.ProcessingSpec.reportsSpec","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-processing-spec/reports-spec.html","searchKeys":["reportsSpec","abstract val reportsSpec: ReportsSpec","io.github.detekt.tooling.api.spec.ProcessingSpec.reportsSpec"]},{"name":"abstract val resources: Collection<URL>","description":"io.github.detekt.tooling.api.spec.ConfigSpec.resources","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-config-spec/resources.html","searchKeys":["resources","abstract val resources: Collection<URL>","io.github.detekt.tooling.api.spec.ConfigSpec.resources"]},{"name":"abstract val rulesSpec: RulesSpec","description":"io.github.detekt.tooling.api.spec.ProcessingSpec.rulesSpec","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-processing-spec/rules-spec.html","searchKeys":["rulesSpec","abstract val rulesSpec: RulesSpec","io.github.detekt.tooling.api.spec.ProcessingSpec.rulesSpec"]},{"name":"abstract val runPolicy: RulesSpec.RunPolicy","description":"io.github.detekt.tooling.api.spec.RulesSpec.runPolicy","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-rules-spec/run-policy.html","searchKeys":["runPolicy","abstract val runPolicy: RulesSpec.RunPolicy","io.github.detekt.tooling.api.spec.RulesSpec.runPolicy"]},{"name":"abstract val shouldCreateDuringAnalysis: Boolean","description":"io.github.detekt.tooling.api.spec.BaselineSpec.shouldCreateDuringAnalysis","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-baseline-spec/should-create-during-analysis.html","searchKeys":["shouldCreateDuringAnalysis","abstract val shouldCreateDuringAnalysis: Boolean","io.github.detekt.tooling.api.spec.BaselineSpec.shouldCreateDuringAnalysis"]},{"name":"abstract val shouldValidateBeforeAnalysis: Boolean?","description":"io.github.detekt.tooling.api.spec.ConfigSpec.shouldValidateBeforeAnalysis","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-config-spec/should-validate-before-analysis.html","searchKeys":["shouldValidateBeforeAnalysis","abstract val shouldValidateBeforeAnalysis: Boolean?","io.github.detekt.tooling.api.spec.ConfigSpec.shouldValidateBeforeAnalysis"]},{"name":"abstract val type: String","description":"io.github.detekt.tooling.api.spec.ReportsSpec.Report.type","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-reports-spec/-report/type.html","searchKeys":["type","abstract val type: String","io.github.detekt.tooling.api.spec.ReportsSpec.Report.type"]},{"name":"abstract val useDefaultConfig: Boolean","description":"io.github.detekt.tooling.api.spec.ConfigSpec.useDefaultConfig","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-config-spec/use-default-config.html","searchKeys":["useDefaultConfig","abstract val useDefaultConfig: Boolean","io.github.detekt.tooling.api.spec.ConfigSpec.useDefaultConfig"]},{"name":"annotation class NotApiButProbablyUsedByUsers","description":"io.github.detekt.tooling.internal.NotApiButProbablyUsedByUsers","location":"detekt-tooling/io.github.detekt.tooling.internal/-not-api-but-probably-used-by-users/index.html","searchKeys":["NotApiButProbablyUsedByUsers","annotation class NotApiButProbablyUsedByUsers","io.github.detekt.tooling.internal.NotApiButProbablyUsedByUsers"]},{"name":"annotation class ProcessingModelDsl","description":"io.github.detekt.tooling.dsl.ProcessingModelDsl","location":"detekt-tooling/io.github.detekt.tooling.dsl/-processing-model-dsl/index.html","searchKeys":["ProcessingModelDsl","annotation class ProcessingModelDsl","io.github.detekt.tooling.dsl.ProcessingModelDsl"]},{"name":"class BaselineSpecBuilder : Builder<BaselineSpec> ","description":"io.github.detekt.tooling.dsl.BaselineSpecBuilder","location":"detekt-tooling/io.github.detekt.tooling.dsl/-baseline-spec-builder/index.html","searchKeys":["BaselineSpecBuilder","class BaselineSpecBuilder : Builder<BaselineSpec> ","io.github.detekt.tooling.dsl.BaselineSpecBuilder"]},{"name":"class CompilerSpecBuilder : Builder<CompilerSpec> ","description":"io.github.detekt.tooling.dsl.CompilerSpecBuilder","location":"detekt-tooling/io.github.detekt.tooling.dsl/-compiler-spec-builder/index.html","searchKeys":["CompilerSpecBuilder","class CompilerSpecBuilder : Builder<CompilerSpec> ","io.github.detekt.tooling.dsl.CompilerSpecBuilder"]},{"name":"class ConfigSpecBuilder : Builder<ConfigSpec> ","description":"io.github.detekt.tooling.dsl.ConfigSpecBuilder","location":"detekt-tooling/io.github.detekt.tooling.dsl/-config-spec-builder/index.html","searchKeys":["ConfigSpecBuilder","class ConfigSpecBuilder : Builder<ConfigSpec> ","io.github.detekt.tooling.dsl.ConfigSpecBuilder"]},{"name":"class DefaultAnalysisResult(val container: Detektion?, val error: DetektError? = null) : AnalysisResult","description":"io.github.detekt.tooling.internal.DefaultAnalysisResult","location":"detekt-tooling/io.github.detekt.tooling.internal/-default-analysis-result/index.html","searchKeys":["DefaultAnalysisResult","class DefaultAnalysisResult(val container: Detektion?, val error: DetektError? = null) : AnalysisResult","io.github.detekt.tooling.internal.DefaultAnalysisResult"]},{"name":"class ExecutionSpecBuilder : Builder<ExecutionSpec> ","description":"io.github.detekt.tooling.dsl.ExecutionSpecBuilder","location":"detekt-tooling/io.github.detekt.tooling.dsl/-execution-spec-builder/index.html","searchKeys":["ExecutionSpecBuilder","class ExecutionSpecBuilder : Builder<ExecutionSpec> ","io.github.detekt.tooling.dsl.ExecutionSpecBuilder"]},{"name":"class ExtensionsSpecBuilder : Builder<ExtensionsSpec> ","description":"io.github.detekt.tooling.dsl.ExtensionsSpecBuilder","location":"detekt-tooling/io.github.detekt.tooling.dsl/-extensions-spec-builder/index.html","searchKeys":["ExtensionsSpecBuilder","class ExtensionsSpecBuilder : Builder<ExtensionsSpec> ","io.github.detekt.tooling.dsl.ExtensionsSpecBuilder"]},{"name":"class InvalidConfig(message: String) : DetektError","description":"io.github.detekt.tooling.api.InvalidConfig","location":"detekt-tooling/io.github.detekt.tooling.api/-invalid-config/index.html","searchKeys":["InvalidConfig","class InvalidConfig(message: String) : DetektError","io.github.detekt.tooling.api.InvalidConfig"]},{"name":"class IssuesFound(message: String) : DetektError","description":"io.github.detekt.tooling.api.IssuesFound","location":"detekt-tooling/io.github.detekt.tooling.api/-issues-found/index.html","searchKeys":["IssuesFound","class IssuesFound(message: String) : DetektError","io.github.detekt.tooling.api.IssuesFound"]},{"name":"class LoggingSpecBuilder : Builder<LoggingSpec> ","description":"io.github.detekt.tooling.dsl.LoggingSpecBuilder","location":"detekt-tooling/io.github.detekt.tooling.dsl/-logging-spec-builder/index.html","searchKeys":["LoggingSpecBuilder","class LoggingSpecBuilder : Builder<LoggingSpec> ","io.github.detekt.tooling.dsl.LoggingSpecBuilder"]},{"name":"class ProcessingSpecBuilder : Builder<ProcessingSpec> ","description":"io.github.detekt.tooling.dsl.ProcessingSpecBuilder","location":"detekt-tooling/io.github.detekt.tooling.dsl/-processing-spec-builder/index.html","searchKeys":["ProcessingSpecBuilder","class ProcessingSpecBuilder : Builder<ProcessingSpec> ","io.github.detekt.tooling.dsl.ProcessingSpecBuilder"]},{"name":"class ProjectSpecBuilder : Builder<ProjectSpec> ","description":"io.github.detekt.tooling.dsl.ProjectSpecBuilder","location":"detekt-tooling/io.github.detekt.tooling.dsl/-project-spec-builder/index.html","searchKeys":["ProjectSpecBuilder","class ProjectSpecBuilder : Builder<ProjectSpec> ","io.github.detekt.tooling.dsl.ProjectSpecBuilder"]},{"name":"class ReportsSpecBuilder : Builder<ReportsSpec> ","description":"io.github.detekt.tooling.dsl.ReportsSpecBuilder","location":"detekt-tooling/io.github.detekt.tooling.dsl/-reports-spec-builder/index.html","searchKeys":["ReportsSpecBuilder","class ReportsSpecBuilder : Builder<ReportsSpec> ","io.github.detekt.tooling.dsl.ReportsSpecBuilder"]},{"name":"class RestrictToSingleRule(val id: Pair<RuleSetId, RuleId>) : RulesSpec.RunPolicy","description":"io.github.detekt.tooling.api.spec.RulesSpec.RunPolicy.RestrictToSingleRule","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-rules-spec/-run-policy/-restrict-to-single-rule/index.html","searchKeys":["RestrictToSingleRule","class RestrictToSingleRule(val id: Pair<RuleSetId, RuleId>) : RulesSpec.RunPolicy","io.github.detekt.tooling.api.spec.RulesSpec.RunPolicy.RestrictToSingleRule"]},{"name":"class RulesSpecBuilder : Builder<RulesSpec> ","description":"io.github.detekt.tooling.dsl.RulesSpecBuilder","location":"detekt-tooling/io.github.detekt.tooling.dsl/-rules-spec-builder/index.html","searchKeys":["RulesSpecBuilder","class RulesSpecBuilder : Builder<RulesSpec> ","io.github.detekt.tooling.dsl.RulesSpecBuilder"]},{"name":"class UnexpectedError(val cause: Throwable) : DetektError","description":"io.github.detekt.tooling.api.UnexpectedError","location":"detekt-tooling/io.github.detekt.tooling.api/-unexpected-error/index.html","searchKeys":["UnexpectedError","class UnexpectedError(val cause: Throwable) : DetektError","io.github.detekt.tooling.api.UnexpectedError"]},{"name":"constructor()","description":"io.github.detekt.tooling.dsl.BaselineSpecBuilder.BaselineSpecBuilder","location":"detekt-tooling/io.github.detekt.tooling.dsl/-baseline-spec-builder/-baseline-spec-builder.html","searchKeys":["BaselineSpecBuilder","constructor()","io.github.detekt.tooling.dsl.BaselineSpecBuilder.BaselineSpecBuilder"]},{"name":"constructor()","description":"io.github.detekt.tooling.dsl.CompilerSpecBuilder.CompilerSpecBuilder","location":"detekt-tooling/io.github.detekt.tooling.dsl/-compiler-spec-builder/-compiler-spec-builder.html","searchKeys":["CompilerSpecBuilder","constructor()","io.github.detekt.tooling.dsl.CompilerSpecBuilder.CompilerSpecBuilder"]},{"name":"constructor()","description":"io.github.detekt.tooling.dsl.ConfigSpecBuilder.ConfigSpecBuilder","location":"detekt-tooling/io.github.detekt.tooling.dsl/-config-spec-builder/-config-spec-builder.html","searchKeys":["ConfigSpecBuilder","constructor()","io.github.detekt.tooling.dsl.ConfigSpecBuilder.ConfigSpecBuilder"]},{"name":"constructor()","description":"io.github.detekt.tooling.dsl.ExecutionSpecBuilder.ExecutionSpecBuilder","location":"detekt-tooling/io.github.detekt.tooling.dsl/-execution-spec-builder/-execution-spec-builder.html","searchKeys":["ExecutionSpecBuilder","constructor()","io.github.detekt.tooling.dsl.ExecutionSpecBuilder.ExecutionSpecBuilder"]},{"name":"constructor()","description":"io.github.detekt.tooling.dsl.ExtensionsSpecBuilder.ExtensionsSpecBuilder","location":"detekt-tooling/io.github.detekt.tooling.dsl/-extensions-spec-builder/-extensions-spec-builder.html","searchKeys":["ExtensionsSpecBuilder","constructor()","io.github.detekt.tooling.dsl.ExtensionsSpecBuilder.ExtensionsSpecBuilder"]},{"name":"constructor()","description":"io.github.detekt.tooling.dsl.LoggingSpecBuilder.LoggingSpecBuilder","location":"detekt-tooling/io.github.detekt.tooling.dsl/-logging-spec-builder/-logging-spec-builder.html","searchKeys":["LoggingSpecBuilder","constructor()","io.github.detekt.tooling.dsl.LoggingSpecBuilder.LoggingSpecBuilder"]},{"name":"constructor()","description":"io.github.detekt.tooling.dsl.ProcessingSpecBuilder.ProcessingSpecBuilder","location":"detekt-tooling/io.github.detekt.tooling.dsl/-processing-spec-builder/-processing-spec-builder.html","searchKeys":["ProcessingSpecBuilder","constructor()","io.github.detekt.tooling.dsl.ProcessingSpecBuilder.ProcessingSpecBuilder"]},{"name":"constructor()","description":"io.github.detekt.tooling.dsl.ProjectSpecBuilder.ProjectSpecBuilder","location":"detekt-tooling/io.github.detekt.tooling.dsl/-project-spec-builder/-project-spec-builder.html","searchKeys":["ProjectSpecBuilder","constructor()","io.github.detekt.tooling.dsl.ProjectSpecBuilder.ProjectSpecBuilder"]},{"name":"constructor()","description":"io.github.detekt.tooling.dsl.ReportsSpecBuilder.ReportsSpecBuilder","location":"detekt-tooling/io.github.detekt.tooling.dsl/-reports-spec-builder/-reports-spec-builder.html","searchKeys":["ReportsSpecBuilder","constructor()","io.github.detekt.tooling.dsl.ReportsSpecBuilder.ReportsSpecBuilder"]},{"name":"constructor()","description":"io.github.detekt.tooling.dsl.RulesSpecBuilder.RulesSpecBuilder","location":"detekt-tooling/io.github.detekt.tooling.dsl/-rules-spec-builder/-rules-spec-builder.html","searchKeys":["RulesSpecBuilder","constructor()","io.github.detekt.tooling.dsl.RulesSpecBuilder.RulesSpecBuilder"]},{"name":"constructor(cause: Throwable)","description":"io.github.detekt.tooling.api.UnexpectedError.UnexpectedError","location":"detekt-tooling/io.github.detekt.tooling.api/-unexpected-error/-unexpected-error.html","searchKeys":["UnexpectedError","constructor(cause: Throwable)","io.github.detekt.tooling.api.UnexpectedError.UnexpectedError"]},{"name":"constructor(container: Detektion?, error: DetektError? = null)","description":"io.github.detekt.tooling.internal.DefaultAnalysisResult.DefaultAnalysisResult","location":"detekt-tooling/io.github.detekt.tooling.internal/-default-analysis-result/-default-analysis-result.html","searchKeys":["DefaultAnalysisResult","constructor(container: Detektion?, error: DetektError? = null)","io.github.detekt.tooling.internal.DefaultAnalysisResult.DefaultAnalysisResult"]},{"name":"constructor(id: Pair<RuleSetId, RuleId>)","description":"io.github.detekt.tooling.api.spec.RulesSpec.RunPolicy.RestrictToSingleRule.RestrictToSingleRule","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-rules-spec/-run-policy/-restrict-to-single-rule/-restrict-to-single-rule.html","searchKeys":["RestrictToSingleRule","constructor(id: Pair<RuleSetId, RuleId>)","io.github.detekt.tooling.api.spec.RulesSpec.RunPolicy.RestrictToSingleRule.RestrictToSingleRule"]},{"name":"constructor(message: String)","description":"io.github.detekt.tooling.api.InvalidConfig.InvalidConfig","location":"detekt-tooling/io.github.detekt.tooling.api/-invalid-config/-invalid-config.html","searchKeys":["InvalidConfig","constructor(message: String)","io.github.detekt.tooling.api.InvalidConfig.InvalidConfig"]},{"name":"constructor(message: String)","description":"io.github.detekt.tooling.api.IssuesFound.IssuesFound","location":"detekt-tooling/io.github.detekt.tooling.api/-issues-found/-issues-found.html","searchKeys":["IssuesFound","constructor(message: String)","io.github.detekt.tooling.api.IssuesFound.IssuesFound"]},{"name":"data object FailOnError : RulesSpec.FailurePolicy","description":"io.github.detekt.tooling.api.spec.RulesSpec.FailurePolicy.FailOnError","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-rules-spec/-failure-policy/-fail-on-error/index.html","searchKeys":["FailOnError","data object FailOnError : RulesSpec.FailurePolicy","io.github.detekt.tooling.api.spec.RulesSpec.FailurePolicy.FailOnError"]},{"name":"data object NoRestrictions : RulesSpec.RunPolicy","description":"io.github.detekt.tooling.api.spec.RulesSpec.RunPolicy.NoRestrictions","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-rules-spec/-run-policy/-no-restrictions/index.html","searchKeys":["NoRestrictions","data object NoRestrictions : RulesSpec.RunPolicy","io.github.detekt.tooling.api.spec.RulesSpec.RunPolicy.NoRestrictions"]},{"name":"fun AnalysisResult.exitCode(): Int","description":"io.github.detekt.tooling.api.exitCode","location":"detekt-tooling/io.github.detekt.tooling.api/exit-code.html","searchKeys":["exitCode","fun AnalysisResult.exitCode(): Int","io.github.detekt.tooling.api.exitCode"]},{"name":"fun baseline(init: BaselineSpecBuilder.() -> Unit)","description":"io.github.detekt.tooling.dsl.ProcessingSpecBuilder.baseline","location":"detekt-tooling/io.github.detekt.tooling.dsl/-processing-spec-builder/baseline.html","searchKeys":["baseline","fun baseline(init: BaselineSpecBuilder.() -> Unit)","io.github.detekt.tooling.dsl.ProcessingSpecBuilder.baseline"]},{"name":"fun compiler(init: CompilerSpecBuilder.() -> Unit)","description":"io.github.detekt.tooling.dsl.ProcessingSpecBuilder.compiler","location":"detekt-tooling/io.github.detekt.tooling.dsl/-processing-spec-builder/compiler.html","searchKeys":["compiler","fun compiler(init: CompilerSpecBuilder.() -> Unit)","io.github.detekt.tooling.dsl.ProcessingSpecBuilder.compiler"]},{"name":"fun config(init: ConfigSpecBuilder.() -> Unit)","description":"io.github.detekt.tooling.dsl.ProcessingSpecBuilder.config","location":"detekt-tooling/io.github.detekt.tooling.dsl/-processing-spec-builder/config.html","searchKeys":["config","fun config(init: ConfigSpecBuilder.() -> Unit)","io.github.detekt.tooling.dsl.ProcessingSpecBuilder.config"]},{"name":"fun disableExtension(id: ExtensionId)","description":"io.github.detekt.tooling.dsl.ExtensionsSpecBuilder.disableExtension","location":"detekt-tooling/io.github.detekt.tooling.dsl/-extensions-spec-builder/disable-extension.html","searchKeys":["disableExtension","fun disableExtension(id: ExtensionId)","io.github.detekt.tooling.dsl.ExtensionsSpecBuilder.disableExtension"]},{"name":"fun execution(init: ExecutionSpecBuilder.() -> Unit)","description":"io.github.detekt.tooling.dsl.ProcessingSpecBuilder.execution","location":"detekt-tooling/io.github.detekt.tooling.dsl/-processing-spec-builder/execution.html","searchKeys":["execution","fun execution(init: ExecutionSpecBuilder.() -> Unit)","io.github.detekt.tooling.dsl.ProcessingSpecBuilder.execution"]},{"name":"fun extensions(init: ExtensionsSpecBuilder.() -> Unit)","description":"io.github.detekt.tooling.dsl.ProcessingSpecBuilder.extensions","location":"detekt-tooling/io.github.detekt.tooling.dsl/-processing-spec-builder/extensions.html","searchKeys":["extensions","fun extensions(init: ExtensionsSpecBuilder.() -> Unit)","io.github.detekt.tooling.dsl.ProcessingSpecBuilder.extensions"]},{"name":"fun fromClassloader(classLoader: () -> ClassLoader)","description":"io.github.detekt.tooling.dsl.ExtensionsSpecBuilder.fromClassloader","location":"detekt-tooling/io.github.detekt.tooling.dsl/-extensions-spec-builder/from-classloader.html","searchKeys":["fromClassloader","fun fromClassloader(classLoader: () -> ClassLoader)","io.github.detekt.tooling.dsl.ExtensionsSpecBuilder.fromClassloader"]},{"name":"fun fromFunctionSignature(methodSignature: String): FunctionMatcher","description":"io.github.detekt.tooling.api.FunctionMatcher.Companion.fromFunctionSignature","location":"detekt-tooling/io.github.detekt.tooling.api/-function-matcher/-companion/from-function-signature.html","searchKeys":["fromFunctionSignature","fun fromFunctionSignature(methodSignature: String): FunctionMatcher","io.github.detekt.tooling.api.FunctionMatcher.Companion.fromFunctionSignature"]},{"name":"fun fromPaths(paths: () -> Collection<Path>)","description":"io.github.detekt.tooling.dsl.ExtensionsSpecBuilder.fromPaths","location":"detekt-tooling/io.github.detekt.tooling.dsl/-extensions-spec-builder/from-paths.html","searchKeys":["fromPaths","fun fromPaths(paths: () -> Collection<Path>)","io.github.detekt.tooling.dsl.ExtensionsSpecBuilder.fromPaths"]},{"name":"fun load(classLoader: ClassLoader = BaselineProvider::class.java.classLoader): BaselineProvider","description":"io.github.detekt.tooling.api.BaselineProvider.Companion.load","location":"detekt-tooling/io.github.detekt.tooling.api/-baseline-provider/-companion/load.html","searchKeys":["load","fun load(classLoader: ClassLoader = BaselineProvider::class.java.classLoader): BaselineProvider","io.github.detekt.tooling.api.BaselineProvider.Companion.load"]},{"name":"fun load(classLoader: ClassLoader = DetektCli::class.java.classLoader): DetektCli","description":"io.github.detekt.tooling.api.DetektCli.Companion.load","location":"detekt-tooling/io.github.detekt.tooling.api/-detekt-cli/-companion/load.html","searchKeys":["load","fun load(classLoader: ClassLoader = DetektCli::class.java.classLoader): DetektCli","io.github.detekt.tooling.api.DetektCli.Companion.load"]},{"name":"fun load(classLoader: ClassLoader = DetektProvider::class.java.classLoader): DetektProvider","description":"io.github.detekt.tooling.api.DetektProvider.Companion.load","location":"detekt-tooling/io.github.detekt.tooling.api/-detekt-provider/-companion/load.html","searchKeys":["load","fun load(classLoader: ClassLoader = DetektProvider::class.java.classLoader): DetektProvider","io.github.detekt.tooling.api.DetektProvider.Companion.load"]},{"name":"fun load(classLoader: ClassLoader = VersionProvider::class.java.classLoader): VersionProvider","description":"io.github.detekt.tooling.api.VersionProvider.Companion.load","location":"detekt-tooling/io.github.detekt.tooling.api/-version-provider/-companion/load.html","searchKeys":["load","fun load(classLoader: ClassLoader = VersionProvider::class.java.classLoader): VersionProvider","io.github.detekt.tooling.api.VersionProvider.Companion.load"]},{"name":"fun load(extensionsSpec: ExtensionsSpec, classLoader: ClassLoader = DefaultConfigurationProvider::class.java.classLoader): DefaultConfigurationProvider","description":"io.github.detekt.tooling.api.DefaultConfigurationProvider.Companion.load","location":"detekt-tooling/io.github.detekt.tooling.api/-default-configuration-provider/-companion/load.html","searchKeys":["load","fun load(extensionsSpec: ExtensionsSpec, classLoader: ClassLoader = DefaultConfigurationProvider::class.java.classLoader): DefaultConfigurationProvider","io.github.detekt.tooling.api.DefaultConfigurationProvider.Companion.load"]},{"name":"fun logging(init: LoggingSpecBuilder.() -> Unit)","description":"io.github.detekt.tooling.dsl.ProcessingSpecBuilder.logging","location":"detekt-tooling/io.github.detekt.tooling.dsl/-processing-spec-builder/logging.html","searchKeys":["logging","fun logging(init: LoggingSpecBuilder.() -> Unit)","io.github.detekt.tooling.dsl.ProcessingSpecBuilder.logging"]},{"name":"fun project(init: ProjectSpecBuilder.() -> Unit)","description":"io.github.detekt.tooling.dsl.ProcessingSpecBuilder.project","location":"detekt-tooling/io.github.detekt.tooling.dsl/-processing-spec-builder/project.html","searchKeys":["project","fun project(init: ProjectSpecBuilder.() -> Unit)","io.github.detekt.tooling.dsl.ProcessingSpecBuilder.project"]},{"name":"fun report(init: () -> Pair<String, Path>)","description":"io.github.detekt.tooling.dsl.ReportsSpecBuilder.report","location":"detekt-tooling/io.github.detekt.tooling.dsl/-reports-spec-builder/report.html","searchKeys":["report","fun report(init: () -> Pair<String, Path>)","io.github.detekt.tooling.dsl.ReportsSpecBuilder.report"]},{"name":"fun reports(init: ReportsSpecBuilder.() -> Unit)","description":"io.github.detekt.tooling.dsl.ProcessingSpecBuilder.reports","location":"detekt-tooling/io.github.detekt.tooling.dsl/-processing-spec-builder/reports.html","searchKeys":["reports","fun reports(init: ReportsSpecBuilder.() -> Unit)","io.github.detekt.tooling.dsl.ProcessingSpecBuilder.reports"]},{"name":"fun rules(init: RulesSpecBuilder.() -> Unit)","description":"io.github.detekt.tooling.dsl.ProcessingSpecBuilder.rules","location":"detekt-tooling/io.github.detekt.tooling.dsl/-processing-spec-builder/rules.html","searchKeys":["rules","fun rules(init: RulesSpecBuilder.() -> Unit)","io.github.detekt.tooling.dsl.ProcessingSpecBuilder.rules"]},{"name":"interface AnalysisResult","description":"io.github.detekt.tooling.api.AnalysisResult","location":"detekt-tooling/io.github.detekt.tooling.api/-analysis-result/index.html","searchKeys":["AnalysisResult","interface AnalysisResult","io.github.detekt.tooling.api.AnalysisResult"]},{"name":"interface Baseline","description":"io.github.detekt.tooling.api.Baseline","location":"detekt-tooling/io.github.detekt.tooling.api/-baseline/index.html","searchKeys":["Baseline","interface Baseline","io.github.detekt.tooling.api.Baseline"]},{"name":"interface BaselineProvider","description":"io.github.detekt.tooling.api.BaselineProvider","location":"detekt-tooling/io.github.detekt.tooling.api/-baseline-provider/index.html","searchKeys":["BaselineProvider","interface BaselineProvider","io.github.detekt.tooling.api.BaselineProvider"]},{"name":"interface BaselineSpec","description":"io.github.detekt.tooling.api.spec.BaselineSpec","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-baseline-spec/index.html","searchKeys":["BaselineSpec","interface BaselineSpec","io.github.detekt.tooling.api.spec.BaselineSpec"]},{"name":"interface Builder<T>","description":"io.github.detekt.tooling.dsl.Builder","location":"detekt-tooling/io.github.detekt.tooling.dsl/-builder/index.html","searchKeys":["Builder","interface Builder<T>","io.github.detekt.tooling.dsl.Builder"]},{"name":"interface CompilerSpec","description":"io.github.detekt.tooling.api.spec.CompilerSpec","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-compiler-spec/index.html","searchKeys":["CompilerSpec","interface CompilerSpec","io.github.detekt.tooling.api.spec.CompilerSpec"]},{"name":"interface ConfigSpec","description":"io.github.detekt.tooling.api.spec.ConfigSpec","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-config-spec/index.html","searchKeys":["ConfigSpec","interface ConfigSpec","io.github.detekt.tooling.api.spec.ConfigSpec"]},{"name":"interface DefaultConfigurationProvider","description":"io.github.detekt.tooling.api.DefaultConfigurationProvider","location":"detekt-tooling/io.github.detekt.tooling.api/-default-configuration-provider/index.html","searchKeys":["DefaultConfigurationProvider","interface DefaultConfigurationProvider","io.github.detekt.tooling.api.DefaultConfigurationProvider"]},{"name":"interface Detekt","description":"io.github.detekt.tooling.api.Detekt","location":"detekt-tooling/io.github.detekt.tooling.api/-detekt/index.html","searchKeys":["Detekt","interface Detekt","io.github.detekt.tooling.api.Detekt"]},{"name":"interface DetektCli","description":"io.github.detekt.tooling.api.DetektCli","location":"detekt-tooling/io.github.detekt.tooling.api/-detekt-cli/index.html","searchKeys":["DetektCli","interface DetektCli","io.github.detekt.tooling.api.DetektCli"]},{"name":"interface DetektProvider","description":"io.github.detekt.tooling.api.DetektProvider","location":"detekt-tooling/io.github.detekt.tooling.api/-detekt-provider/index.html","searchKeys":["DetektProvider","interface DetektProvider","io.github.detekt.tooling.api.DetektProvider"]},{"name":"interface ExecutionSpec","description":"io.github.detekt.tooling.api.spec.ExecutionSpec","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-execution-spec/index.html","searchKeys":["ExecutionSpec","interface ExecutionSpec","io.github.detekt.tooling.api.spec.ExecutionSpec"]},{"name":"interface ExtensionsSpec","description":"io.github.detekt.tooling.api.spec.ExtensionsSpec","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-extensions-spec/index.html","searchKeys":["ExtensionsSpec","interface ExtensionsSpec","io.github.detekt.tooling.api.spec.ExtensionsSpec"]},{"name":"interface LoggingSpec","description":"io.github.detekt.tooling.api.spec.LoggingSpec","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-logging-spec/index.html","searchKeys":["LoggingSpec","interface LoggingSpec","io.github.detekt.tooling.api.spec.LoggingSpec"]},{"name":"interface Plugins","description":"io.github.detekt.tooling.api.spec.ExtensionsSpec.Plugins","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-extensions-spec/-plugins/index.html","searchKeys":["Plugins","interface Plugins","io.github.detekt.tooling.api.spec.ExtensionsSpec.Plugins"]},{"name":"interface ProcessingSpec","description":"io.github.detekt.tooling.api.spec.ProcessingSpec","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-processing-spec/index.html","searchKeys":["ProcessingSpec","interface ProcessingSpec","io.github.detekt.tooling.api.spec.ProcessingSpec"]},{"name":"interface ProjectSpec","description":"io.github.detekt.tooling.api.spec.ProjectSpec","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-project-spec/index.html","searchKeys":["ProjectSpec","interface ProjectSpec","io.github.detekt.tooling.api.spec.ProjectSpec"]},{"name":"interface Report","description":"io.github.detekt.tooling.api.spec.ReportsSpec.Report","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-reports-spec/-report/index.html","searchKeys":["Report","interface Report","io.github.detekt.tooling.api.spec.ReportsSpec.Report"]},{"name":"interface ReportsSpec","description":"io.github.detekt.tooling.api.spec.ReportsSpec","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-reports-spec/index.html","searchKeys":["ReportsSpec","interface ReportsSpec","io.github.detekt.tooling.api.spec.ReportsSpec"]},{"name":"interface RulesSpec","description":"io.github.detekt.tooling.api.spec.RulesSpec","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-rules-spec/index.html","searchKeys":["RulesSpec","interface RulesSpec","io.github.detekt.tooling.api.spec.RulesSpec"]},{"name":"interface VersionProvider","description":"io.github.detekt.tooling.api.VersionProvider","location":"detekt-tooling/io.github.detekt.tooling.api/-version-provider/index.html","searchKeys":["VersionProvider","interface VersionProvider","io.github.detekt.tooling.api.VersionProvider"]},{"name":"object Companion","description":"io.github.detekt.tooling.api.BaselineProvider.Companion","location":"detekt-tooling/io.github.detekt.tooling.api/-baseline-provider/-companion/index.html","searchKeys":["Companion","object Companion","io.github.detekt.tooling.api.BaselineProvider.Companion"]},{"name":"object Companion","description":"io.github.detekt.tooling.api.DefaultConfigurationProvider.Companion","location":"detekt-tooling/io.github.detekt.tooling.api/-default-configuration-provider/-companion/index.html","searchKeys":["Companion","object Companion","io.github.detekt.tooling.api.DefaultConfigurationProvider.Companion"]},{"name":"object Companion","description":"io.github.detekt.tooling.api.DetektCli.Companion","location":"detekt-tooling/io.github.detekt.tooling.api/-detekt-cli/-companion/index.html","searchKeys":["Companion","object Companion","io.github.detekt.tooling.api.DetektCli.Companion"]},{"name":"object Companion","description":"io.github.detekt.tooling.api.DetektProvider.Companion","location":"detekt-tooling/io.github.detekt.tooling.api/-detekt-provider/-companion/index.html","searchKeys":["Companion","object Companion","io.github.detekt.tooling.api.DetektProvider.Companion"]},{"name":"object Companion","description":"io.github.detekt.tooling.api.FunctionMatcher.Companion","location":"detekt-tooling/io.github.detekt.tooling.api/-function-matcher/-companion/index.html","searchKeys":["Companion","object Companion","io.github.detekt.tooling.api.FunctionMatcher.Companion"]},{"name":"object Companion","description":"io.github.detekt.tooling.api.VersionProvider.Companion","location":"detekt-tooling/io.github.detekt.tooling.api/-version-provider/-companion/index.html","searchKeys":["Companion","object Companion","io.github.detekt.tooling.api.VersionProvider.Companion"]},{"name":"object Companion","description":"io.github.detekt.tooling.api.spec.ProcessingSpec.Companion","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-processing-spec/-companion/index.html","searchKeys":["Companion","object Companion","io.github.detekt.tooling.api.spec.ProcessingSpec.Companion"]},{"name":"object EmptyContainer : Detektion","description":"io.github.detekt.tooling.internal.EmptyContainer","location":"detekt-tooling/io.github.detekt.tooling.internal/-empty-container/index.html","searchKeys":["EmptyContainer","object EmptyContainer : Detektion","io.github.detekt.tooling.internal.EmptyContainer"]},{"name":"open override fun <V> getUserData(key: Key<V>): V?","description":"io.github.detekt.tooling.internal.EmptyContainer.getUserData","location":"detekt-tooling/io.github.detekt.tooling.internal/-empty-container/get-user-data.html","searchKeys":["getUserData","open override fun <V> getUserData(key: Key<V>): V?","io.github.detekt.tooling.internal.EmptyContainer.getUserData"]},{"name":"open override fun <V> putUserData(key: Key<V>, value: V?): Nothing","description":"io.github.detekt.tooling.internal.EmptyContainer.putUserData","location":"detekt-tooling/io.github.detekt.tooling.internal/-empty-container/put-user-data.html","searchKeys":["putUserData","open override fun <V> putUserData(key: Key<V>, value: V?): Nothing","io.github.detekt.tooling.internal.EmptyContainer.putUserData"]},{"name":"open override fun add(notification: Notification): Nothing","description":"io.github.detekt.tooling.internal.EmptyContainer.add","location":"detekt-tooling/io.github.detekt.tooling.internal/-empty-container/add.html","searchKeys":["add","open override fun add(notification: Notification): Nothing","io.github.detekt.tooling.internal.EmptyContainer.add"]},{"name":"open override fun add(projectMetric: ProjectMetric): Nothing","description":"io.github.detekt.tooling.internal.EmptyContainer.add","location":"detekt-tooling/io.github.detekt.tooling.internal/-empty-container/add.html","searchKeys":["add","open override fun add(projectMetric: ProjectMetric): Nothing","io.github.detekt.tooling.internal.EmptyContainer.add"]},{"name":"open override fun build(): BaselineSpec","description":"io.github.detekt.tooling.dsl.BaselineSpecBuilder.build","location":"detekt-tooling/io.github.detekt.tooling.dsl/-baseline-spec-builder/build.html","searchKeys":["build","open override fun build(): BaselineSpec","io.github.detekt.tooling.dsl.BaselineSpecBuilder.build"]},{"name":"open override fun build(): CompilerSpec","description":"io.github.detekt.tooling.dsl.CompilerSpecBuilder.build","location":"detekt-tooling/io.github.detekt.tooling.dsl/-compiler-spec-builder/build.html","searchKeys":["build","open override fun build(): CompilerSpec","io.github.detekt.tooling.dsl.CompilerSpecBuilder.build"]},{"name":"open override fun build(): ConfigSpec","description":"io.github.detekt.tooling.dsl.ConfigSpecBuilder.build","location":"detekt-tooling/io.github.detekt.tooling.dsl/-config-spec-builder/build.html","searchKeys":["build","open override fun build(): ConfigSpec","io.github.detekt.tooling.dsl.ConfigSpecBuilder.build"]},{"name":"open override fun build(): ExecutionSpec","description":"io.github.detekt.tooling.dsl.ExecutionSpecBuilder.build","location":"detekt-tooling/io.github.detekt.tooling.dsl/-execution-spec-builder/build.html","searchKeys":["build","open override fun build(): ExecutionSpec","io.github.detekt.tooling.dsl.ExecutionSpecBuilder.build"]},{"name":"open override fun build(): ExtensionsSpec","description":"io.github.detekt.tooling.dsl.ExtensionsSpecBuilder.build","location":"detekt-tooling/io.github.detekt.tooling.dsl/-extensions-spec-builder/build.html","searchKeys":["build","open override fun build(): ExtensionsSpec","io.github.detekt.tooling.dsl.ExtensionsSpecBuilder.build"]},{"name":"open override fun build(): LoggingSpec","description":"io.github.detekt.tooling.dsl.LoggingSpecBuilder.build","location":"detekt-tooling/io.github.detekt.tooling.dsl/-logging-spec-builder/build.html","searchKeys":["build","open override fun build(): LoggingSpec","io.github.detekt.tooling.dsl.LoggingSpecBuilder.build"]},{"name":"open override fun build(): ProcessingSpec","description":"io.github.detekt.tooling.dsl.ProcessingSpecBuilder.build","location":"detekt-tooling/io.github.detekt.tooling.dsl/-processing-spec-builder/build.html","searchKeys":["build","open override fun build(): ProcessingSpec","io.github.detekt.tooling.dsl.ProcessingSpecBuilder.build"]},{"name":"open override fun build(): ProjectSpec","description":"io.github.detekt.tooling.dsl.ProjectSpecBuilder.build","location":"detekt-tooling/io.github.detekt.tooling.dsl/-project-spec-builder/build.html","searchKeys":["build","open override fun build(): ProjectSpec","io.github.detekt.tooling.dsl.ProjectSpecBuilder.build"]},{"name":"open override fun build(): ReportsSpec","description":"io.github.detekt.tooling.dsl.ReportsSpecBuilder.build","location":"detekt-tooling/io.github.detekt.tooling.dsl/-reports-spec-builder/build.html","searchKeys":["build","open override fun build(): ReportsSpec","io.github.detekt.tooling.dsl.ReportsSpecBuilder.build"]},{"name":"open override fun build(): RulesSpec","description":"io.github.detekt.tooling.dsl.RulesSpecBuilder.build","location":"detekt-tooling/io.github.detekt.tooling.dsl/-rules-spec-builder/build.html","searchKeys":["build","open override fun build(): RulesSpec","io.github.detekt.tooling.dsl.RulesSpecBuilder.build"]},{"name":"open override val cause: Throwable","description":"io.github.detekt.tooling.api.UnexpectedError.cause","location":"detekt-tooling/io.github.detekt.tooling.api/-unexpected-error/cause.html","searchKeys":["cause","open override val cause: Throwable","io.github.detekt.tooling.api.UnexpectedError.cause"]},{"name":"open override val container: Detektion?","description":"io.github.detekt.tooling.internal.DefaultAnalysisResult.container","location":"detekt-tooling/io.github.detekt.tooling.internal/-default-analysis-result/container.html","searchKeys":["container","open override val container: Detektion?","io.github.detekt.tooling.internal.DefaultAnalysisResult.container"]},{"name":"open override val error: DetektError? = null","description":"io.github.detekt.tooling.internal.DefaultAnalysisResult.error","location":"detekt-tooling/io.github.detekt.tooling.internal/-default-analysis-result/error.html","searchKeys":["error","open override val error: DetektError? = null","io.github.detekt.tooling.internal.DefaultAnalysisResult.error"]},{"name":"open override val findings: Map<RuleSetId, List<Finding>>","description":"io.github.detekt.tooling.internal.EmptyContainer.findings","location":"detekt-tooling/io.github.detekt.tooling.internal/-empty-container/findings.html","searchKeys":["findings","open override val findings: Map<RuleSetId, List<Finding>>","io.github.detekt.tooling.internal.EmptyContainer.findings"]},{"name":"open override val metrics: Collection<ProjectMetric>","description":"io.github.detekt.tooling.internal.EmptyContainer.metrics","location":"detekt-tooling/io.github.detekt.tooling.internal/-empty-container/metrics.html","searchKeys":["metrics","open override val metrics: Collection<ProjectMetric>","io.github.detekt.tooling.internal.EmptyContainer.metrics"]},{"name":"open override val notifications: Collection<Notification>","description":"io.github.detekt.tooling.internal.EmptyContainer.notifications","location":"detekt-tooling/io.github.detekt.tooling.internal/-empty-container/notifications.html","searchKeys":["notifications","open override val notifications: Collection<Notification>","io.github.detekt.tooling.internal.EmptyContainer.notifications"]},{"name":"open val priority: Int","description":"io.github.detekt.tooling.api.DetektProvider.priority","location":"detekt-tooling/io.github.detekt.tooling.api/-detekt-provider/priority.html","searchKeys":["priority","open val priority: Int","io.github.detekt.tooling.api.DetektProvider.priority"]},{"name":"operator fun invoke(init: ProcessingSpecBuilder.() -> Unit): ProcessingSpec","description":"io.github.detekt.tooling.api.spec.ProcessingSpec.Companion.invoke","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-processing-spec/-companion/invoke.html","searchKeys":["invoke","operator fun invoke(init: ProcessingSpecBuilder.() -> Unit): ProcessingSpec","io.github.detekt.tooling.api.spec.ProcessingSpec.Companion.invoke"]},{"name":"sealed class DetektError : RuntimeException","description":"io.github.detekt.tooling.api.DetektError","location":"detekt-tooling/io.github.detekt.tooling.api/-detekt-error/index.html","searchKeys":["DetektError","sealed class DetektError : RuntimeException","io.github.detekt.tooling.api.DetektError"]},{"name":"sealed class FailurePolicy","description":"io.github.detekt.tooling.api.spec.RulesSpec.FailurePolicy","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-rules-spec/-failure-policy/index.html","searchKeys":["FailurePolicy","sealed class FailurePolicy","io.github.detekt.tooling.api.spec.RulesSpec.FailurePolicy"]},{"name":"sealed class FunctionMatcher","description":"io.github.detekt.tooling.api.FunctionMatcher","location":"detekt-tooling/io.github.detekt.tooling.api/-function-matcher/index.html","searchKeys":["FunctionMatcher","sealed class FunctionMatcher","io.github.detekt.tooling.api.FunctionMatcher"]},{"name":"sealed class RunPolicy","description":"io.github.detekt.tooling.api.spec.RulesSpec.RunPolicy","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-rules-spec/-run-policy/index.html","searchKeys":["RunPolicy","sealed class RunPolicy","io.github.detekt.tooling.api.spec.RulesSpec.RunPolicy"]},{"name":"typealias ExtensionId = String","description":"io.github.detekt.tooling.api.spec.ExtensionId","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-extension-id/index.html","searchKeys":["ExtensionId","typealias ExtensionId = String","io.github.detekt.tooling.api.spec.ExtensionId"]},{"name":"typealias FindingId = String","description":"io.github.detekt.tooling.api.FindingId","location":"detekt-tooling/io.github.detekt.tooling.api/-finding-id/index.html","searchKeys":["FindingId","typealias FindingId = String","io.github.detekt.tooling.api.FindingId"]},{"name":"typealias FindingsIdList = Set<String>","description":"io.github.detekt.tooling.api.FindingsIdList","location":"detekt-tooling/io.github.detekt.tooling.api/-findings-id-list/index.html","searchKeys":["FindingsIdList","typealias FindingsIdList = Set<String>","io.github.detekt.tooling.api.FindingsIdList"]},{"name":"val id: Pair<RuleSetId, RuleId>","description":"io.github.detekt.tooling.api.spec.RulesSpec.RunPolicy.RestrictToSingleRule.id","location":"detekt-tooling/io.github.detekt.tooling.api.spec/-rules-spec/-run-policy/-restrict-to-single-rule/id.html","searchKeys":["id","val id: Pair<RuleSetId, RuleId>","io.github.detekt.tooling.api.spec.RulesSpec.RunPolicy.RestrictToSingleRule.id"]},{"name":"var activateAllRules: Boolean","description":"io.github.detekt.tooling.dsl.RulesSpecBuilder.activateAllRules","location":"detekt-tooling/io.github.detekt.tooling.dsl/-rules-spec-builder/activate-all-rules.html","searchKeys":["activateAllRules","var activateAllRules: Boolean","io.github.detekt.tooling.dsl.RulesSpecBuilder.activateAllRules"]},{"name":"var autoCorrect: Boolean","description":"io.github.detekt.tooling.dsl.RulesSpecBuilder.autoCorrect","location":"detekt-tooling/io.github.detekt.tooling.dsl/-rules-spec-builder/auto-correct.html","searchKeys":["autoCorrect","var autoCorrect: Boolean","io.github.detekt.tooling.dsl.RulesSpecBuilder.autoCorrect"]},{"name":"var basePath: Path","description":"io.github.detekt.tooling.dsl.ProjectSpecBuilder.basePath","location":"detekt-tooling/io.github.detekt.tooling.dsl/-project-spec-builder/base-path.html","searchKeys":["basePath","var basePath: Path","io.github.detekt.tooling.dsl.ProjectSpecBuilder.basePath"]},{"name":"var classpath: String?","description":"io.github.detekt.tooling.dsl.CompilerSpecBuilder.classpath","location":"detekt-tooling/io.github.detekt.tooling.dsl/-compiler-spec-builder/classpath.html","searchKeys":["classpath","var classpath: String?","io.github.detekt.tooling.dsl.CompilerSpecBuilder.classpath"]},{"name":"var configPaths: Collection<Path>","description":"io.github.detekt.tooling.dsl.ConfigSpecBuilder.configPaths","location":"detekt-tooling/io.github.detekt.tooling.dsl/-config-spec-builder/config-paths.html","searchKeys":["configPaths","var configPaths: Collection<Path>","io.github.detekt.tooling.dsl.ConfigSpecBuilder.configPaths"]},{"name":"var debug: Boolean","description":"io.github.detekt.tooling.dsl.LoggingSpecBuilder.debug","location":"detekt-tooling/io.github.detekt.tooling.dsl/-logging-spec-builder/debug.html","searchKeys":["debug","var debug: Boolean","io.github.detekt.tooling.dsl.LoggingSpecBuilder.debug"]},{"name":"var disableDefaultRuleSets: Boolean","description":"io.github.detekt.tooling.dsl.ExtensionsSpecBuilder.disableDefaultRuleSets","location":"detekt-tooling/io.github.detekt.tooling.dsl/-extensions-spec-builder/disable-default-rule-sets.html","searchKeys":["disableDefaultRuleSets","var disableDefaultRuleSets: Boolean","io.github.detekt.tooling.dsl.ExtensionsSpecBuilder.disableDefaultRuleSets"]},{"name":"var errorChannel: Appendable","description":"io.github.detekt.tooling.dsl.LoggingSpecBuilder.errorChannel","location":"detekt-tooling/io.github.detekt.tooling.dsl/-logging-spec-builder/error-channel.html","searchKeys":["errorChannel","var errorChannel: Appendable","io.github.detekt.tooling.dsl.LoggingSpecBuilder.errorChannel"]},{"name":"var excludeCorrectable: Boolean","description":"io.github.detekt.tooling.dsl.RulesSpecBuilder.excludeCorrectable","location":"detekt-tooling/io.github.detekt.tooling.dsl/-rules-spec-builder/exclude-correctable.html","searchKeys":["excludeCorrectable","var excludeCorrectable: Boolean","io.github.detekt.tooling.dsl.RulesSpecBuilder.excludeCorrectable"]},{"name":"var excludes: Collection<String>","description":"io.github.detekt.tooling.dsl.ProjectSpecBuilder.excludes","location":"detekt-tooling/io.github.detekt.tooling.dsl/-project-spec-builder/excludes.html","searchKeys":["excludes","var excludes: Collection<String>","io.github.detekt.tooling.dsl.ProjectSpecBuilder.excludes"]},{"name":"var executorService: ExecutorService?","description":"io.github.detekt.tooling.dsl.ExecutionSpecBuilder.executorService","location":"detekt-tooling/io.github.detekt.tooling.dsl/-execution-spec-builder/executor-service.html","searchKeys":["executorService","var executorService: ExecutorService?","io.github.detekt.tooling.dsl.ExecutionSpecBuilder.executorService"]},{"name":"var failurePolicy: RulesSpec.FailurePolicy","description":"io.github.detekt.tooling.dsl.RulesSpecBuilder.failurePolicy","location":"detekt-tooling/io.github.detekt.tooling.dsl/-rules-spec-builder/failure-policy.html","searchKeys":["failurePolicy","var failurePolicy: RulesSpec.FailurePolicy","io.github.detekt.tooling.dsl.RulesSpecBuilder.failurePolicy"]},{"name":"var includes: Collection<String>","description":"io.github.detekt.tooling.dsl.ProjectSpecBuilder.includes","location":"detekt-tooling/io.github.detekt.tooling.dsl/-project-spec-builder/includes.html","searchKeys":["includes","var includes: Collection<String>","io.github.detekt.tooling.dsl.ProjectSpecBuilder.includes"]},{"name":"var inputPaths: Collection<Path>","description":"io.github.detekt.tooling.dsl.ProjectSpecBuilder.inputPaths","location":"detekt-tooling/io.github.detekt.tooling.dsl/-project-spec-builder/input-paths.html","searchKeys":["inputPaths","var inputPaths: Collection<Path>","io.github.detekt.tooling.dsl.ProjectSpecBuilder.inputPaths"]},{"name":"var jdkHome: Path?","description":"io.github.detekt.tooling.dsl.CompilerSpecBuilder.jdkHome","location":"detekt-tooling/io.github.detekt.tooling.dsl/-compiler-spec-builder/jdk-home.html","searchKeys":["jdkHome","var jdkHome: Path?","io.github.detekt.tooling.dsl.CompilerSpecBuilder.jdkHome"]},{"name":"var jvmTarget: String","description":"io.github.detekt.tooling.dsl.CompilerSpecBuilder.jvmTarget","location":"detekt-tooling/io.github.detekt.tooling.dsl/-compiler-spec-builder/jvm-target.html","searchKeys":["jvmTarget","var jvmTarget: String","io.github.detekt.tooling.dsl.CompilerSpecBuilder.jvmTarget"]},{"name":"var languageVersion: String?","description":"io.github.detekt.tooling.dsl.CompilerSpecBuilder.languageVersion","location":"detekt-tooling/io.github.detekt.tooling.dsl/-compiler-spec-builder/language-version.html","searchKeys":["languageVersion","var languageVersion: String?","io.github.detekt.tooling.dsl.CompilerSpecBuilder.languageVersion"]},{"name":"var outputChannel: Appendable","description":"io.github.detekt.tooling.dsl.LoggingSpecBuilder.outputChannel","location":"detekt-tooling/io.github.detekt.tooling.dsl/-logging-spec-builder/output-channel.html","searchKeys":["outputChannel","var outputChannel: Appendable","io.github.detekt.tooling.dsl.LoggingSpecBuilder.outputChannel"]},{"name":"var parallelAnalysis: Boolean","description":"io.github.detekt.tooling.dsl.ExecutionSpecBuilder.parallelAnalysis","location":"detekt-tooling/io.github.detekt.tooling.dsl/-execution-spec-builder/parallel-analysis.html","searchKeys":["parallelAnalysis","var parallelAnalysis: Boolean","io.github.detekt.tooling.dsl.ExecutionSpecBuilder.parallelAnalysis"]},{"name":"var parallelParsing: Boolean","description":"io.github.detekt.tooling.dsl.ExecutionSpecBuilder.parallelParsing","location":"detekt-tooling/io.github.detekt.tooling.dsl/-execution-spec-builder/parallel-parsing.html","searchKeys":["parallelParsing","var parallelParsing: Boolean","io.github.detekt.tooling.dsl.ExecutionSpecBuilder.parallelParsing"]},{"name":"var path: Path?","description":"io.github.detekt.tooling.dsl.BaselineSpecBuilder.path","location":"detekt-tooling/io.github.detekt.tooling.dsl/-baseline-spec-builder/path.html","searchKeys":["path","var path: Path?","io.github.detekt.tooling.dsl.BaselineSpecBuilder.path"]},{"name":"var plugins: ExtensionsSpec.Plugins?","description":"io.github.detekt.tooling.dsl.ExtensionsSpecBuilder.plugins","location":"detekt-tooling/io.github.detekt.tooling.dsl/-extensions-spec-builder/plugins.html","searchKeys":["plugins","var plugins: ExtensionsSpec.Plugins?","io.github.detekt.tooling.dsl.ExtensionsSpecBuilder.plugins"]},{"name":"var reports: MutableCollection<ReportsSpec.Report>","description":"io.github.detekt.tooling.dsl.ReportsSpecBuilder.reports","location":"detekt-tooling/io.github.detekt.tooling.dsl/-reports-spec-builder/reports.html","searchKeys":["reports","var reports: MutableCollection<ReportsSpec.Report>","io.github.detekt.tooling.dsl.ReportsSpecBuilder.reports"]},{"name":"var resources: Collection<URL>","description":"io.github.detekt.tooling.dsl.ConfigSpecBuilder.resources","location":"detekt-tooling/io.github.detekt.tooling.dsl/-config-spec-builder/resources.html","searchKeys":["resources","var resources: Collection<URL>","io.github.detekt.tooling.dsl.ConfigSpecBuilder.resources"]},{"name":"var runPolicy: RulesSpec.RunPolicy","description":"io.github.detekt.tooling.dsl.RulesSpecBuilder.runPolicy","location":"detekt-tooling/io.github.detekt.tooling.dsl/-rules-spec-builder/run-policy.html","searchKeys":["runPolicy","var runPolicy: RulesSpec.RunPolicy","io.github.detekt.tooling.dsl.RulesSpecBuilder.runPolicy"]},{"name":"var shouldCreateDuringAnalysis: Boolean","description":"io.github.detekt.tooling.dsl.BaselineSpecBuilder.shouldCreateDuringAnalysis","location":"detekt-tooling/io.github.detekt.tooling.dsl/-baseline-spec-builder/should-create-during-analysis.html","searchKeys":["shouldCreateDuringAnalysis","var shouldCreateDuringAnalysis: Boolean","io.github.detekt.tooling.dsl.BaselineSpecBuilder.shouldCreateDuringAnalysis"]},{"name":"var shouldValidateBeforeAnalysis: Boolean?","description":"io.github.detekt.tooling.dsl.ConfigSpecBuilder.shouldValidateBeforeAnalysis","location":"detekt-tooling/io.github.detekt.tooling.dsl/-config-spec-builder/should-validate-before-analysis.html","searchKeys":["shouldValidateBeforeAnalysis","var shouldValidateBeforeAnalysis: Boolean?","io.github.detekt.tooling.dsl.ConfigSpecBuilder.shouldValidateBeforeAnalysis"]},{"name":"var useDefaultConfig: Boolean","description":"io.github.detekt.tooling.dsl.ConfigSpecBuilder.useDefaultConfig","location":"detekt-tooling/io.github.detekt.tooling.dsl/-config-spec-builder/use-default-config.html","searchKeys":["useDefaultConfig","var useDefaultConfig: Boolean","io.github.detekt.tooling.dsl.ConfigSpecBuilder.useDefaultConfig"]}]